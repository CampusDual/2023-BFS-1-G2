/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/report-on-demand/apply-configuration/apply-configuration-dialog.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { SelectionModel } from '@angular/cdk/collections';
import { Component, Inject, Optional, ViewChild } from '@angular/core';
import { MAT_DIALOG_DATA, MatDialogRef, MatSelectionList } from '@angular/material';
import { DialogService, Util } from 'ontimize-web-ngx';
import { OReportService } from '../../../services/o-report.service';
var ApplyConfigurationDialogComponent = /** @class */ (function () {
    function ApplyConfigurationDialogComponent(dialogService, reportsService, dialogo, data) {
        this.dialogService = dialogService;
        this.reportsService = reportsService;
        this.dialogo = dialogo;
        this.data = data;
        this.configurationListData = [];
        this.getConfigurations();
    }
    /**
     * @return {?}
     */
    ApplyConfigurationDialogComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.configurationList.selectedOptions = new SelectionModel(false);
    };
    /**
     * @return {?}
     */
    ApplyConfigurationDialogComponent.prototype.loadConfiguration = /**
     * @return {?}
     */
    function () {
        this.dialogo.close(this.selectedConfiguration);
    };
    /**
     * @return {?}
     */
    ApplyConfigurationDialogComponent.prototype.remove = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.dialogService.confirm('CONFIRM', 'TABLE.DIALOG.CONFIRM_REMOVE_CONFIGURATION').then((/**
         * @param {?} result
         * @return {?}
         */
        function (result) {
            if (result) {
                _this.reportsService.deletePreferences(_this.selectedConfiguration.ID).subscribe((/**
                 * @param {?} res
                 * @return {?}
                 */
                function (res) {
                    if (res && res.code === 0) {
                        _this.getConfigurations();
                    }
                }));
            }
        }));
    };
    /**
     * @param {?} option
     * @return {?}
     */
    ApplyConfigurationDialogComponent.prototype.onClickConfigurationList = /**
     * @param {?} option
     * @return {?}
     */
    function (option) {
        this.selectedConfiguration = option;
    };
    /**
     * @return {?}
     */
    ApplyConfigurationDialogComponent.prototype.getConfigurations = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.reportsService.getPreferences(this.data.entity, this.data.service).subscribe((/**
         * @param {?} resp
         * @return {?}
         */
        function (resp) {
            if (resp.isSuccessful()) {
                _this.setDataArray(resp.data);
            }
        }));
    };
    /**
     * @param {?} data
     * @return {?}
     */
    ApplyConfigurationDialogComponent.prototype.setDataArray = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (Util.isArray(data)) {
            this.configurationListData = data;
        }
        else {
            this.configurationListData = [];
        }
    };
    ApplyConfigurationDialogComponent.decorators = [
        { type: Component, args: [{
                    selector: 'apply-configuration-dialog',
                    template: "<span mat-dialog-title>{{ 'TABLE.BUTTONS.APPLY_CONFIGURATION' | oTranslate }}</span>\n<mat-dialog-content fxLayout=\"column\">\n  <div mat-subheader>{{ 'TABLE.DIALOG.APPLY_CONFIGURATION' | oTranslate }}</div>\n  <mat-selection-list #configurationList dense class=\"apply-configuration-dialog-list\">\n    <mat-list-option (click)=\"onClickConfigurationList(configuration)\" checkboxPosition=\"before\"\n      *ngFor=\"let configuration of configurationListData\" [value]=\"configuration\">\n      <span matLine>{{ configuration.NAME }}</span>\n      <span matLine>{{ configuration.DESCRIPTION }}</span>\n    </mat-list-option>\n  </mat-selection-list>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n  <button type=\"button\" (click)=\"remove()\" mat-stroked-button [disabled]=\"configurationList.selectedOptions.selected.length!==1\"\n    class=\"o-button-danger\">\n    {{ 'DELETE' | oTranslate }}\n  </button>\n  <span fxFlex></span>\n  <button type=\"button\" mat-stroked-button [mat-dialog-close]=\"false\" class=\"o-button-default\">{{ 'CANCEL' | oTranslate }}</button>\n  <button type=\"button\" (click)=\"loadConfiguration()\" mat-stroked-button [mat-dialog-close]=\"true\"\n    [disabled]=\"configurationList.selectedOptions.selected.length!==1\" class=\"o-button-primary\">{{ 'OK' | oTranslate}}</button>\n</mat-dialog-actions>\n"
                }] }
    ];
    /** @nocollapse */
    ApplyConfigurationDialogComponent.ctorParameters = function () { return [
        { type: DialogService },
        { type: OReportService },
        { type: MatDialogRef },
        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DIALOG_DATA,] }] }
    ]; };
    ApplyConfigurationDialogComponent.propDecorators = {
        configurationList: [{ type: ViewChild, args: [MatSelectionList, { static: true },] }]
    };
    return ApplyConfigurationDialogComponent;
}());
export { ApplyConfigurationDialogComponent };
if (false) {
    /**
     * @type {?}
     * @protected
     */
    ApplyConfigurationDialogComponent.prototype.configurationList;
    /** @type {?} */
    ApplyConfigurationDialogComponent.prototype.configurationListData;
    /** @type {?} */
    ApplyConfigurationDialogComponent.prototype.selectedConfiguration;
    /**
     * @type {?}
     * @private
     */
    ApplyConfigurationDialogComponent.prototype.dialogService;
    /**
     * @type {?}
     * @private
     */
    ApplyConfigurationDialogComponent.prototype.reportsService;
    /** @type {?} */
    ApplyConfigurationDialogComponent.prototype.dialogo;
    /** @type {?} */
    ApplyConfigurationDialogComponent.prototype.data;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwbHktY29uZmlndXJhdGlvbi1kaWFsb2cuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vb250aW1pemUtd2ViLW5neC1yZXBvcnQvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9yZXBvcnQtb24tZGVtYW5kL2FwcGx5LWNvbmZpZ3VyYXRpb24vYXBwbHktY29uZmlndXJhdGlvbi1kaWFsb2cuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzFELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFVLFFBQVEsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDL0UsT0FBTyxFQUFFLGVBQWUsRUFBRSxZQUFZLEVBQUUsZ0JBQWdCLEVBQWlCLE1BQU0sbUJBQW1CLENBQUM7QUFDbkcsT0FBTyxFQUFFLGFBQWEsRUFBRSxJQUFJLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUN2RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFJcEU7SUFZRSwyQ0FDVSxhQUE0QixFQUM1QixjQUE4QixFQUMvQixPQUF3RCxFQUNuQixJQUFTO1FBSDdDLGtCQUFhLEdBQWIsYUFBYSxDQUFlO1FBQzVCLG1CQUFjLEdBQWQsY0FBYyxDQUFnQjtRQUMvQixZQUFPLEdBQVAsT0FBTyxDQUFpRDtRQUNuQixTQUFJLEdBQUosSUFBSSxDQUFLO1FBUGhELDBCQUFxQixHQUEyQixFQUFFLENBQUM7UUFReEQsSUFBSSxDQUFDLGlCQUFpQixFQUFFLENBQUM7SUFDM0IsQ0FBQzs7OztJQUNELG9EQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxlQUFlLEdBQUcsSUFBSSxjQUFjLENBQWdCLEtBQUssQ0FBQyxDQUFDO0lBQ3BGLENBQUM7Ozs7SUFFRCw2REFBaUI7OztJQUFqQjtRQUNFLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO0lBQ2pELENBQUM7Ozs7SUFFRCxrREFBTTs7O0lBQU47UUFBQSxpQkFVQztRQVRDLElBQUksQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSwyQ0FBMkMsQ0FBQyxDQUFDLElBQUk7Ozs7UUFBQyxVQUFBLE1BQU07WUFDNUYsSUFBSSxNQUFNLEVBQUU7Z0JBQ1YsS0FBSSxDQUFDLGNBQWMsQ0FBQyxpQkFBaUIsQ0FBQyxLQUFJLENBQUMscUJBQXFCLENBQUMsRUFBRSxDQUFDLENBQUMsU0FBUzs7OztnQkFBQyxVQUFBLEdBQUc7b0JBQ2hGLElBQUksR0FBRyxJQUFJLEdBQUcsQ0FBQyxJQUFJLEtBQUssQ0FBQyxFQUFFO3dCQUN6QixLQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztxQkFDMUI7Z0JBQ0gsQ0FBQyxFQUFDLENBQUM7YUFDSjtRQUNILENBQUMsRUFBQyxDQUFDO0lBQ0wsQ0FBQzs7Ozs7SUFDRCxvRUFBd0I7Ozs7SUFBeEIsVUFBeUIsTUFBTTtRQUM3QixJQUFJLENBQUMscUJBQXFCLEdBQUcsTUFBTSxDQUFDO0lBQ3RDLENBQUM7Ozs7SUFFRCw2REFBaUI7OztJQUFqQjtRQUFBLGlCQU1DO1FBTEMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxTQUFTOzs7O1FBQUMsVUFBQSxJQUFJO1lBQ3BGLElBQUksSUFBSSxDQUFDLFlBQVksRUFBRSxFQUFFO2dCQUN2QixLQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUM5QjtRQUNILENBQUMsRUFBQyxDQUFDO0lBQ0wsQ0FBQzs7Ozs7SUFFRCx3REFBWTs7OztJQUFaLFVBQWEsSUFBUztRQUNwQixJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDdEIsSUFBSSxDQUFDLHFCQUFxQixHQUFHLElBQUksQ0FBQztTQUNuQzthQUFNO1lBQ0wsSUFBSSxDQUFDLHFCQUFxQixHQUFHLEVBQUUsQ0FBQTtTQUNoQztJQUNILENBQUM7O2dCQXhERixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLDRCQUE0QjtvQkFDdEMscTFDQUEwRDtpQkFDM0Q7Ozs7Z0JBUlEsYUFBYTtnQkFDYixjQUFjO2dCQUZHLFlBQVk7Z0RBc0JqQyxRQUFRLFlBQUksTUFBTSxTQUFDLGVBQWU7OztvQ0FWcEMsU0FBUyxTQUFDLGdCQUFnQixFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTs7SUFtRC9DLHdDQUFDO0NBQUEsQUF6REQsSUF5REM7U0FwRFksaUNBQWlDOzs7Ozs7SUFDNUMsOERBQzhDOztJQUU5QyxrRUFBMEQ7O0lBQzFELGtFQUFtRDs7Ozs7SUFHakQsMERBQW9DOzs7OztJQUNwQywyREFBc0M7O0lBQ3RDLG9EQUErRDs7SUFDL0QsaURBQXFEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2VsZWN0aW9uTW9kZWwgfSBmcm9tICdAYW5ndWxhci9jZGsvY29sbGVjdGlvbnMnO1xuaW1wb3J0IHsgQ29tcG9uZW50LCBJbmplY3QsIE9uSW5pdCwgT3B0aW9uYWwsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTUFUX0RJQUxPR19EQVRBLCBNYXREaWFsb2dSZWYsIE1hdFNlbGVjdGlvbkxpc3QsIE1hdExpc3RPcHRpb24gfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbCc7XG5pbXBvcnQgeyBEaWFsb2dTZXJ2aWNlLCBVdGlsIH0gZnJvbSAnb250aW1pemUtd2ViLW5neCc7XG5pbXBvcnQgeyBPUmVwb3J0U2VydmljZSB9IGZyb20gJy4uLy4uLy4uL3NlcnZpY2VzL28tcmVwb3J0LnNlcnZpY2UnO1xuaW1wb3J0IHsgT1JlcG9ydENvbmZpZ3VyYXRpb24gfSBmcm9tICcuLi8uLi8uLi90eXBlcy9yZXBvcnQtY29uZmlndXJhdGlvbi50eXBlJztcblxuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhcHBseS1jb25maWd1cmF0aW9uLWRpYWxvZycsXG4gIHRlbXBsYXRlVXJsOiAnLi9hcHBseS1jb25maWd1cmF0aW9uLWRpYWxvZy5jb21wb25lbnQuaHRtbCdcbn0pXG5cbmV4cG9ydCBjbGFzcyBBcHBseUNvbmZpZ3VyYXRpb25EaWFsb2dDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBAVmlld0NoaWxkKE1hdFNlbGVjdGlvbkxpc3QsIHsgc3RhdGljOiB0cnVlIH0pXG4gIHByb3RlY3RlZCBjb25maWd1cmF0aW9uTGlzdDogTWF0U2VsZWN0aW9uTGlzdDtcblxuICBwdWJsaWMgY29uZmlndXJhdGlvbkxpc3REYXRhOiBPUmVwb3J0Q29uZmlndXJhdGlvbltdID0gW107XG4gIHB1YmxpYyBzZWxlY3RlZENvbmZpZ3VyYXRpb246IE9SZXBvcnRDb25maWd1cmF0aW9uO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgZGlhbG9nU2VydmljZTogRGlhbG9nU2VydmljZSxcbiAgICBwcml2YXRlIHJlcG9ydHNTZXJ2aWNlOiBPUmVwb3J0U2VydmljZSxcbiAgICBwdWJsaWMgZGlhbG9nbzogTWF0RGlhbG9nUmVmPEFwcGx5Q29uZmlndXJhdGlvbkRpYWxvZ0NvbXBvbmVudD4sXG4gICAgQE9wdGlvbmFsKCkgQEluamVjdChNQVRfRElBTE9HX0RBVEEpIHB1YmxpYyBkYXRhOiBhbnkpIHtcbiAgICB0aGlzLmdldENvbmZpZ3VyYXRpb25zKCk7XG4gIH1cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgdGhpcy5jb25maWd1cmF0aW9uTGlzdC5zZWxlY3RlZE9wdGlvbnMgPSBuZXcgU2VsZWN0aW9uTW9kZWw8TWF0TGlzdE9wdGlvbj4oZmFsc2UpO1xuICB9XG5cbiAgbG9hZENvbmZpZ3VyYXRpb24oKTogdm9pZCB7XG4gICAgdGhpcy5kaWFsb2dvLmNsb3NlKHRoaXMuc2VsZWN0ZWRDb25maWd1cmF0aW9uKTtcbiAgfVxuXG4gIHJlbW92ZSgpOiB2b2lkIHtcbiAgICB0aGlzLmRpYWxvZ1NlcnZpY2UuY29uZmlybSgnQ09ORklSTScsICdUQUJMRS5ESUFMT0cuQ09ORklSTV9SRU1PVkVfQ09ORklHVVJBVElPTicpLnRoZW4ocmVzdWx0ID0+IHtcbiAgICAgIGlmIChyZXN1bHQpIHtcbiAgICAgICAgdGhpcy5yZXBvcnRzU2VydmljZS5kZWxldGVQcmVmZXJlbmNlcyh0aGlzLnNlbGVjdGVkQ29uZmlndXJhdGlvbi5JRCkuc3Vic2NyaWJlKHJlcyA9PiB7XG4gICAgICAgICAgaWYgKHJlcyAmJiByZXMuY29kZSA9PT0gMCkge1xuICAgICAgICAgICAgdGhpcy5nZXRDb25maWd1cmF0aW9ucygpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbiAgb25DbGlja0NvbmZpZ3VyYXRpb25MaXN0KG9wdGlvbikge1xuICAgIHRoaXMuc2VsZWN0ZWRDb25maWd1cmF0aW9uID0gb3B0aW9uO1xuICB9XG5cbiAgZ2V0Q29uZmlndXJhdGlvbnMoKSB7XG4gICAgdGhpcy5yZXBvcnRzU2VydmljZS5nZXRQcmVmZXJlbmNlcyh0aGlzLmRhdGEuZW50aXR5LCB0aGlzLmRhdGEuc2VydmljZSkuc3Vic2NyaWJlKHJlc3AgPT4ge1xuICAgICAgaWYgKHJlc3AuaXNTdWNjZXNzZnVsKCkpIHtcbiAgICAgICAgdGhpcy5zZXREYXRhQXJyYXkocmVzcC5kYXRhKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHNldERhdGFBcnJheShkYXRhOiBhbnkpIHtcbiAgICBpZiAoVXRpbC5pc0FycmF5KGRhdGEpKSB7XG4gICAgICB0aGlzLmNvbmZpZ3VyYXRpb25MaXN0RGF0YSA9IGRhdGE7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuY29uZmlndXJhdGlvbkxpc3REYXRhID0gW11cbiAgICB9XG4gIH1cbn0iXX0=