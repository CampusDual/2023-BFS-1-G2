/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/report-on-demand/report-on-demand/report-on-demand.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { moveItemInArray } from '@angular/cdk/drag-drop';
import { Injector, ViewChild, ViewEncapsulation } from '@angular/core';
import { Component, Inject } from '@angular/core';
import { MatSelectionList } from '@angular/material';
import { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';
import { AppConfig, DialogService, OTableComponent, OTranslateService, SnackBarService, Util } from 'ontimize-web-ngx';
import { OReportService } from '../../../services/o-report.service';
import { DefaultOReportPreferences } from '../../../types/report-preferences.type';
import { Utils } from '../../../util/utils';
import { ApplyConfigurationDialogComponent } from '../apply-configuration/apply-configuration-dialog.component';
import { SavePreferencesDialogComponent } from '../save-preferences-dialog/save-preferences-dialog.component';
import { SelectFunctionDialogComponent } from '../select-function-dialog/select-function-dialog.component';
import { StyleDialogComponent } from '../style-dialog/style-dialog.component';
var ReportOnDemandComponent = /** @class */ (function () {
    function ReportOnDemandComponent(injector, dialogRef, data) {
        this.injector = injector;
        this.dialogRef = dialogRef;
        this.data = data;
        this.orientations = [{ text: "vertical", value: true }, { text: "horizontal", value: false }];
        this.functionsData = [];
        this.initialFunctionsData = [];
        this.appliedConfiguration = false;
        this.selectedFunctions = [];
        this.stylesArray = [
            { value: 'grid', viewValue: 'GRID' },
            { value: 'rowNumber', viewValue: 'ROW_NUMBER' },
            { value: 'columnName', viewValue: 'COLUMNS_NAMES' },
            { value: 'backgroundOnOddRows', viewValue: 'BACKGROUND_ODD_ROWS' },
            { value: 'hideGroupDetails', viewValue: 'GROUP_DETAILS' },
            { value: 'groupNewPage', viewValue: 'GROUP_PAGE' },
            { value: 'firstGroupNewPage', viewValue: 'FIRST_GROUP_PAGE' }
        ];
        this.columnsOrderBy = [];
        this.openedSidenav = true;
        this.fullscreen = false;
        this.blankPdf = 'JVBERi0xLjYKJcOkw7zDtsOfCjIgMCBvYmoKPDwvTGVuZ3RoIDMgMCBSL0ZpbHRlci9GbGF0ZURlY29kZT4+CnN0cmVhbQp4nDPQM1Qo5ypUMFAw0DMwslAwtTTVMzI3VbAwMdSzMDNUKErlCtdSyOMKVAAAtxIIrgplbmRzdHJlYW0KZW5kb2JqCgozIDAgb2JqCjUwCmVuZG9iagoKNSAwIG9iago8PAo+PgplbmRvYmoKCjYgMCBvYmoKPDwvRm9udCA1IDAgUgovUHJvY1NldFsvUERGL1RleHRdCj4+CmVuZG9iagoKMSAwIG9iago8PC9UeXBlL1BhZ2UvUGFyZW50IDQgMCBSL1Jlc291cmNlcyA2IDAgUi9NZWRpYUJveFswIDAgNTk1LjMwMzkzNzAwNzg3NCA4NDEuODg5NzYzNzc5NTI4XS9Hcm91cDw8L1MvVHJhbnNwYXJlbmN5L0NTL0RldmljZVJHQi9JIHRydWU+Pi9Db250ZW50cyAyIDAgUj4+CmVuZG9iagoKNCAwIG9iago8PC9UeXBlL1BhZ2VzCi9SZXNvdXJjZXMgNiAwIFIKL01lZGlhQm94WyAwIDAgNTk1IDg0MSBdCi9LaWRzWyAxIDAgUiBdCi9Db3VudCAxPj4KZW5kb2JqCgo3IDAgb2JqCjw8L1R5cGUvQ2F0YWxvZy9QYWdlcyA0IDAgUgovT3BlbkFjdGlvblsxIDAgUiAvWFlaIG51bGwgbnVsbCAwXQovTGFuZyhlcy1FUykKPj4KZW5kb2JqCgo4IDAgb2JqCjw8L0F1dGhvcjxGRUZGMDA1MDAwNjEwMDc0MDA3MjAwNjkwMDYzMDA2OTAwNjEwMDIwMDA0RDAwNjEwMDcyMDA3NDAwRUQwMDZFMDA2NTAwN0EwMDIwMDA1NDAwNjkwMDZDMDA3NjAwNjU+Ci9DcmVhdG9yPEZFRkYwMDU3MDA3MjAwNjkwMDc0MDA2NTAwNzI+Ci9Qcm9kdWNlcjxGRUZGMDA0QzAwNjkwMDYyMDA3MjAwNjUwMDRGMDA2NjAwNjYwMDY5MDA2MzAwNjUwMDIwMDAzNzAwMkUwMDMxPgovQ3JlYXRpb25EYXRlKEQ6MjAyMjA1MTAxNDUyMDYrMDInMDAnKT4+CmVuZG9iagoKeHJlZgowIDkKMDAwMDAwMDAwMCA2NTUzNSBmIAowMDAwMDAwMjM0IDAwMDAwIG4gCjAwMDAwMDAwMTkgMDAwMDAgbiAKMDAwMDAwMDE0MCAwMDAwMCBuIAowMDAwMDAwNDAyIDAwMDAwIG4gCjAwMDAwMDAxNTkgMDAwMDAgbiAKMDAwMDAwMDE4MSAwMDAwMCBuIAowMDAwMDAwNTAwIDAwMDAwIG4gCjAwMDAwMDA1OTYgMDAwMDAgbiAKdHJhaWxlcgo8PC9TaXplIDkvUm9vdCA3IDAgUgovSW5mbyA4IDAgUgovSUQgWyA8RDdBODhCRTRFREFDRkU1RDFGMTIwMzNFMDUyN0JERkU+CjxEN0E4OEJFNEVEQUNGRTVEMUYxMjAzM0UwNTI3QkRGRT4gXQovRG9jQ2hlY2tzdW0gLzgwNTA5NDU4QjgyN0RCRDQ2QzlEODdBMjY4NjdCNEFDCj4+CnN0YXJ0eHJlZgo4NzYKJSVFT0YK';
        this.appConfig = this.injector.get(AppConfig);
        this.translateService = this.injector.get(OTranslateService);
        this.snackBarService = this.injector.get(SnackBarService);
        this.reportService = this.injector.get(OReportService);
        this.dialogService = this.injector.get(DialogService);
        this.dialog = this.injector.get(MatDialog);
    }
    /**
     * @return {?}
     */
    ReportOnDemandComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.initialize();
    };
    /**
     * @protected
     * @return {?}
     */
    ReportOnDemandComponent.prototype.initialize = /**
     * @protected
     * @return {?}
     */
    function () {
        this.table = this.data;
        this.language = this.translateService.getCurrentLang();
        this.service = this.table.service;
        this.columnsArray = this.parseColumnsVisible();
        this.initialColumnsData = this.parseReportColumn(this.columnsArray);
        this.initialColumnsToGroupData = this.columnsArray;
        this.currentConfiguration = { ENTITY: this.table.entity };
        this.initializeReportPreferences();
        this.getFunctions();
    };
    /**
     * @param {?=} serviceName
     * @return {?}
     */
    ReportOnDemandComponent.prototype.getDefaultServiceConfiguration = /**
     * @param {?=} serviceName
     * @return {?}
     */
    function (serviceName) {
        /** @type {?} */
        var configuration = this.appConfig.getServiceConfiguration();
        /** @type {?} */
        var servConfig = {};
        if (serviceName && configuration.hasOwnProperty(serviceName)) {
            servConfig = configuration[serviceName];
        }
        return servConfig;
    };
    /**
     * @return {?}
     */
    ReportOnDemandComponent.prototype.previewReport = /**
     * @return {?}
     */
    function () {
        this.openReport();
    };
    /**
     * @return {?}
     */
    ReportOnDemandComponent.prototype.clearCurrentPreferences = /**
     * @return {?}
     */
    function () {
        this.initializeReportPreferences();
        if (this.columnsList) {
            this.columnsList.deselectAll();
        }
        if (this.functionsList) {
            this.functionsList.deselectAll();
        }
        if (this.orderByList) {
            this.orderByList.deselectAll();
        }
    };
    /**
     * @protected
     * @return {?}
     */
    ReportOnDemandComponent.prototype.initializeReportPreferences = /**
     * @protected
     * @return {?}
     */
    function () {
        /* initialize columnsData and functionsData because they are modified by
        changing settings */
        this.columnsData = Utils.cloneObject(this.initialColumnsData);
        this.functionsData = Utils.cloneObject(this.initialFunctionsData);
        this.columnsToGroupData = Utils.cloneObject(this.initialColumnsToGroupData);
        this.columnsOrderBy = [];
        this.pdf = this.blankPdf;
        this.currentPreference = new DefaultOReportPreferences();
        this.currentPreference.entity = this.table.entity;
        this.currentPreference.service = this.table.service;
    };
    /**
     * @protected
     * @return {?}
     */
    ReportOnDemandComponent.prototype.parseColumnsVisible = /**
     * @protected
     * @return {?}
     */
    function () {
        /** @type {?} */
        var columnsArray = Util.parseArray(this.table.columns);
        return this.table.oTableOptions.columns.filter((/**
         * @param {?} oCol
         * @return {?}
         */
        function (oCol) { return oCol.type !== "image" && oCol.visible && columnsArray.findIndex((/**
         * @param {?} column
         * @return {?}
         */
        function (column) { return column === oCol.attr; })) > -1; })).map((/**
         * @param {?} x
         * @return {?}
         */
        function (x) { return x.attr; }));
    };
    /**
     * @protected
     * @param {?} columns
     * @return {?}
     */
    ReportOnDemandComponent.prototype.parseReportColumn = /**
     * @protected
     * @param {?} columns
     * @return {?}
     */
    function (columns) {
        var _this = this;
        return columns.map((/**
         * @param {?} column
         * @return {?}
         */
        function (column) {
            /** @type {?} */
            var reportColumn = {
                id: column, name: _this.translateService.get(column)
            };
            /** @type {?} */
            var columnStyle = _this.parseColumnStyle(column);
            if (Util.isObject(columnStyle) && Object.keys(columnStyle).length > 0) {
                reportColumn.columnStyle = columnStyle;
            }
            return reportColumn;
        }));
    };
    /**
     * @protected
     * @param {?} column
     * @return {?}
     */
    ReportOnDemandComponent.prototype.parseColumnStyle = /**
     * @protected
     * @param {?} column
     * @return {?}
     */
    function (column) {
        /** @type {?} */
        var columnStyle = {};
        /** @type {?} */
        var renderer = this.createRenderer(column);
        if (Util.isDefined(renderer) && Util.isDefined(renderer.type)) {
            columnStyle.renderer = renderer;
        }
        return columnStyle;
    };
    /**
     * @protected
     * @param {?} columnsOrderBy
     * @return {?}
     */
    ReportOnDemandComponent.prototype.parseColumnsOrderBy = /**
     * @protected
     * @param {?} columnsOrderBy
     * @return {?}
     */
    function (columnsOrderBy) {
        return columnsOrderBy.map((/**
         * @param {?} column
         * @return {?}
         */
        function (column) {
            return { columnId: column.columnId, columnName: column.name, ascendent: column.ascendent };
        }));
    };
    /**
     * @protected
     * @return {?}
     */
    ReportOnDemandComponent.prototype.openReport = /**
     * @protected
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var serviceConfiguration = this.getDefaultServiceConfiguration(this.currentPreference.service);
        /** @type {?} */
        var pathService;
        if (Util.isObject(serviceConfiguration) && serviceConfiguration.hasOwnProperty('path')) {
            pathService = serviceConfiguration.path;
        }
        this.reportService.createReport({
            "title": this.currentPreference.title, "groups": this.currentPreference.groups, "entity": this.currentPreference.entity, "path": pathService,
            "service": this.currentPreference.service, "vertical": this.currentPreference.vertical, "functions": this.currentPreference.functions,
            "style": this.currentPreference.style, "subtitle": this.currentPreference.subtitle, "columns": this.currentPreference.columns, "orderBy": this.currentPreference.orderBy,
            "language": this.language
        }).subscribe((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            if (res && res.data.length && res.code === 0) {
                _this.pdf = res.data[0].file;
            }
        }));
    };
    /**
     * @return {?}
     */
    ReportOnDemandComponent.prototype.getFunctions = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.reportService.getFunctions({
            "columns": this.columnsArray, "entity": this.currentPreference.entity,
            "service": this.currentPreference.service, "language": this.language
        }).subscribe((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            if (res && res.data.length && res.code === 0) {
                _this.functionsData = _this.parseDefaultFunctionsData(res.data[0].functions);
                _this.initialFunctionsData = Utils.cloneObject(_this.functionsData);
            }
        }));
    };
    /**
     * @param {?} listColumns
     * @return {?}
     */
    ReportOnDemandComponent.prototype.parseDefaultFunctionsData = /**
     * @param {?} listColumns
     * @return {?}
     */
    function (listColumns) {
        var _this = this;
        return listColumns.filter((/**
         * @param {?} column
         * @return {?}
         */
        function (column) {
            return _this.columnsData.
                findIndex((/**
             * @param {?} columnData
             * @return {?}
             */
            function (columnData) {
                return columnData.columnStyle && columnData.columnStyle.renderer && columnData.columnStyle.renderer.type === 'service' && columnData.id === column.columnName;
            })) === -1;
        }));
    };
    /**
     * Checks preference data is consistent with the table data
     */
    /**
     * Checks preference data is consistent with the table data
     * @private
     * @return {?}
     */
    ReportOnDemandComponent.prototype.checkPreferenceData = /**
     * Checks preference data is consistent with the table data
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.currentPreference.columns = this.currentPreference.columns.filter((/**
         * @param {?} column
         * @return {?}
         */
        function (column) { return _this.initialColumnsData.findIndex((/**
         * @param {?} columnData
         * @return {?}
         */
        function (columnData) { return columnData.id === column.id; })) > -1; }));
        this.currentPreference.groups = this.currentPreference.groups.filter((/**
         * @param {?} column
         * @return {?}
         */
        function (column) { return _this.initialColumnsToGroupData.findIndex((/**
         * @param {?} columnData
         * @return {?}
         */
        function (columnData) { return columnData === column; })) > -1; }));
        this.currentPreference.functions = this.currentPreference.functions.filter((/**
         * @param {?} column
         * @return {?}
         */
        function (column) { return _this.initialFunctionsData.findIndex((/**
         * @param {?} columnData
         * @return {?}
         */
        function (columnData) { return columnData.columnName === column.columnName; })) > -1; }));
        this.currentPreference.orderBy = this.currentPreference.orderBy.filter((/**
         * @param {?} column
         * @return {?}
         */
        function (column) { return _this.columnsOrderBy.findIndex((/**
         * @param {?} columnData
         * @return {?}
         */
        function (columnData) { return columnData.columnId === column.columnId; })) > -1; }));
    };
    /**
     * @param {?} configuration
     * @return {?}
     */
    ReportOnDemandComponent.prototype.applyConfiguration = /**
     * @param {?} configuration
     * @return {?}
     */
    function (configuration) {
        var _this = this;
        this.clearCurrentPreferences();
        this.currentConfiguration = configuration;
        this.currentPreference = JSON.parse(this.currentConfiguration.PREFERENCES);
        this.currentPreference.columns.forEach((/**
         * @param {?} column
         * @return {?}
         */
        function (column) { return _this.updateColumnsOrderByData(column.id); }));
        this.checkPreferenceData();
        // Set the functionsData with the data that is loaded from the configuration because it changes
        this.functionsData = this.functionsData.map((/**
         * @param {?} functionData
         * @return {?}
         */
        function (functionData) {
            /** @type {?} */
            var index = _this.currentPreference.functions.findIndex((/**
             * @param {?} x
             * @return {?}
             */
            function (x) { return x.columnName === functionData.columnName; }));
            if (index > -1) {
                functionData.type = _this.currentPreference.functions[index].type;
            }
            return functionData;
        }));
        this.columnsData.sort((/**
         * @param {?} a
         * @param {?} b
         * @return {?}
         */
        function (a, b) {
            /** @type {?} */
            var indexA = _this.currentPreference.columns.findIndex((/**
             * @param {?} x
             * @return {?}
             */
            function (x) { return x.id === a.id; }));
            /** @type {?} */
            var indexB = _this.currentPreference.columns.findIndex((/**
             * @param {?} x
             * @return {?}
             */
            function (x) { return x.id === b.id; }));
            return _this.getSortIndex(indexA, indexB);
        }));
        this.columnsOrderBy.sort((/**
         * @param {?} a
         * @param {?} b
         * @return {?}
         */
        function (a, b) {
            /** @type {?} */
            var indexA = _this.currentPreference.orderBy.findIndex((/**
             * @param {?} x
             * @return {?}
             */
            function (x) { return x.columnId === a.columnId; }));
            /** @type {?} */
            var indexB = _this.currentPreference.orderBy.findIndex((/**
             * @param {?} x
             * @return {?}
             */
            function (x) { return x.columnId === b.columnId; }));
            return _this.getSortIndex(indexA, indexB);
        }));
        this.columnsToGroupData.sort((/**
         * @param {?} a
         * @param {?} b
         * @return {?}
         */
        function (a, b) {
            /** @type {?} */
            var indexA = _this.currentPreference.groups.findIndex((/**
             * @param {?} x
             * @return {?}
             */
            function (x) { return x === a; }));
            /** @type {?} */
            var indexB = _this.currentPreference.groups.findIndex((/**
             * @param {?} x
             * @return {?}
             */
            function (x) { return x === b; }));
            return _this.getSortIndex(indexA, indexB);
        }));
    };
    /**
     * @private
     * @param {?} indexA
     * @param {?} indexB
     * @return {?}
     */
    ReportOnDemandComponent.prototype.getSortIndex = /**
     * @private
     * @param {?} indexA
     * @param {?} indexB
     * @return {?}
     */
    function (indexA, indexB) {
        if (indexA === -1) {
            return 0;
        }
        if (indexB === -1) {
            return indexB;
        }
        else {
            return indexA - indexB;
        }
    };
    /**
     * @param {?} event
     * @param {?} id
     * @return {?}
     */
    ReportOnDemandComponent.prototype.showColumnStyleDialog = /**
     * @param {?} event
     * @param {?} id
     * @return {?}
     */
    function (event, id) {
        var _this = this;
        event.stopPropagation();
        /** @type {?} */
        var columnData = Object.assign({}, this.currentPreference.columns.find((/**
         * @param {?} x
         * @return {?}
         */
        function (x) { return x.id === id; })));
        if (Util.isDefined(columnData)) {
            this.dialog
                .open(StyleDialogComponent, {
                data: columnData,
                panelClass: ['o-dialog-class', 'o-table-dialog']
            })
                .afterClosed()
                .subscribe((/**
             * @param {?} data
             * @return {?}
             */
            function (data) {
                if (Util.isDefined(data) && data) {
                    /** @type {?} */
                    var column = Utils.cloneObject(data);
                    _this.updateColumnStyleConfigurationData(column);
                }
            }));
        }
    };
    /**
     * @param {?} data
     * @return {?}
     */
    ReportOnDemandComponent.prototype.updateColumnStyleConfigurationData = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        /** @type {?} */
        var columns = Utils.cloneObject(this.currentPreference.columns);
        this.currentPreference.columns = [];
        /** @type {?} */
        var indexColumnData = this.columnsData.findIndex((/**
         * @param {?} x
         * @return {?}
         */
        function (x) { return x.id === data.id; }));
        if (indexColumnData > -1) {
            this.columnsData[indexColumnData] = data;
        }
        /** @type {?} */
        var indexColumnStyleData = columns.findIndex((/**
         * @param {?} x
         * @return {?}
         */
        function (x) { return x.id === data.id; }));
        if (indexColumnStyleData > -1) {
            columns[indexColumnStyleData] = data;
        }
        this.currentPreference.columns = columns;
    };
    /**
     * @param {?} event
     * @param {?} reportFunction
     * @return {?}
     */
    ReportOnDemandComponent.prototype.selectFunction = /**
     * @param {?} event
     * @param {?} reportFunction
     * @return {?}
     */
    function (event, reportFunction) {
        var _this = this;
        event.stopPropagation();
        if (reportFunction.columnName != 'TOTAL') {
            this.dialog
                .open(SelectFunctionDialogComponent, {
                data: reportFunction,
                panelClass: ['o-dialog-class', 'o-table-dialog']
            })
                .afterClosed()
                .subscribe((/**
             * @param {?} data
             * @return {?}
             */
            function (data) {
                //Updated current functions selected and functionsData
                if (data) {
                    _this.updatedFunctionData(data);
                    _this.updatedSelectFunction(data);
                }
            }));
        }
    };
    /**
     * @private
     * @param {?} data
     * @return {?}
     */
    ReportOnDemandComponent.prototype.updatedFunctionData = /**
     * @private
     * @param {?} data
     * @return {?}
     */
    function (data) {
        /** @type {?} */
        var index = this.functionsData.findIndex((/**
         * @param {?} x
         * @return {?}
         */
        function (x) { return x.columnName === data.columnName; }));
        if (index === -1) {
            this.functionsData.push(data);
        }
        else {
            this.functionsData[index] = data;
        }
    };
    /**
     * @private
     * @param {?} selectedFunction
     * @return {?}
     */
    ReportOnDemandComponent.prototype.updatedSelectFunction = /**
     * @private
     * @param {?} selectedFunction
     * @return {?}
     */
    function (selectedFunction) {
        var _this = this;
        this.currentPreference.functions.forEach((/**
         * @param {?} data
         * @param {?} i
         * @return {?}
         */
        function (data, i) {
            if (data.columnName === selectedFunction.columnName) {
                _this.currentPreference.functions[i] = data;
            }
        }));
    };
    /**
     * @return {?}
     */
    ReportOnDemandComponent.prototype.openSaveAsPreferences = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.dialog
            .open(SavePreferencesDialogComponent, {
            panelClass: ['o-dialog-class', 'o-table-dialog']
        })
            .afterClosed()
            .subscribe((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            if (Util.isDefined(data) && data) {
                _this.savePreferences(data);
            }
        }));
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ReportOnDemandComponent.prototype.dropColumns = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        moveItemInArray(this.columnsData, event.previousIndex, event.currentIndex);
        this.updateColumnsSort();
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ReportOnDemandComponent.prototype.dropGroups = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        moveItemInArray(this.columnsToGroupData, event.previousIndex, event.currentIndex);
        this.updateColumnToGroupSort();
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ReportOnDemandComponent.prototype.dropColumnsOrderBy = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        moveItemInArray(this.columnsOrderBy, event.previousIndex, event.currentIndex);
        this.updateColumnGroupBySort();
    };
    /**
     * @return {?}
     */
    ReportOnDemandComponent.prototype.updateColumnsSort = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.currentPreference.columns.sort((/**
         * @param {?} a
         * @param {?} b
         * @return {?}
         */
        function (a, b) {
            /** @type {?} */
            var indexA = _this.columnsData.findIndex((/**
             * @param {?} x
             * @return {?}
             */
            function (x) { return x.id === a.id; }));
            /** @type {?} */
            var indexB = _this.columnsData.findIndex((/**
             * @param {?} x
             * @return {?}
             */
            function (x) { return x.id === b.id; }));
            return indexA - indexB;
        }));
    };
    /**
     * @return {?}
     */
    ReportOnDemandComponent.prototype.updateColumnGroupBySort = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.currentPreference.orderBy.sort((/**
         * @param {?} a
         * @param {?} b
         * @return {?}
         */
        function (a, b) {
            /** @type {?} */
            var indexA = _this.columnsOrderBy.findIndex((/**
             * @param {?} x
             * @return {?}
             */
            function (x) { return x.columnId === a.columnId; }));
            /** @type {?} */
            var indexB = _this.columnsOrderBy.findIndex((/**
             * @param {?} x
             * @return {?}
             */
            function (x) { return x.columnId === b.columnId; }));
            return indexA - indexB;
        }));
    };
    /**
     * @return {?}
     */
    ReportOnDemandComponent.prototype.updateColumnToGroupSort = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.currentPreference.groups.sort((/**
         * @param {?} a
         * @param {?} b
         * @return {?}
         */
        function (a, b) {
            /** @type {?} */
            var indexA = _this.columnsToGroupData.findIndex((/**
             * @param {?} x
             * @return {?}
             */
            function (x) { return x === a; }));
            /** @type {?} */
            var indexB = _this.columnsToGroupData.findIndex((/**
             * @param {?} x
             * @return {?}
             */
            function (x) { return x === b; }));
            return indexA - indexB;
        }));
    };
    /**
     * @return {?}
     */
    ReportOnDemandComponent.prototype.onApplyConfigurationClicked = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.dialog.open(ApplyConfigurationDialogComponent, {
            width: 'calc((75em - 100%) * 1000)',
            maxWidth: '65vw',
            minWidth: '30vw',
            disableClose: true,
            panelClass: ['o-dialog-class', 'o-table-dialog'],
            data: { entity: this.currentPreference.entity, service: this.currentPreference.service },
        }).afterClosed()
            .subscribe((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            if (Util.isDefined(data) && data) {
                _this.applyConfiguration(data);
                _this.appliedConfiguration = true;
            }
        }), (/**
         * @param {?} _error
         * @return {?}
         */
        function (_error) {
            _this.appliedConfiguration = false;
        }));
    };
    /**
     * @return {?}
     */
    ReportOnDemandComponent.prototype.openSavePreferences = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (Util.isDefined(this.currentConfiguration.ID)) {
            this.savePreferences({ name: this.currentConfiguration.NAME, description: this.currentConfiguration.DESCRIPTION }, true);
        }
        else {
            this.dialog
                .open(SavePreferencesDialogComponent, {
                panelClass: ['o-dialog-class', 'o-table-dialog']
            })
                .afterClosed()
                .subscribe((/**
             * @param {?} data
             * @return {?}
             */
            function (data) {
                if (Util.isDefined(data) && data) {
                    _this.savePreferences(data, true);
                }
            }));
        }
    };
    /**
     * @param {?} data
     * @param {?=} update
     * @return {?}
     */
    ReportOnDemandComponent.prototype.savePreferences = /**
     * @param {?} data
     * @param {?=} update
     * @return {?}
     */
    function (data, update) {
        var _this = this;
        /** @type {?} */
        var preference = {
            "name": data.name, "description": data.description,
            "entity": this.currentPreference.entity, "service": this.currentPreference.service, "type": "REPORT", "params": {
                "title": this.currentPreference.title, "groups": this.currentPreference.groups,
                "vertical": this.currentPreference.vertical, "functions": this.currentPreference.functions, "style": this.currentPreference.style,
                "subtitle": this.currentPreference.subtitle, "columns": this.currentPreference.columns, "orderBy": this.currentPreference.orderBy, "entity": this.currentPreference.entity, "service": this.currentPreference.service
            }
        };
        if (update) {
            this.reportService.savePreferences(this.currentConfiguration.ID, preference).subscribe((/**
             * @param {?} res
             * @return {?}
             */
            function (res) {
                _this.showConfirmOperatinInSnackBar(res);
            }));
        }
        else {
            this.reportService.saveAsPreferences(preference).subscribe((/**
             * @param {?} res
             * @return {?}
             */
            function (res) {
                if (res && res.code === 0) {
                    _this.showConfirmOperatinInSnackBar(res);
                }
            }));
        }
    };
    /**
     * @private
     * @param {?} res
     * @return {?}
     */
    ReportOnDemandComponent.prototype.showConfirmOperatinInSnackBar = /**
     * @private
     * @param {?} res
     * @return {?}
     */
    function (res) {
        if (res && res.code === 0) {
            this.snackBarService.open('MESSAGES.SAVED', { icon: 'check_circle' });
        }
    };
    /**
     * @return {?}
     */
    ReportOnDemandComponent.prototype.setFullscreenDialog = /**
     * @return {?}
     */
    function () {
        Utils.setFullscreenDialog(this.fullscreen, this.dialogRef);
        this.fullscreen = !this.fullscreen;
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ReportOnDemandComponent.prototype.onSelectionChangeColumns = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var selectedColumn = event.option.value;
        /** @type {?} */
        var selectColumnId = selectedColumn.id;
        this.updateColumnsOrderByData(selectColumnId, event);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ReportOnDemandComponent.prototype.onSelectionChangeGroups = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (!event.option.selected)
            return;
        /** @type {?} */
        var groupSelected = event.option.value;
        this.updateColumnsOrderByData(groupSelected, event);
        if (event.option.selected &&
            this.currentPreference.columns.findIndex((/**
             * @param {?} x
             * @return {?}
             */
            function (x) { return x.id === groupSelected; })) === -1) {
            /** @type {?} */
            var columnStyleSelected = this.columnsData.filter((/**
             * @param {?} x
             * @return {?}
             */
            function (x) { return x.id === groupSelected; }));
            if (columnStyleSelected.length > 0) {
                this.addColumnData(columnStyleSelected[0]);
            }
        }
    };
    /**
     * @param {?} columnId
     * @param {?=} event
     * @return {?}
     */
    ReportOnDemandComponent.prototype.updateColumnsOrderByData = /**
     * @param {?} columnId
     * @param {?=} event
     * @return {?}
     */
    function (columnId, event) {
        if (!event) {
            /** @type {?} */
            var existColumn = this.columnsArray.findIndex((/**
             * @param {?} col
             * @return {?}
             */
            function (col) { return col === columnId; }));
            if (existColumn === -1) {
                console.warn('The loaded configuration has the column ' + columnId + ' configured but this column does not exist as a table column');
                return;
            }
        }
        /** @type {?} */
        var columnGroupBySelected = { columnId: columnId, ascendent: true };
        /** @type {?} */
        var index = this.columnsOrderBy.findIndex((/**
         * @param {?} x
         * @return {?}
         */
        function (x) { return x.columnId === columnId; }));
        if ((!event) || (event && event.option.selected)) {
            if (index === -1) {
                this.columnsOrderBy.push(columnGroupBySelected);
            }
        }
        else if (index > -1) {
            this.columnsOrderBy.splice(index);
        }
    };
    /**
     * @param {?} columnSelected
     * @return {?}
     */
    ReportOnDemandComponent.prototype.addColumnData = /**
     * @param {?} columnSelected
     * @return {?}
     */
    function (columnSelected) {
        //Object Deep Cloning
        /** @type {?} */
        var currentPreference = Utils.cloneObject(this.currentPreference);
        currentPreference.columns.push(columnSelected);
        this.currentPreference = currentPreference;
        this.updateColumnsSort();
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ReportOnDemandComponent.prototype.onSelectionChangeFunctions = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (!event.option.selected || event.option.value.columnName === 'TOTAL')
            return;
        /** @type {?} */
        var functionSelect = event.option.value;
        /** @type {?} */
        var columnSelectedToGroup = functionSelect.columnName;
        if (event.option.selected &&
            this.currentPreference.columns.findIndex((/**
             * @param {?} x
             * @return {?}
             */
            function (x) { return x.id === columnSelectedToGroup; })) === -1) {
            /** @type {?} */
            var column = this.columnsData.find((/**
             * @param {?} x
             * @return {?}
             */
            function (x) { return x.id === columnSelectedToGroup; }));
            this.addColumnData(column);
        }
    };
    /**
     * @param {?} column
     * @param {?} event
     * @return {?}
     */
    ReportOnDemandComponent.prototype.changeOrder = /**
     * @param {?} column
     * @param {?} event
     * @return {?}
     */
    function (column, event) {
        /** @type {?} */
        var columnSelectedToOrder = this.columnsOrderBy.find((/**
         * @param {?} x
         * @return {?}
         */
        function (x) { return x.columnId === column.columnId; }));
        if (columnSelectedToOrder) {
            columnSelectedToOrder.ascendent = !columnSelectedToOrder.ascendent;
        }
        event.stopPropagation();
    };
    /**
     * @param {?} column
     * @return {?}
     */
    ReportOnDemandComponent.prototype.isCheckedColumn = /**
     * @param {?} column
     * @return {?}
     */
    function (column) {
        return this.currentPreference.columns.length > 0 ? this.currentPreference.columns.filter((/**
         * @param {?} x
         * @return {?}
         */
        function (x) { return x.id === column.id; })).length > 0 : false;
    };
    /**
     * @param {?} column
     * @return {?}
     */
    ReportOnDemandComponent.prototype.isCheckedFunction = /**
     * @param {?} column
     * @return {?}
     */
    function (column) {
        return this.currentPreference.functions.length > 0 ? this.currentPreference.functions.filter((/**
         * @param {?} x
         * @return {?}
         */
        function (x) { return (x.columnName === column.columnName && x.type === column.type) && x.type !== 'TOTAL'; })).length > 0 : false;
    };
    /**
     * @param {?} co1
     * @param {?} co2
     * @return {?}
     */
    ReportOnDemandComponent.prototype.columnsOrderByCompareFunction = /**
     * @param {?} co1
     * @param {?} co2
     * @return {?}
     */
    function (co1, co2) {
        return co1.columnId === co2.columnId;
    };
    /**
     * @param {?} value
     * @return {?}
     */
    ReportOnDemandComponent.prototype.onCheckboxStyleClick = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (this.currentPreference.style[value]) {
            this.currentPreference.style[value] = false;
        }
        else {
            this.currentPreference.style[value] = true;
        }
    };
    /**
     * @param {?} co1
     * @param {?} co2
     * @return {?}
     */
    ReportOnDemandComponent.prototype.columnsCompareFunction = /**
     * @param {?} co1
     * @param {?} co2
     * @return {?}
     */
    function (co1, co2) {
        return co1.id === co2.id;
    };
    /**
     * @param {?} co1
     * @param {?} co2
     * @return {?}
     */
    ReportOnDemandComponent.prototype.functionsCompareFunction = /**
     * @param {?} co1
     * @param {?} co2
     * @return {?}
     */
    function (co1, co2) {
        return co1.columnName === co2.columnName;
    };
    /**
     * @protected
     * @param {?} column
     * @return {?}
     */
    ReportOnDemandComponent.prototype.createRenderer = /**
     * @protected
     * @param {?} column
     * @return {?}
     */
    function (column) {
        /** @type {?} */
        var oColumn = this.table.oTableOptions.columns.find((/**
         * @param {?} x
         * @return {?}
         */
        function (x) { return x.attr === column; }));
        /** @type {?} */
        var newRenderer;
        if (Util.isDefined(oColumn) && Util.isDefined(oColumn.type) && oColumn.type !== 'string') {
            /** @type {?} */
            var type = oColumn.type;
            newRenderer = {};
            /** @type {?} */
            var columnRenderer = oColumn.renderer;
            switch (type) {
                case 'currency':
                    newRenderer.type = type;
                    newRenderer.currencySymbol = columnRenderer.currencySymbol;
                    newRenderer.currencySymbolPosition = columnRenderer.currencySymbolPosition;
                    break;
                case 'date':
                    newRenderer.type = type;
                    newRenderer.format = columnRenderer.format;
                    break;
                case 'integer':
                    newRenderer.type = type;
                    newRenderer.grouping = columnRenderer.grouping;
                    newRenderer.thousandSeparator = columnRenderer.thousandSeparator;
                    break;
                case 'real':
                    newRenderer.type = type;
                    newRenderer.decimalSeparator = columnRenderer.decimalSeparator;
                    newRenderer.grouping = columnRenderer.grouping;
                    newRenderer.thousandSeparator = columnRenderer.thousandSeparator;
                    break;
                case 'service':
                    newRenderer.type = type;
                    newRenderer.entity = columnRenderer.entity;
                    newRenderer.service = columnRenderer.service;
                    newRenderer.keyColumn = oColumn.attr;
                    newRenderer.columns = Util.parseArray(columnRenderer.columns);
                    newRenderer.valueColumn = columnRenderer.valueColumn;
                    newRenderer.parentKeys = Util.parseArray(columnRenderer.parentKeys);
                    /** @type {?} */
                    var serviceConfiguration = this.getDefaultServiceConfiguration(columnRenderer.service);
                    if (Util.isObject(serviceConfiguration) && Object.hasOwnProperty(serviceConfiguration.path)) {
                        newRenderer.path = serviceConfiguration.path;
                    }
                    break;
            }
        }
        return newRenderer;
    };
    ReportOnDemandComponent.decorators = [
        { type: Component, args: [{
                    selector: 'o-report-on-demand',
                    template: "<div mat-dialog-title class=\"dialog-title\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n  {{ 'REPORT_ON_DEMAND_TITLE' | oReportsTranslate }}\n  <div>\n    <mat-icon svgIcon=\"ontimize:settings\" #configurationMenuButton [matMenuTriggerFor]=\"configurationMenu\"></mat-icon>\n    <mat-icon aria-label=\"fullscreen dialog\" (click)=\"setFullscreenDialog()\">\n      <ng-container *ngIf=\"fullscreen\">fullscreen_exit</ng-container>\n      <ng-container *ngIf=\"!fullscreen\">fullscreen</ng-container>\n    </mat-icon>\n    <mat-icon svgIcon=\"ontimize:close\" [mat-dialog-close]=\"true\"></mat-icon>\n\n    <mat-menu #configurationMenu=\"matMenu\" class=\"o-mat-menu\">\n      <button type=\"button\" [disabled]=\"!appliedConfiguration\" mat-menu-item (click)=\"openSavePreferences()\">\n        {{ 'BUTTONS.SAVE_CONFIGURATION' | oReportsTranslate }}\n      </button>\n      <button type=\"button\" mat-menu-item (click)=\"openSaveAsPreferences()\">\n        {{ 'BUTTONS.SAVEAS_CONFIGURATION' | oReportsTranslate }}\n      </button>\n      <button type=\"button\" mat-menu-item (click)=\"onApplyConfigurationClicked()\">\n        {{'BUTTONS.APPLY_CONFIGURATION'| oReportsTranslate }}\n      </button>\n    </mat-menu>\n  </div>\n</div>\n<div #dialog mat-dialog-content class=\"dialog-container\">\n  <mat-sidenav-container class=\"mat-sidenav-container\" [class.opened]=\"openedSidenav\" fxFill>\n    <mat-sidenav #sidenav [(opened)]=\"openedSidenav\" mode=\"side\" class=\"report-on-demand-sidenav\">\n      <div fxLayout=\"column\" fxFill fxLayoutGap=\"20px\">\n        <o-button (click)=\"openedSidenav=!openedSidenav\" svg-icon=\"ontimize:menu\" type=\"ICON\" label=\"\"\n          [matTooltip]=\"(sidenav.opened?'HIDE_FILTERS':'SHOW_FILTERS') | oTranslate\">\n        </o-button>\n\n        <div fxLayout=\"column\" *ngIf=\"openedSidenav\" class=\"container-title\" fxLayoutGap=\"10px\">\n          <mat-form-field>\n            <input [(ngModel)]=\"currentPreference.title\" matInput placeholder=\"{{ 'TITLE' | oReportsTranslate }}\">\n          </mat-form-field>\n          <mat-form-field>\n            <input [(ngModel)]=\"currentPreference.subtitle\" matInput placeholder=\"{{ 'SUBTITLE' | oReportsTranslate }}\">\n          </mat-form-field>\n        </div>\n\n        <mat-accordion multi=\"true\" displayMode=\"flat\" fxFlex=\"1 1 auto\" *ngIf=\"openedSidenav\" [@.disabled]=\"true\">\n          <mat-expansion-panel class=\"acordions\">\n            <mat-expansion-panel-header collapsedHeight=\"32px\" expandedHeight=\"32px\">\n              <mat-panel-title>\n                {{ 'ORIENTATION' | oReportsTranslate }}\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n            <mat-radio-group name=\"Orientation\" [(ngModel)]=\"currentPreference.vertical\" fxLayout=\"column\" fxLayoutGap=\"12px\">\n              <mat-radio-button *ngFor=\"let orientation of orientations\" name=\"Orientation\" [value]=\"orientation.value\"\n                [checked]=\"currentPreference.vertical === orientation.value\">\n                {{ orientation.text | oReportsTranslate}}\n              </mat-radio-button>\n            </mat-radio-group>\n          </mat-expansion-panel>\n\n          <mat-expansion-panel class=\"acordions\">\n            <mat-expansion-panel-header collapsedHeight=\"32px\" expandedHeight=\"32px\">\n              <mat-panel-title>\n                {{ 'STYLE' | oReportsTranslate }}\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n            <mat-selection-list dense #settings>\n              <mat-list-option checkboxPosition=\"before\" [selected]=\"currentPreference.style[choice.value]\" *ngFor=\"let choice of stylesArray\"\n                [value]=\"choice.value\" (click)=\"onCheckboxStyleClick(choice.value)\">\n                <div fxLayout=\"row\">\n                  <span fxFlex>\n                    {{choice.viewValue | oReportsTranslate}}\n                  </span>\n                </div>\n              </mat-list-option>\n            </mat-selection-list>\n          </mat-expansion-panel>\n\n          <mat-expansion-panel class=\"acordions\" expanded=\"true\">\n            <mat-expansion-panel-header collapsedHeight=\"32px\" expandedHeight=\"32px\">\n              <mat-panel-title>\n                {{ 'COLUMNS' | oReportsTranslate }}\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n            <mat-selection-list dense #columnsList cdkDropList [cdkDropListData]=\"columnsData\" (cdkDropListDropped)=\"dropColumns($event)\"\n              class=\"columns\" [(ngModel)]=\"currentPreference.columns\" (selectionChange)=\"onSelectionChangeColumns($event)\"\n              [compareWith]=\"columnsCompareFunction\">\n              <mat-list-option checkboxPosition=\"before\" *ngFor=\"let column of columnsData\" [value]=\"column\" cdkDrag>\n                <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n                  <span mat-line fxFlex>\n                    {{column.id | oReportsTranslate}}\n                  </span>\n                  <mat-icon mat-list-icon *ngIf=\"isCheckedColumn(column)\" (click)=\"showColumnStyleDialog($event, column.id)\" class=\"button-edit\">\n                    edit\n                  </mat-icon>\n                  <mat-icon mat-list-icon class=\"button-edit\">drag_handle</mat-icon>\n                </div>\n              </mat-list-option>\n            </mat-selection-list>\n          </mat-expansion-panel>\n          <mat-expansion-panel class=\"acordions\" *ngIf=\"columnsOrderBy.length > 0\">\n            <mat-expansion-panel-header collapsedHeight=\"32px\" expandedHeight=\"32px\">\n              <mat-panel-title>\n                {{ 'ORDER_BY' | oReportsTranslate }}\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n            <mat-selection-list dense #orderByList cdkDropList [cdkDropListData]=\"columnsOrderBy\" (cdkDropListDropped)=\"dropColumnsOrderBy($event)\"\n              class=\"columns\" [(ngModel)]=\"currentPreference.orderBy\" [compareWith]=\"columnsOrderByCompareFunction\">\n              <mat-list-option checkboxPosition=\"before\" *ngFor=\"let column of columnsOrderBy\" [value]=\"column\" cdkDrag>\n                <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n                  <span mat-line fxFlex>\n                    {{column.columnId | oReportsTranslate}}\n                  </span>\n                  <mat-icon *ngIf=\"column.ascendent\" (click)=\"changeOrder(column, $event)\" mat-list-icon svgIcon=\"ontimize:sort_by_alpha_asc\"\n                    class=\"button-edit\"></mat-icon>\n                  <mat-icon *ngIf=\"!column.ascendent\" (click)=\"changeOrder(column, $event)\" mat-list-icon svgIcon=\"ontimize:sort_by_alpha_desc\"\n                    class=\"button-edit\"></mat-icon>\n                  <mat-icon mat-list-icon class=\"button-edit\">drag_handle</mat-icon>\n                </div>\n              </mat-list-option>\n            </mat-selection-list>\n          </mat-expansion-panel>\n          <mat-expansion-panel class=\"acordions\">\n            <mat-expansion-panel-header collapsedHeight=\"32px\" expandedHeight=\"32px\">\n              <mat-panel-title>\n                {{ 'GROUPS' | oReportsTranslate }}\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n            <mat-selection-list dense cdkDropList [cdkDropListData]=\"columnsToGroupData\" (cdkDropListDropped)=\"dropGroups($event)\"\n              [(ngModel)]=\"currentPreference.groups\" (selectionChange)=\"onSelectionChangeGroups($event)\">\n              <mat-list-option checkboxPosition=\"before\" *ngFor=\"let column of columnsToGroupData\" [value]=\"column\" cdkDrag>\n                <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n                  <span mat-line fxFlex>\n                    {{ column | oTranslate }}\n                  </span>\n                  <mat-icon mat-list-icon class=\"button-edit\">drag_handle</mat-icon>\n                </div>\n              </mat-list-option>\n            </mat-selection-list>\n          </mat-expansion-panel>\n\n          <mat-expansion-panel class=\"acordions\" *ngIf=\"functionsData.length>0\">\n            <mat-expansion-panel-header collapsedHeight=\"32px\" expandedHeight=\"32px\">\n              <mat-panel-title>\n                {{ 'FUNCTIONS' | oReportsTranslate }}\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n            <mat-selection-list #functionsList dense [(ngModel)]=\"currentPreference.functions\" [compareWith]=\"functionsCompareFunction\"\n              (selectionChange)=\"onSelectionChangeFunctions($event)\">\n              <mat-list-option checkboxPosition=\"before\" *ngFor=\"let function of functionsData\" [value]=\"function\">\n                <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n                  <span mat-line fxFlex>\n                    <ng-container *ngIf=\"function.columnName==='TOTAL'; else functionColumnTemplate\">\n                      {{function.type | oReportsTranslate}}\n                    </ng-container>\n                  </span>\n                  <ng-template #functionColumnTemplate>\n                    {{function.type | oReportsTranslate }}({{function.columnName | oReportsTranslate }})\n                  </ng-template>\n\n                  <mat-icon *ngIf=\"isCheckedFunction(function)\" mat-list-icon (click)=\"selectFunction($event, function)\" class=\"button-edit\">\n                    edit\n                  </mat-icon>\n                </div>\n              </mat-list-option>\n            </mat-selection-list>\n          </mat-expansion-panel>\n        </mat-accordion>\n\n        <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"center center\" *ngIf=\"openedSidenav\">\n          <button type=\"button\" mat-stroked-button class=\"o-report-on-demand-clear-button\" (click)=\"clearCurrentPreferences()\">\n            {{'CLEAR' | oReportsTranslate }}</button>\n          <button type=\"button\" mat-stroked-button class=\"mat-primary\" (click)=\"previewReport()\" [disabled]=\"currentPreference.columns.length===0\">\n            {{'PREVIEW' | oReportsTranslate }}</button>\n        </div>\n\n      </div>\n    </mat-sidenav>\n    <mat-sidenav-content>\n      <div class=\"sidenav-container-content\">\n        <ngx-extended-pdf-viewer #pdfViewer [base64Src]=\"pdf\" [filenameForDownload]=\"currentPreference.title\" [showBookmarkButton]=\"false\"\n          [showPropertiesButton]=\"false\" [showOpenFileButton]=\"false\" useBrowserLocale=\"true\" delayFirstView=\"1000\" [textLayer]=\"true\">\n        </ngx-extended-pdf-viewer>\n      </div>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n</div>\n",
                    encapsulation: ViewEncapsulation.None,
                    host: {
                        '[class.o-report-on-demand]': 'true'
                    },
                    styles: [".o-dialog-class .mat-dialog-container .o-report-on-demand .mat-dialog-title .mat-icon{cursor:pointer}.o-dialog-class .mat-dialog-container .o-report-on-demand .mat-dialog-content{max-height:calc(100% - 36px - 16px);height:100%;padding-top:16px;padding-bottom:0}.o-dialog-class .mat-dialog-container .o-report-on-demand .mat-dialog-content ngx-extended-pdf-viewer .zoom{height:100%}.o-dialog-class .mat-dialog-container .o-report-on-demand .mat-dialog-content .mat-icon{cursor:pointer}.o-dialog-class .mat-dialog-container .o-report-on-demand .mat-dialog-content .mat-sidenav{visibility:visible!important;transform:none;top:0;left:0;padding:8px 16px;border:1px solid transparent}.o-dialog-class .mat-dialog-container .o-report-on-demand .mat-dialog-content .mat-sidenav .mat-drawer-inner-container{overflow:hidden}.o-dialog-class .mat-dialog-container .o-report-on-demand .mat-dialog-content .mat-sidenav .mat-dialog-actions{min-height:auto;padding-top:0}.o-dialog-class .mat-dialog-container .o-report-on-demand .mat-dialog-content .mat-sidenav .mat-dialog-actions button.o-report-on-demand-clear-button{min-width:80px}.o-dialog-class .mat-dialog-container .o-report-on-demand .mat-dialog-content .mat-sidenav .mat-radio-group{margin:0 12px}.o-dialog-class .mat-dialog-container .o-report-on-demand .mat-dialog-content .mat-sidenav .mat-accordion{overflow-y:scroll}.o-dialog-class .mat-dialog-container .o-report-on-demand .mat-dialog-content .mat-sidenav .mat-accordion .acordions.mat-expansion-panel{border-radius:0;box-shadow:none;margin-bottom:8px}.o-dialog-class .mat-dialog-container .o-report-on-demand .mat-dialog-content .mat-sidenav .mat-accordion .acordions.mat-expansion-panel:last-of-type{margin-bottom:0}.o-dialog-class .mat-dialog-container .o-report-on-demand .mat-dialog-content .mat-sidenav .mat-accordion .acordions.mat-expansion-panel .mat-expansion-panel-header{padding:0 8px}.o-dialog-class .mat-dialog-container .o-report-on-demand .mat-dialog-content .mat-sidenav .mat-accordion .acordions.mat-expansion-panel .mat-expansion-panel-body{padding:0}.o-dialog-class .mat-dialog-container .o-report-on-demand .mat-dialog-content .mat-sidenav .mat-accordion .mat-list-option .button-edit{cursor:pointer}.o-dialog-class .mat-dialog-container .o-report-on-demand .mat-dialog-content .mat-sidenav .mat-accordion .mat-list-option.cdk-drag{cursor:move}.o-dialog-class .mat-dialog-container .o-report-on-demand .mat-dialog-content .mat-sidenav .mat-accordion .mat-list-option .mat-list-item-content{padding:0 0 0 8px}.o-dialog-class .mat-dialog-container .o-report-on-demand .mat-dialog-content .mat-sidenav .mat-accordion .mat-list-option .mat-list-item-content .mat-list-text{padding-right:8px}.o-dialog-class .mat-dialog-container .o-report-on-demand .mat-dialog-content .mat-sidenav.mat-drawer-opened{border:1px solid #dee1e6;border-radius:4px;width:256px}.o-dialog-class .mat-dialog-container .o-report-on-demand .mat-dialog-content .mat-sidenav-container{background-color:transparent}.o-dialog-class .mat-dialog-container .o-report-on-demand .mat-dialog-content .mat-sidenav-container.opened .sidenav-container-content{margin-left:16px}.o-dialog-class .mat-dialog-container .o-report-on-demand .mat-dialog-content .mat-sidenav-content{overflow:hidden}.o-dialog-class .mat-dialog-container .o-report-on-demand .mat-dialog-content .mat-sidenav-content .sidenav-container-content{margin-left:66px;height:100%}"]
                }] }
    ];
    /** @nocollapse */
    ReportOnDemandComponent.ctorParameters = function () { return [
        { type: Injector },
        { type: MatDialogRef },
        { type: OTableComponent, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }
    ]; };
    ReportOnDemandComponent.propDecorators = {
        columnsList: [{ type: ViewChild, args: ['columnsList', { static: false },] }],
        functionsList: [{ type: ViewChild, args: ['functionsList', { static: false },] }],
        orderByList: [{ type: ViewChild, args: ['orderByList', { static: false },] }]
    };
    return ReportOnDemandComponent;
}());
export { ReportOnDemandComponent };
if (false) {
    /** @type {?} */
    ReportOnDemandComponent.prototype.columnsList;
    /** @type {?} */
    ReportOnDemandComponent.prototype.functionsList;
    /** @type {?} */
    ReportOnDemandComponent.prototype.orderByList;
    /** @type {?} */
    ReportOnDemandComponent.prototype.orientations;
    /** @type {?} */
    ReportOnDemandComponent.prototype.functionsData;
    /**
     * @type {?}
     * @private
     */
    ReportOnDemandComponent.prototype.initialFunctionsData;
    /** @type {?} */
    ReportOnDemandComponent.prototype.appliedConfiguration;
    /** @type {?} */
    ReportOnDemandComponent.prototype.selectedFunctions;
    /** @type {?} */
    ReportOnDemandComponent.prototype.stylesArray;
    /** @type {?} */
    ReportOnDemandComponent.prototype.columnsData;
    /**
     * @type {?}
     * @private
     */
    ReportOnDemandComponent.prototype.initialColumnsData;
    /** @type {?} */
    ReportOnDemandComponent.prototype.selectedColumnsData;
    /** @type {?} */
    ReportOnDemandComponent.prototype.columnsOrderBy;
    /** @type {?} */
    ReportOnDemandComponent.prototype.columnsToGroupData;
    /**
     * @type {?}
     * @private
     */
    ReportOnDemandComponent.prototype.initialColumnsToGroupData;
    /** @type {?} */
    ReportOnDemandComponent.prototype.openedSidenav;
    /** @type {?} */
    ReportOnDemandComponent.prototype.fullscreen;
    /**
     * @type {?}
     * @protected
     */
    ReportOnDemandComponent.prototype.service;
    /**
     * @type {?}
     * @protected
     */
    ReportOnDemandComponent.prototype.language;
    /**
     * @type {?}
     * @protected
     */
    ReportOnDemandComponent.prototype.columnsArray;
    /**
     * @type {?}
     * @protected
     */
    ReportOnDemandComponent.prototype.table;
    /**
     * @type {?}
     * @private
     */
    ReportOnDemandComponent.prototype.blankPdf;
    /** @type {?} */
    ReportOnDemandComponent.prototype.currentPreference;
    /** @type {?} */
    ReportOnDemandComponent.prototype.currentConfiguration;
    /** @type {?} */
    ReportOnDemandComponent.prototype.pdf;
    /** @type {?} */
    ReportOnDemandComponent.prototype.translateService;
    /**
     * @type {?}
     * @protected
     */
    ReportOnDemandComponent.prototype.appConfig;
    /**
     * @type {?}
     * @protected
     */
    ReportOnDemandComponent.prototype.snackBarService;
    /**
     * @type {?}
     * @protected
     */
    ReportOnDemandComponent.prototype.reportService;
    /**
     * @type {?}
     * @protected
     */
    ReportOnDemandComponent.prototype.dialogService;
    /** @type {?} */
    ReportOnDemandComponent.prototype.dialog;
    /** @type {?} */
    ReportOnDemandComponent.prototype.injector;
    /** @type {?} */
    ReportOnDemandComponent.prototype.dialogRef;
    /** @type {?} */
    ReportOnDemandComponent.prototype.data;
}
//# sourceMappingURL=data:application/json;base64,