/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/report-on-demand/save-preferences-dialog/save-preferences-dialog.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Injector } from '@angular/core';
import { FormGroup, FormControl, Validators } from '@angular/forms';
import { MatDialogRef } from '@angular/material';
import { OTableBaseDialogClass } from 'ontimize-web-ngx';
var SavePreferencesDialogComponent = /** @class */ (function (_super) {
    tslib_1.__extends(SavePreferencesDialogComponent, _super);
    function SavePreferencesDialogComponent(dialogo, injector) {
        var _this = _super.call(this, injector) || this;
        _this.dialogo = dialogo;
        _this.injector = injector;
        _this.formGroup = new FormGroup({
            name: new FormControl('', [
                Validators.required
            ]),
            description: new FormControl('')
        });
        _this.setFormControl(_this.formGroup.get('name'));
        return _this;
    }
    /**
     * @return {?}
     */
    SavePreferencesDialogComponent.prototype.save = /**
     * @return {?}
     */
    function () {
        this.dialogo.close({ "name": this.name, "description": this.description });
    };
    SavePreferencesDialogComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-save-preferences-dialog',
                    template: "<span mat-dialog-title>{{ 'TABLE.BUTTONS.SAVE_CONFIGURATION' | oTranslate }}</span>\n\n<mat-dialog-content>\n  <div mat-subheader>{{ 'TABLE.DIALOG.SAVE_CONFIGURATION' | oTranslate }}</div>\n  <form #form [formGroup]=\"formGroup\" fxLayout=\"column\">\n    <mat-form-field>\n      <input [(ngModel)]=\"name\" matInput [matTooltip]=\"tooltipText\" [matTooltipClass]=\"tooltipClass\"\n        placeholder=\"{{ 'TABLE.DIALOG.CONFIGURATION_NAME' | oTranslate }}\" formControlName=\"name\" required>\n      <mat-error *oMatError=\"hasError(formGroup.controls['name'], 'required')\">{{ 'FORM_VALIDATION.REQUIRED' | oTranslate }}</mat-error>\n    </mat-form-field>\n\n    <mat-form-field>\n      <textarea [(ngModel)]=\"description\" matInput placeholder=\"{{ 'TABLE.DIALOG.CONFIGURATION_DESCRIPTION' | oTranslate }}\"\n        formControlName=\"description\" rows=\"4\" cols=\"50\"></textarea>\n    </mat-form-field>\n\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n  <button type=\"button\" mat-stroked-button class=\"mat-primary\" [mat-dialog-close]=\"false\" class=\"o-button-default\">\n    {{ 'CANCEL' | oTranslate }}</button>\n  <button type=\"button\" mat-stroked-button class=\"mat-primary\" (click)=\"save()\" [mat-dialog-close]=\"true\" [disabled]=\"formGroup.invalid\">\n    {{ 'SAVE' | oTranslate }}</button>\n</mat-dialog-actions>\n"
                }] }
    ];
    /** @nocollapse */
    SavePreferencesDialogComponent.ctorParameters = function () { return [
        { type: MatDialogRef },
        { type: Injector }
    ]; };
    return SavePreferencesDialogComponent;
}(OTableBaseDialogClass));
export { SavePreferencesDialogComponent };
if (false) {
    /** @type {?} */
    SavePreferencesDialogComponent.prototype.name;
    /** @type {?} */
    SavePreferencesDialogComponent.prototype.description;
    /** @type {?} */
    SavePreferencesDialogComponent.prototype.formGroup;
    /** @type {?} */
    SavePreferencesDialogComponent.prototype.dialogo;
    /**
     * @type {?}
     * @protected
     */
    SavePreferencesDialogComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2F2ZS1wcmVmZXJlbmNlcy1kaWFsb2cuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vb250aW1pemUtd2ViLW5neC1yZXBvcnQvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9yZXBvcnQtb24tZGVtYW5kL3NhdmUtcHJlZmVyZW5jZXMtZGlhbG9nL3NhdmUtcHJlZmVyZW5jZXMtZGlhbG9nLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNwRCxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxVQUFVLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNwRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDakQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFekQ7SUFLb0QsMERBQXFCO0lBV3ZFLHdDQUNTLE9BQXFELEVBQ2xELFFBQWtCO1FBRjlCLFlBR0Usa0JBQU0sUUFBUSxDQUFDLFNBRWhCO1FBSlEsYUFBTyxHQUFQLE9BQU8sQ0FBOEM7UUFDbEQsY0FBUSxHQUFSLFFBQVEsQ0FBVTtRQVR2QixlQUFTLEdBQWMsSUFBSSxTQUFTLENBQUM7WUFDMUMsSUFBSSxFQUFFLElBQUksV0FBVyxDQUFDLEVBQUUsRUFBRTtnQkFDeEIsVUFBVSxDQUFDLFFBQVE7YUFDcEIsQ0FBQztZQUNGLFdBQVcsRUFBRSxJQUFJLFdBQVcsQ0FBQyxFQUFFLENBQUM7U0FDakMsQ0FBQyxDQUFDO1FBTUQsS0FBSSxDQUFDLGNBQWMsQ0FBQyxLQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDOztJQUNsRCxDQUFDOzs7O0lBRUQsNkNBQUk7OztJQUFKO1FBQ0UsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLElBQUksRUFBRSxhQUFhLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7SUFDN0UsQ0FBQzs7Z0JBekJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsNkJBQTZCO29CQUN2QyxnMkNBQXVEO2lCQUN4RDs7OztnQkFOUSxZQUFZO2dCQUZELFFBQVE7O0lBK0I1QixxQ0FBQztDQUFBLEFBMUJELENBS29ELHFCQUFxQixHQXFCeEU7U0FyQlksOEJBQThCOzs7SUFDekMsOENBQW9COztJQUNwQixxREFBMkI7O0lBRTNCLG1EQUtHOztJQUdELGlEQUE0RDs7Ozs7SUFDNUQsa0RBQTRCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbmplY3RvciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybUdyb3VwLCBGb3JtQ29udHJvbCwgVmFsaWRhdG9ycyB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IE1hdERpYWxvZ1JlZiB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsJztcbmltcG9ydCB7IE9UYWJsZUJhc2VEaWFsb2dDbGFzcyB9IGZyb20gJ29udGltaXplLXdlYi1uZ3gnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhcHAtc2F2ZS1wcmVmZXJlbmNlcy1kaWFsb2cnLFxuICB0ZW1wbGF0ZVVybDogJy4vc2F2ZS1wcmVmZXJlbmNlcy1kaWFsb2cuY29tcG9uZW50Lmh0bWwnXG59KVxuXG5leHBvcnQgY2xhc3MgU2F2ZVByZWZlcmVuY2VzRGlhbG9nQ29tcG9uZW50IGV4dGVuZHMgT1RhYmxlQmFzZURpYWxvZ0NsYXNzIHtcbiAgcHVibGljIG5hbWU6IHN0cmluZztcbiAgcHVibGljIGRlc2NyaXB0aW9uOiBzdHJpbmc7XG5cbiAgcHVibGljIGZvcm1Hcm91cDogRm9ybUdyb3VwID0gbmV3IEZvcm1Hcm91cCh7XG4gICAgbmFtZTogbmV3IEZvcm1Db250cm9sKCcnLCBbXG4gICAgICBWYWxpZGF0b3JzLnJlcXVpcmVkXG4gICAgXSksXG4gICAgZGVzY3JpcHRpb246IG5ldyBGb3JtQ29udHJvbCgnJylcbiAgfSk7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIGRpYWxvZ286IE1hdERpYWxvZ1JlZjxTYXZlUHJlZmVyZW5jZXNEaWFsb2dDb21wb25lbnQ+LFxuICAgIHByb3RlY3RlZCBpbmplY3RvcjogSW5qZWN0b3IpIHtcbiAgICBzdXBlcihpbmplY3Rvcik7XG4gICAgdGhpcy5zZXRGb3JtQ29udHJvbCh0aGlzLmZvcm1Hcm91cC5nZXQoJ25hbWUnKSk7XG4gIH1cblxuICBzYXZlKCk6IHZvaWQge1xuICAgIHRoaXMuZGlhbG9nby5jbG9zZSh7IFwibmFtZVwiOiB0aGlzLm5hbWUsIFwiZGVzY3JpcHRpb25cIjogdGhpcy5kZXNjcmlwdGlvbiB9KTtcbiAgfVxufVxuIl19