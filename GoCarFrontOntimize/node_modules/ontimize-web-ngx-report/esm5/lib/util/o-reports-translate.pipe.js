/**
 * @fileoverview added by tsickle
 * Generated from: lib/util/o-reports-translate.pipe.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe, Injector } from '@angular/core';
import { OTranslateService } from 'ontimize-web-ngx';
import * as CORE_TRANSLATIONS from '../i18n/i18n';
var OReportsTranslatePipe = /** @class */ (function () {
    function OReportsTranslatePipe(injector) {
        this.injector = injector;
        this.translateService = this.injector.get(OTranslateService);
    }
    /**
     * @param {?} text
     * @return {?}
     */
    OReportsTranslatePipe.prototype.transform = /**
     * @param {?} text
     * @return {?}
     */
    function (text) {
        /** @type {?} */
        var textTranslated = undefined;
        /** @type {?} */
        var bundle = CORE_TRANSLATIONS.MAP[this.translateService.getCurrentLang()];
        if (bundle && bundle[text]) {
            textTranslated = bundle[text];
        }
        else {
            textTranslated = this.translateService.get(text);
        }
        return textTranslated;
    };
    OReportsTranslatePipe.decorators = [
        { type: Pipe, args: [{
                    name: 'oReportsTranslate',
                    pure: false
                },] }
    ];
    /** @nocollapse */
    OReportsTranslatePipe.ctorParameters = function () { return [
        { type: Injector }
    ]; };
    return OReportsTranslatePipe;
}());
export { OReportsTranslatePipe };
if (false) {
    /**
     * @type {?}
     * @protected
     */
    OReportsTranslatePipe.prototype.translateService;
    /**
     * @type {?}
     * @protected
     */
    OReportsTranslatePipe.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiby1yZXBvcnRzLXRyYW5zbGF0ZS5waXBlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vb250aW1pemUtd2ViLW5neC1yZXBvcnQvIiwic291cmNlcyI6WyJsaWIvdXRpbC9vLXJlcG9ydHMtdHJhbnNsYXRlLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDckQsT0FBTyxLQUFLLGlCQUFpQixNQUFNLGNBQWMsQ0FBQztBQUVsRDtJQVFFLCtCQUFzQixRQUFrQjtRQUFsQixhQUFRLEdBQVIsUUFBUSxDQUFVO1FBQ3RDLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0lBQy9ELENBQUM7Ozs7O0lBRUQseUNBQVM7Ozs7SUFBVCxVQUFVLElBQVk7O1lBQ2hCLGNBQWMsR0FBRyxTQUFTOztZQUMxQixNQUFNLEdBQUcsaUJBQWlCLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUMxRSxJQUFJLE1BQU0sSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDMUIsY0FBYyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUMvQjthQUFNO1lBQ0wsY0FBYyxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDbEQ7UUFDRCxPQUFPLGNBQWMsQ0FBQztJQUN4QixDQUFDOztnQkFyQkYsSUFBSSxTQUFDO29CQUNKLElBQUksRUFBRSxtQkFBbUI7b0JBQ3pCLElBQUksRUFBRSxLQUFLO2lCQUNaOzs7O2dCQVA2QixRQUFROztJQTJCdEMsNEJBQUM7Q0FBQSxBQXZCRCxJQXVCQztTQW5CWSxxQkFBcUI7Ozs7OztJQUVoQyxpREFBOEM7Ozs7O0lBRWxDLHlDQUE0QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0sIEluamVjdG9yIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBPVHJhbnNsYXRlU2VydmljZSB9IGZyb20gJ29udGltaXplLXdlYi1uZ3gnO1xuaW1wb3J0ICogYXMgQ09SRV9UUkFOU0xBVElPTlMgZnJvbSAnLi4vaTE4bi9pMThuJztcblxuQFBpcGUoe1xuICBuYW1lOiAnb1JlcG9ydHNUcmFuc2xhdGUnLFxuICBwdXJlOiBmYWxzZVxufSlcbmV4cG9ydCBjbGFzcyBPUmVwb3J0c1RyYW5zbGF0ZVBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcblxuICBwcm90ZWN0ZWQgdHJhbnNsYXRlU2VydmljZTogT1RyYW5zbGF0ZVNlcnZpY2U7XG5cbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGluamVjdG9yOiBJbmplY3Rvcikge1xuICAgIHRoaXMudHJhbnNsYXRlU2VydmljZSA9IHRoaXMuaW5qZWN0b3IuZ2V0KE9UcmFuc2xhdGVTZXJ2aWNlKTtcbiAgfVxuXG4gIHRyYW5zZm9ybSh0ZXh0OiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIGxldCB0ZXh0VHJhbnNsYXRlZCA9IHVuZGVmaW5lZDtcbiAgICBsZXQgYnVuZGxlID0gQ09SRV9UUkFOU0xBVElPTlMuTUFQW3RoaXMudHJhbnNsYXRlU2VydmljZS5nZXRDdXJyZW50TGFuZygpXTtcbiAgICBpZiAoYnVuZGxlICYmIGJ1bmRsZVt0ZXh0XSkge1xuICAgICAgdGV4dFRyYW5zbGF0ZWQgPSBidW5kbGVbdGV4dF07XG4gICAgfSBlbHNlIHtcbiAgICAgIHRleHRUcmFuc2xhdGVkID0gdGhpcy50cmFuc2xhdGVTZXJ2aWNlLmdldCh0ZXh0KTtcbiAgICB9XG4gICAgcmV0dXJuIHRleHRUcmFuc2xhdGVkO1xuICB9XG5cbn1cbiJdfQ==