{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://ontimize-web-ngx-report/lib/services/o-alert.service.ts","ng://ontimize-web-ngx-report/lib/services/o-report.service.ts","ng://ontimize-web-ngx-report/lib/util/constants.ts","ng://ontimize-web-ngx-report/lib/util/utils.ts","ng://ontimize-web-ngx-report/lib/components/report/o-report-viewer/o-report-viewer.component.ts","ng://ontimize-web-ngx-report/lib/services/o-report-store.service.ts","ng://ontimize-web-ngx-report/lib/types/report-preferences.type.ts","ng://ontimize-web-ngx-report/lib/components/report-on-demand/apply-configuration/apply-configuration-dialog.component.ts","ng://ontimize-web-ngx-report/lib/components/report-on-demand/save-preferences-dialog/save-preferences-dialog.component.ts","ng://ontimize-web-ngx-report/lib/components/report-on-demand/select-function-dialog/select-function-dialog.component.ts","ng://ontimize-web-ngx-report/lib/components/report-on-demand/style-dialog/style-dialog.component.ts","ng://ontimize-web-ngx-report/lib/components/report-on-demand/report-on-demand/report-on-demand.component.ts","ng://ontimize-web-ngx-report/lib/services/ontimize-report.service.ts","ng://ontimize-web-ngx-report/lib/config/o-providers.ts","ng://ontimize-web-ngx-report/lib/components/report/o-report-home/o-report-home.component.ts","ng://ontimize-web-ngx-report/lib/components/report/o-report-new/o-report-new.component.ts","ng://ontimize-web-ngx-report/lib/components/report/o-report-detail/o-report-detail.component.ts","ng://ontimize-web-ngx-report/lib/i18n/i18n.ts","ng://ontimize-web-ngx-report/lib/util/o-reports-translate.pipe.ts","ng://ontimize-web-ngx-report/lib/config/o-components.ts","ng://ontimize-web-ngx-report/lib/ontimize-web-ngx-report.module.ts","ng://ontimize-web-ngx-report/lib/components/report/o-report-routing.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","OAlertService","alertSource","Subject","alert$","asObservable","announceAlert","alert","Injectable","OReportService","injector","_this","_super","configureService","getDefaultServiceConfiguration","oErrorDialogManager","get","OErrorDialogManager","tslib_1.__extends","createReport","reportparams","body","JSON","stringify","url","urlBase","doRequest","method","saveAsPreferences","preferencesparams","savePreferences","id","getPreferences","entity","service","getFunctions","functionparams","deletePreferences","param","errorCallBack","httpErrorResponse","error","Util","isObject","isDefined","showNotificationError","openErrorDialog","upload","files","data","Observable","observer","toUpload","FormData","forEach","item","prepareToUpload","isUploading","append","name","file","request","HttpRequest","headers","buildHeadersReport","reportProgress","httpClient","subscribe","resp","HttpEventType","UploadProgress","type","progressData","loaded","total","Response","bodyCode","console","status","authService","logout","complete","pipe","share","advancedQuery","_kv","_av","_sqltypes","offset","_pagesize","_orderby","page","Math","trunc","query","kv","identifier","keys","fillReport","av","filter","params","toString","delete","_entity","valueOf","update","HttpHeaders","Access-Control-Allow-Origin","sessionId","getSessionInfo","args","providedIn","Injector","OntimizeEEService","Constants","DEFAULT_WIDTH_DIALOG","DEFAULT_HEIGHT_DIALOG","DEFAULT_WIDTH_COLUMN_STYLE","DEFAULT_ALIGNMENT_COLUMN_STYLE","DEFAULT_COLUMN_FUNCTION","columnName","Utils","setFullscreenDialog","fullscreen","dialogRef","updateSize","cloneObject","parse","openModalVisor","dialog","component","open","maxWidth","maxHeight","height","width","panelClass","OReportViewerComponent","reportService","dialogService","pdf","configureAdapter","res","code","err","log","Component","selector","template","encapsulation","ViewEncapsulation","None","host","[class.o-report-viewer]","MatDialogRef","DialogService","Inject","MAT_DIALOG_DATA","OReportStoreService","MatDialog","openFillReport","reportId","parametersValues","UUID","parameters","PARAMETERS","name_1","NAME","values","values_1","tslib_1.__values","values_1_1","push","DefaultOReportPreferences","title","subtitle","vertical","columns","groups","functions","style","grid","rowNumber","backgroundOnOddRows","hideGroupDetails","groupNewPage","firstGroupNewPage","orderBy","ApplyConfigurationDialogComponent","reportsService","dialogo","configurationListData","getConfigurations","ngOnInit","configurationList","selectedOptions","SelectionModel","loadConfiguration","close","selectedConfiguration","remove","confirm","then","result","ID","onClickConfigurationList","option","isSuccessful","setDataArray","isArray","Optional","ViewChild","MatSelectionList","static","SavePreferencesDialogComponent","formGroup","FormGroup","FormControl","Validators","required","description","setFormControl","save","OTableBaseDialogClass","SelectFunctionDialogComponent","reportFunction","selectedFunction","StyleDialogComponent","dataAlignment","icon","reportColumn","columnStyle","alignment","decorators","ReportOnDemandComponent","orientations","text","functionsData","initialFunctionsData","appliedConfiguration","selectedFunctions","stylesArray","viewValue","columnsOrderBy","openedSidenav","blankPdf","appConfig","AppConfig","translateService","OTranslateService","snackBarService","SnackBarService","initialize","table","language","getCurrentLang","columnsArray","parseColumnsVisible","initialColumnsData","parseReportColumn","initialColumnsToGroupData","currentConfiguration","ENTITY","initializeReportPreferences","serviceName","configuration","getServiceConfiguration","servConfig","previewReport","openReport","clearCurrentPreferences","columnsList","deselectAll","functionsList","orderByList","columnsData","columnsToGroupData","currentPreference","parseArray","oTableOptions","oCol","visible","findIndex","column","attr","map","x","parseColumnStyle","renderer","createRenderer","parseColumnsOrderBy","columnId","ascendent","pathService","serviceConfiguration","path","parseDefaultFunctionsData","listColumns","columnData","checkPreferenceData","applyConfiguration","PREFERENCES","updateColumnsOrderByData","functionData","index","sort","a","indexA","indexB","getSortIndex","showColumnStyleDialog","event","stopPropagation","assign","find","afterClosed","updateColumnStyleConfigurationData","indexColumnData","indexColumnStyleData","selectFunction","updatedFunctionData","updatedSelectFunction","openSaveAsPreferences","dropColumns","moveItemInArray","previousIndex","currentIndex","updateColumnsSort","dropGroups","updateColumnToGroupSort","dropColumnsOrderBy","updateColumnGroupBySort","onApplyConfigurationClicked","minWidth","disableClose","_error","openSavePreferences","DESCRIPTION","preference","showConfirmOperatinInSnackBar","onSelectionChangeColumns","selectColumnId","onSelectionChangeGroups","selected","groupSelected","columnStyleSelected","addColumnData","col","warn","columnGroupBySelected","splice","columnSelected","onSelectionChangeFunctions","columnSelectedToGroup","changeOrder","columnSelectedToOrder","isCheckedColumn","isCheckedFunction","columnsOrderByCompareFunction","co1","co2","onCheckboxStyleClick","columnsCompareFunction","functionsCompareFunction","newRenderer","oColumn","columnRenderer","currencySymbol","currencySymbolPosition","format","grouping","thousandSeparator","decimalSeparator","keyColumn","valueColumn","parentKeys","[class.o-report-on-demand]","OTableComponent","OntimizeReportService","openReportOnDemand","reportServiceFactory","OREPORT_PROVIDERS","provide","O_REPORT_SERVICE","useClass","useFactory","deps","OReportHomeComponent","alertService","_res","refresh","OReportNewComponent","loading","getFileData","getValue","onUploadFile","form","_clearAndCloseFormAfterInsert","onError","onClickSave","e","controls","control","markAsTouched","valid","onClickUpload","[class.app-report-store-new]","OReportDetailComponent","hasParams","getValues","v","paramForm","getFieldValue","size","shift","onDataLoaded","MAP","en","REPORT_ON_DEMAND_TITLE","BUTTONS.SAVE_CONFIGURATION","BUTTONS.SAVEAS_CONFIGURATION","BUTTONS.APPLY_CONFIGURATION","TITLE","SUBTITLE","ORIENTATION","STYLE","COLUMNS","GROUPS","FUNCTIONS","PREVIEW","COLUMN_CONFIGURATION","SAVE_COLUMN_CONFIGURATION","GRID","ROW_NUMBER","COLUMNS_NAMES","GROUP_DETAILS","GROUP_PAGE","BACKGROUND_ODD_ROWS","FIRST_GROUP_PAGE","DIALOG.SELECT_FUNCTION.TITLE","DIALOG.SELECT_FUNCTION.DESCRIPTION","COLUMN_NAME","COLUMN_WIDTH","DIALOG.SELECT_FUNCTION.MIN","DIALOG.SELECT_FUNCTION.MAX","DIALOG.SELECT_FUNCTION.AVG","DIALOG.SELECT_FUNCTION.SUM","ORDER_BY","CLEAR","MIN","MAX","AVERAGE","SUM","TOTAL","es","OReportsTranslatePipe","transform","bundle","CORE_TRANSLATIONS.MAP","Pipe","pure","OREPORT_DECLARATION_MODULES","OREPORT_IMPORTS_MODULES","CommonModule","OntimizeWebModule","NgxExtendedPdfViewerModule","FlexLayoutModule","DragDropModule","OREPORT_ENTRY_COMPONENTS_MODULES","OReportModule","NgModule","declarations","imports","providers","entryComponents","routes","OReportRoutingModule","RouterModule","forChild","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class OAlertService {\n\n  // Observable string\n  private alertSource = new Subject<string>();\n\n  // Observable string streams\n  alert$ = this.alertSource.asObservable();\n\n  // Service message commands\n  announceAlert(alert: string) {\n    this.alertSource.next(alert);\n  }\n\n}\n","import { Injectable, Injector } from \"@angular/core\";\nimport { OReportParam } from \"../types/report-param.type\";\nimport { Observable, OErrorDialogManager, OntimizeEEService, ServiceRequestParam, ServiceResponse, Util } from 'ontimize-web-ngx';\nimport { HttpEventType, HttpHeaders, HttpRequest } from \"@angular/common/http\";\nimport { share } from 'rxjs/operators';\n\n\n@Injectable({ providedIn: 'root' })\nexport class OReportService extends OntimizeEEService {\n  protected oErrorDialogManager: OErrorDialogManager;\n\n  constructor(protected injector: Injector) {\n    super(injector);\n    super.configureService(this.getDefaultServiceConfiguration());\n    this.oErrorDialogManager = injector.get<OErrorDialogManager>(OErrorDialogManager);\n  }\n\n  public createReport(reportparams: OReportParam): Observable<any> {\n\n    const body = JSON.stringify(\n      reportparams\n    )\n    const url = this.urlBase + '/dynamicjasper/report';\n\n    return this.doRequest({\n      method: 'POST',\n      url: url,\n      body: body\n    });\n  }\n\n  public saveAsPreferences(preferencesparams?: object): Observable<any> {\n    const body = JSON.stringify(\n      preferencesparams\n    )\n    const url = this.urlBase + '/preferences/save';\n\n    return this.doRequest({\n      method: 'POST',\n      url: url,\n      body: body\n    });\n  }\n\n  public savePreferences(id: number, preferencesparams?: object): Observable<any> {\n    const body = JSON.stringify(\n      preferencesparams\n    )\n    const url = this.urlBase + '/preferences/update/' + id;\n\n    return this.doRequest({\n      method: 'PUT',\n      url: url,\n      body: body\n    });\n  }\n\n  public getPreferences(entity?: string, service?: string): Observable<any> {\n\n    const url = this.urlBase + '/preferences/preferences?entity=' + entity + '&service=' + service + \"&type=REPORT\";\n\n    return this.doRequest({\n      method: 'GET',\n      url: url\n    });\n\n  }\n  public getFunctions(functionparams?: object): Observable<any> {\n\n    const body = JSON.stringify(\n      functionparams\n    )\n    const url = this.urlBase + '/dynamicjasper/functionsName';\n\n    return this.doRequest({\n      method: 'POST',\n      url: url,\n      body: body\n    });\n  }\n\n  public deletePreferences(id?: number): Observable<any> {\n\n    const url = this.urlBase + '/preferences/remove/' + id;\n    return this.doRequest({\n      method: 'DELETE',\n      url: url\n    });\n\n  }\n\n  /** overridden method to add error callback for all requests */\n  doRequest(param: ServiceRequestParam): Observable<ServiceResponse> {\n    return super.doRequest({\n      method: param.method,\n      url: param.url,\n      body: param.body,\n      errorCallBack: this.errorCallBack\n    });\n  }\n\n\n  errorCallBack(httpErrorResponse: any) {\n    const error = httpErrorResponse.error;\n    if (Util.isObject(error)) {\n      if (error['code'] === 1 && Util.isDefined(error['message'])) {\n        this.showNotificationError(error['message']);\n        return;\n      }\n    }\n    this.showNotificationError('MESSAGES.ERROR_QUERY');\n\n  }\n\n  showNotificationError(error: string) {\n    this.oErrorDialogManager.openErrorDialog(error);\n  }\n\n  upload(files: any[], entity: string, data?: object): Observable<any> {\n    const dataObservable = new Observable(observer => {\n\n      let url = `${this.urlBase}/reportstore/${entity}`;\n\n      const toUpload: any = new FormData();\n      files.forEach(item => {\n        item.prepareToUpload();\n        item.isUploading = true;\n        toUpload.append('name', item.name);\n        toUpload.append('file', item.file);\n      });\n\n      if (data) {\n        toUpload.append('data', JSON.stringify(data));\n      }\n\n      const request = new HttpRequest('POST', url, toUpload, {\n        headers: this.buildHeadersReport(),\n        reportProgress: true\n      });\n\n      this.httpClient.request(request).subscribe(resp => {\n        if (HttpEventType.UploadProgress === resp.type) {\n          // Upload progress event received\n          const progressData = {\n            loaded: resp.loaded,\n            total: resp.total\n          };\n          observer.next(progressData);\n        } else if (HttpEventType.Response === resp.type) {\n          // Full response received\n          if (resp.body) {\n            this.bodyCode(resp, observer);\n          } else {\n            observer.next(resp.body);\n          }\n        }\n      }, error => {\n        console.error(error);\n        if (error.status === 401) {\n          this.authService.logout();\n        } else {\n          observer.error(error);\n        }\n      },\n        () => observer.complete());\n    });\n    return dataObservable.pipe(share());\n  }\n  protected bodyCode(resp, observer) {\n    if (resp.body['code'] === 3) {\n      this.authService.logout();\n    } else if (resp.body['code'] === 1) {\n      observer.error(resp.body['message']);\n    } else if (resp.body['code'] === 0) {\n      // RESPONSE\n      observer.next(resp.body);\n    } else {\n      // Unknow state -> error\n      observer.error('Service unavailable');\n    }\n  }\n\n\n  public advancedQuery(_kv?: Object, _av?: Array<string>, entity?: string, _sqltypes?: Object, offset?: number, _pagesize?: number, _orderby?: Array<Object>): Observable<any> {\n    offset = (Util.isDefined(offset)) ? offset : this.offset;\n\n    // Calculate page\n    let page = 0;\n    if (Util.isDefined(offset)) {\n      page = Math.trunc(offset / 10) + 1;\n    }\n\n    let url = this.urlBase + '/reportstore/' + entity + '/?format=json' + '&page=' + page;\n\n    return this.doRequest({\n      method: 'GET',\n      url: url\n    });\n  }\n\n  public query(kv?: Object, _av?: Array<string>, entity?: string, _sqltypes?: Object): Observable<any> {\n    const identifier = kv['UUID'];\n    let url = '';\n    if (Object.keys(kv).length === 0) {\n      url = `${this.urlBase}/reportstore/${entity}`;\n    } else {\n      url = `${this.urlBase}/reportstore/${entity}/` + identifier;\n    }\n\n    return this.doRequest({\n      method: 'GET',\n      url: url\n    });\n  }\n\n  public fillReport(av?: Array<string>, entity?: string, _sqltypes?: Object, filter?: Object): Observable<any> {\n    const identifier = av[0];\n    let params = '';\n\n    for (let i = 1; i < av.length; i++)\n      params = params + av[i].toString() + ',';\n    let body = JSON.stringify({\n      params: params,\n      filter: filter\n    })\n\n    let url = `${this.urlBase}/reportstore/${entity}/` + identifier;\n\n    return this.doRequest({\n      method: 'POST',\n      url: url,\n      body: body\n    });\n  }\n\n  public delete(kv?: Object, _entity?: string, _sqltypes?: Object): Observable<any> {\n    const identifier = kv.valueOf()[Object.keys(kv)[0]];\n    let url = `${this.urlBase}/reportstore/removeReport/` + identifier;\n\n    return this.doRequest({\n      method: 'DELETE',\n      url: url\n    });\n  }\n\n  public update(kv?: Object, av?: Array<string>, _entity?: string, _sqltypes?: Object): Observable<any> {\n    const identifier = kv.valueOf()[Object.keys(kv)[0]];\n    let url = `${this.urlBase}/reportstore/updateReport/` + identifier;\n\n    return this.doRequest({\n      method: 'PUT',\n      url: url,\n      body: av\n    });\n  }\n\n  protected buildHeadersReport(): HttpHeaders {\n    let headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n    const sessionId = this.authService.getSessionInfo().id;\n    if (Util.isDefined(sessionId)) {\n      headers = headers.append('Authorization', 'Bearer ' + sessionId);\n    }\n    return headers;\n  }\n\n}\n","import { OReportFunction } from \"../types\";\nexport class Constants {\n  public static DEFAULT_WIDTH_DIALOG = '70%';\n  public static DEFAULT_HEIGHT_DIALOG = '90%';\n  public static DEFAULT_WIDTH_COLUMN_STYLE = 85;\n  public static DEFAULT_ALIGNMENT_COLUMN_STYLE: 'center' | 'right' | 'left' = 'left';\n  public static DEFAULT_COLUMN_FUNCTION: OReportFunction = { columnName: 'TOTAL', type: 'TOTAL' };\n}\n","import { MatDialog } from \"@angular/material\";\nimport { Constants } from \"./constants\";\n\nexport class Utils {\n  static setFullscreenDialog(fullscreen: boolean, dialogRef: any): void {\n    if (!fullscreen) {\n      dialogRef.updateSize(\"100%\", \"100%\");\n    } else {\n      dialogRef.updateSize(Constants.DEFAULT_WIDTH_DIALOG, Constants.DEFAULT_HEIGHT_DIALOG);\n    }\n  }\n  static cloneObject(data: Object) {\n    return JSON.parse(JSON.stringify(data));\n  }\n\n  static openModalVisor(dialog: MatDialog, component: any, data: object) {\n    dialog.open(component, {\n      maxWidth: '100vw',\n      maxHeight: '100vh',\n      height: Constants.DEFAULT_HEIGHT_DIALOG,\n      width: Constants.DEFAULT_WIDTH_DIALOG,\n      panelClass: ['o-dialog-class', 'o-table-dialog', 'o-report'],\n      data: data\n    });\n  }\n}\n","import { Component, Inject, ViewEncapsulation } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { DialogService } from 'ontimize-web-ngx';\nimport { OReportService } from '../../../services/o-report.service';\nimport { Utils } from '../../../util/utils';\n\n@Component({\n  selector: 'o-report-viewer',\n  templateUrl: './o-report-viewer.component.html',\n  styleUrls: ['./o-report-viewer.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '[class.o-report-viewer]': 'true'\n  }\n})\nexport class OReportViewerComponent {\n\n  public pdf = '';\n  public name = '';\n  public fullscreen: boolean = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<OReportViewerComponent>,\n    private reportService: OReportService,\n    protected dialogService: DialogService,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    this.reportService.configureService(this.reportService.getDefaultServiceConfiguration());\n    this.reportService.configureAdapter();\n    this.name = this.data.name;\n    this.reportService.fillReport(this.data['params'], 'fillReport', {}, this.data['filter']).subscribe(\n      res => {\n        if (res && res.data.length && res.code === 0) {\n          this.pdf = res.data[0].file;\n        }\n      },\n      err => {\n        if (this.dialogService) {\n          this.dialogService.error('ERROR',\n            'SERVER_ERROR_MESSAGE');\n        }\n        console.log(err);\n      }\n    );\n  }\n  setFullscreenDialog(): void {\n    Utils.setFullscreenDialog(this.fullscreen, this.dialogRef);\n    this.fullscreen = !this.fullscreen;\n  }\n}\n","import { Injectable, Injector } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material\";\nimport { DialogService } from \"ontimize-web-ngx\";\nimport { OReportViewerComponent } from \"../components/report/o-report-viewer/o-report-viewer.component\";\nimport { Utils } from \"../util/utils\";\nimport { OReportService } from \"./o-report.service\";\n\n@Injectable()\nexport class OReportStoreService {\n  private reportService: OReportService;\n  protected dialogService: DialogService;\n  protected dialog: MatDialog\n  constructor(\n    private injector: Injector\n  ) {\n    this.dialogService = this.injector.get<DialogService>(DialogService);\n    this.dialog = this.injector.get<MatDialog>(MatDialog);\n    this.reportService = this.injector.get<OReportService>(OReportService);\n  }\n\n  openFillReport(reportId: string, parametersValues: object, filter: object) {\n    this.reportService.configureService(this.reportService.getDefaultServiceConfiguration());\n    this.reportService.configureAdapter();\n    let kv = { 'UUID': reportId };\n    this.reportService.query(kv, null, 'getReport', {}).subscribe(\n      res => {\n        if (res && res.data.length && res.code === 0) {\n          let parameters = res.data[0].PARAMETERS;\n          let name = res.data[0].NAME;\n          let av = [];\n          if (parameters.length > 0) {\n            av = [reportId];\n            let values = Object.values(parametersValues);\n            for (let value of values) {\n              av.push(value);\n            }\n          } else {\n            av = [reportId];\n          }\n          const data = { 'params': av, 'filter': filter, 'name': name };\n          Utils.openModalVisor(this.dialog, OReportViewerComponent, data)\n\n        }\n      },\n      err => {\n        if (this.dialogService) {\n          this.dialogService.error('ERROR',\n            'SERVER_ERROR_MESSAGE');\n        }\n        console.log(err);\n      }\n    );\n\n  }\n}","import { OReportColumn } from \"./report-column.type\"\nimport { OReportFunction } from \"./report-function.type\"\nimport { OReportOrderBy } from \"./report-orderBy.type\"\nimport { OReportStyleParams } from \"./report-style-params.type\"\n\nexport type OReportPreferences = {\n  title: string\n  subtitle: string,\n  vertical: boolean,\n  style: OReportStyleParams,\n  columns: Array<OReportColumn>,\n  orderBy?: Array<OReportOrderBy>,\n  functions?: Array<OReportFunction>,\n  groups?: Array<string>,\n  entity: string,\n  service: string\n}\n\nexport class DefaultOReportPreferences implements OReportPreferences {\n  public title: string;\n  public subtitle: string;\n  public vertical: boolean;\n  public columns: OReportColumn[];\n  public groups: string[];\n  public functions: OReportFunction[];\n  public style: OReportStyleParams;\n  public orderBy: OReportOrderBy[];\n  public entity: string;\n  public service: string;\n\n  constructor() {\n    this.title = '';\n    this.subtitle = '';\n    this.vertical = true;\n    this.columns = [];\n    this.groups = [];\n    this.functions = [];\n    this.style = {\n      grid: false, rowNumber: false, columnName: true, backgroundOnOddRows: false, hideGroupDetails: false, groupNewPage: false, firstGroupNewPage: false\n    };\n    this.orderBy = [];\n    this.entity = '';\n    this.service = '';\n\n  }\n}\n\n\n","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, Inject, OnInit, Optional, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatSelectionList, MatListOption } from '@angular/material';\nimport { DialogService, Util } from 'ontimize-web-ngx';\nimport { OReportService } from '../../../services/o-report.service';\nimport { OReportConfiguration } from '../../../types/report-configuration.type';\n\n\n@Component({\n  selector: 'apply-configuration-dialog',\n  templateUrl: './apply-configuration-dialog.component.html'\n})\n\nexport class ApplyConfigurationDialogComponent implements OnInit {\n  @ViewChild(MatSelectionList, { static: true })\n  protected configurationList: MatSelectionList;\n\n  public configurationListData: OReportConfiguration[] = [];\n  public selectedConfiguration: OReportConfiguration;\n\n  constructor(\n    private dialogService: DialogService,\n    private reportsService: OReportService,\n    public dialogo: MatDialogRef<ApplyConfigurationDialogComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any) {\n    this.getConfigurations();\n  }\n  ngOnInit(): void {\n    this.configurationList.selectedOptions = new SelectionModel<MatListOption>(false);\n  }\n\n  loadConfiguration(): void {\n    this.dialogo.close(this.selectedConfiguration);\n  }\n\n  remove(): void {\n    this.dialogService.confirm('CONFIRM', 'TABLE.DIALOG.CONFIRM_REMOVE_CONFIGURATION').then(result => {\n      if (result) {\n        this.reportsService.deletePreferences(this.selectedConfiguration.ID).subscribe(res => {\n          if (res && res.code === 0) {\n            this.getConfigurations();\n          }\n        });\n      }\n    });\n  }\n  onClickConfigurationList(option) {\n    this.selectedConfiguration = option;\n  }\n\n  getConfigurations() {\n    this.reportsService.getPreferences(this.data.entity, this.data.service).subscribe(resp => {\n      if (resp.isSuccessful()) {\n        this.setDataArray(resp.data);\n      }\n    });\n  }\n\n  setDataArray(data: any) {\n    if (Util.isArray(data)) {\n      this.configurationListData = data;\n    } else {\n      this.configurationListData = []\n    }\n  }\n}","import { Component, Injector } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material';\nimport { OTableBaseDialogClass } from 'ontimize-web-ngx';\n\n@Component({\n  selector: 'app-save-preferences-dialog',\n  templateUrl: './save-preferences-dialog.component.html'\n})\n\nexport class SavePreferencesDialogComponent extends OTableBaseDialogClass {\n  public name: string;\n  public description: string;\n\n  public formGroup: FormGroup = new FormGroup({\n    name: new FormControl('', [\n      Validators.required\n    ]),\n    description: new FormControl('')\n  });\n\n  constructor(\n    public dialogo: MatDialogRef<SavePreferencesDialogComponent>,\n    protected injector: Injector) {\n    super(injector);\n    this.setFormControl(this.formGroup.get('name'));\n  }\n\n  save(): void {\n    this.dialogo.close({ \"name\": this.name, \"description\": this.description });\n  }\n}\n","import { Component, Inject, Optional } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { OReportFunction } from '../../../types/report-function.type';\n\n@Component({\n  selector: 'app-select-function-dialog',\n  templateUrl: './select-function-dialog.component.html',\n  styleUrls: ['./select-function-dialog.component.scss'],\n})\nexport class SelectFunctionDialogComponent {\n  public selectedFunction: string;\n  public functions: { id: string, value: string }[] = [\n    { id: 'SUM', value: 'DIALOG.SELECT_FUNCTION.SUM' },\n    { id: 'AVERAGE', value: 'DIALOG.SELECT_FUNCTION.AVG' },\n    { id: 'MAX', value: 'DIALOG.SELECT_FUNCTION.MAX' },\n    { id: 'MIN', value: 'DIALOG.SELECT_FUNCTION.MIN' }];\n  constructor(\n    public dialogo: MatDialogRef<SelectFunctionDialogComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public reportFunction: OReportFunction) {\n    this.selectedFunction = reportFunction.type;\n  }\n\n  public save(): void {\n    this.dialogo.close({ columnName: this.reportFunction.columnName, type: this.selectedFunction });\n  }\n\n}\n","import { Component, Inject, Optional } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Util } from 'ontimize-web-ngx';\nimport { OReportColumn } from '../../../types/report-column.type';\nimport { Constants } from '../../../util/constants';\nimport { Utils } from '../../../util/utils';\n\n@Component({\n  selector: 'app-style-dialog',\n  templateUrl: './style-dialog.component.html'\n})\nexport class StyleDialogComponent {\n\n  public reportColumn: OReportColumn;\n\n  public dataAlignment = [\n    { \"name\": \"left\", \"icon\": \"format_align_left\" },\n    { \"name\": \"center\", \"icon\": \"format_align_center\" },\n    { \"name\": \"right\", \"icon\": \"format_align_right\" }\n  ]\n\n  constructor(\n    @Optional() public dialogo: MatDialogRef<StyleDialogComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: OReportColumn) {\n\n    this.reportColumn = Utils.cloneObject(data);\n\n    if (this.reportColumn.columnStyle && !Util.isDefined(this.reportColumn.columnStyle.width)) {\n      this.reportColumn.columnStyle.width = Constants.DEFAULT_WIDTH_COLUMN_STYLE;\n    }\n    if (this.reportColumn.columnStyle && !Util.isDefined(this.reportColumn.columnStyle.alignment)) {\n      this.reportColumn.columnStyle.alignment = Constants.DEFAULT_ALIGNMENT_COLUMN_STYLE;\n    }\n    if (!this.reportColumn.columnStyle) {\n      this.reportColumn.columnStyle = { width: Constants.DEFAULT_WIDTH_COLUMN_STYLE, alignment: Constants.DEFAULT_ALIGNMENT_COLUMN_STYLE }\n    }\n  }\n\n  confirm(): void {\n    this.dialogo.close(this.reportColumn);\n  }\n\n}\n","import { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { Injector, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { MatSelectionList, MatSelectionListChange } from '@angular/material';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AppConfig, DialogService, OColumn, OTableComponent, OTranslateService, SnackBarService, Util } from 'ontimize-web-ngx';\nimport { OReportService } from '../../../services/o-report.service';\nimport { OReportColumnStyle } from '../../../types/report-column-style.type';\nimport { OReportColumn } from '../../../types/report-column.type';\nimport { OReportConfiguration } from '../../../types/report-configuration.type';\nimport { OReportFunction } from '../../../types/report-function.type';\nimport { OReportOrderBy } from '../../../types/report-orderBy.type';\nimport { DefaultOReportPreferences, OReportPreferences } from '../../../types/report-preferences.type';\nimport { Utils } from '../../../util/utils';\nimport { ApplyConfigurationDialogComponent } from '../apply-configuration/apply-configuration-dialog.component';\nimport { SavePreferencesDialogComponent } from '../save-preferences-dialog/save-preferences-dialog.component';\nimport { SelectFunctionDialogComponent } from '../select-function-dialog/select-function-dialog.component';\n\nimport { StyleDialogComponent } from '../style-dialog/style-dialog.component';\n\n@Component({\n  selector: 'o-report-on-demand',\n  templateUrl: './report-on-demand.component.html',\n  styleUrls: ['./report-on-demand.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '[class.o-report-on-demand]': 'true'\n  }\n})\n\nexport class ReportOnDemandComponent implements OnInit {\n\n  @ViewChild('columnsList', { static: false }) columnsList: MatSelectionList;\n  @ViewChild('functionsList', { static: false }) functionsList: MatSelectionList;\n  @ViewChild('orderByList', { static: false }) orderByList: MatSelectionList;\n\n  public orientations = [{ text: \"vertical\", value: true }, { text: \"horizontal\", value: false }];\n  public functionsData: OReportFunction[] = [];\n  private initialFunctionsData: OReportFunction[] = [];\n  public appliedConfiguration: boolean = false;\n  public selectedFunctions = [];\n\n  public stylesArray = [\n    { value: 'grid', viewValue: 'GRID' },\n    { value: 'rowNumber', viewValue: 'ROW_NUMBER' },\n    { value: 'columnName', viewValue: 'COLUMNS_NAMES' },\n    { value: 'backgroundOnOddRows', viewValue: 'BACKGROUND_ODD_ROWS' },\n    { value: 'hideGroupDetails', viewValue: 'GROUP_DETAILS' },\n    { value: 'groupNewPage', viewValue: 'GROUP_PAGE' },\n    { value: 'firstGroupNewPage', viewValue: 'FIRST_GROUP_PAGE' }\n  ];\n\n\n  public columnsData: Array<OReportColumn>;\n  private initialColumnsData: Array<OReportColumn>;\n  public selectedColumnsData: string[];\n  public columnsOrderBy: Array<OReportOrderBy> = [];\n\n  public columnsToGroupData: any[];\n  private initialColumnsToGroupData: any[];\n  public openedSidenav: boolean = true;\n  public fullscreen: boolean = false;\n\n  protected service: string;\n  protected language: string;\n  protected columnsArray: Array<string>;\n  protected table: OTableComponent;\n  private blankPdf: string = 'JVBERi0xLjYKJcOkw7zDtsOfCjIgMCBvYmoKPDwvTGVuZ3RoIDMgMCBSL0ZpbHRlci9GbGF0ZURlY29kZT4+CnN0cmVhbQp4nDPQM1Qo5ypUMFAw0DMwslAwtTTVMzI3VbAwMdSzMDNUKErlCtdSyOMKVAAAtxIIrgplbmRzdHJlYW0KZW5kb2JqCgozIDAgb2JqCjUwCmVuZG9iagoKNSAwIG9iago8PAo+PgplbmRvYmoKCjYgMCBvYmoKPDwvRm9udCA1IDAgUgovUHJvY1NldFsvUERGL1RleHRdCj4+CmVuZG9iagoKMSAwIG9iago8PC9UeXBlL1BhZ2UvUGFyZW50IDQgMCBSL1Jlc291cmNlcyA2IDAgUi9NZWRpYUJveFswIDAgNTk1LjMwMzkzNzAwNzg3NCA4NDEuODg5NzYzNzc5NTI4XS9Hcm91cDw8L1MvVHJhbnNwYXJlbmN5L0NTL0RldmljZVJHQi9JIHRydWU+Pi9Db250ZW50cyAyIDAgUj4+CmVuZG9iagoKNCAwIG9iago8PC9UeXBlL1BhZ2VzCi9SZXNvdXJjZXMgNiAwIFIKL01lZGlhQm94WyAwIDAgNTk1IDg0MSBdCi9LaWRzWyAxIDAgUiBdCi9Db3VudCAxPj4KZW5kb2JqCgo3IDAgb2JqCjw8L1R5cGUvQ2F0YWxvZy9QYWdlcyA0IDAgUgovT3BlbkFjdGlvblsxIDAgUiAvWFlaIG51bGwgbnVsbCAwXQovTGFuZyhlcy1FUykKPj4KZW5kb2JqCgo4IDAgb2JqCjw8L0F1dGhvcjxGRUZGMDA1MDAwNjEwMDc0MDA3MjAwNjkwMDYzMDA2OTAwNjEwMDIwMDA0RDAwNjEwMDcyMDA3NDAwRUQwMDZFMDA2NTAwN0EwMDIwMDA1NDAwNjkwMDZDMDA3NjAwNjU+Ci9DcmVhdG9yPEZFRkYwMDU3MDA3MjAwNjkwMDc0MDA2NTAwNzI+Ci9Qcm9kdWNlcjxGRUZGMDA0QzAwNjkwMDYyMDA3MjAwNjUwMDRGMDA2NjAwNjYwMDY5MDA2MzAwNjUwMDIwMDAzNzAwMkUwMDMxPgovQ3JlYXRpb25EYXRlKEQ6MjAyMjA1MTAxNDUyMDYrMDInMDAnKT4+CmVuZG9iagoKeHJlZgowIDkKMDAwMDAwMDAwMCA2NTUzNSBmIAowMDAwMDAwMjM0IDAwMDAwIG4gCjAwMDAwMDAwMTkgMDAwMDAgbiAKMDAwMDAwMDE0MCAwMDAwMCBuIAowMDAwMDAwNDAyIDAwMDAwIG4gCjAwMDAwMDAxNTkgMDAwMDAgbiAKMDAwMDAwMDE4MSAwMDAwMCBuIAowMDAwMDAwNTAwIDAwMDAwIG4gCjAwMDAwMDA1OTYgMDAwMDAgbiAKdHJhaWxlcgo8PC9TaXplIDkvUm9vdCA3IDAgUgovSW5mbyA4IDAgUgovSUQgWyA8RDdBODhCRTRFREFDRkU1RDFGMTIwMzNFMDUyN0JERkU+CjxEN0E4OEJFNEVEQUNGRTVEMUYxMjAzM0UwNTI3QkRGRT4gXQovRG9jQ2hlY2tzdW0gLzgwNTA5NDU4QjgyN0RCRDQ2QzlEODdBMjY4NjdCNEFDCj4+CnN0YXJ0eHJlZgo4NzYKJSVFT0YK';\n\n  public currentPreference: OReportPreferences;\n  public currentConfiguration: OReportConfiguration;\n  public pdf: string;\n\n  public translateService: OTranslateService;\n  protected appConfig: AppConfig;\n  protected snackBarService: SnackBarService;\n  protected reportService: OReportService;\n  protected dialogService: DialogService;\n  public dialog: MatDialog;\n\n  constructor(\n    public injector: Injector,\n    public dialogRef: MatDialogRef<ReportOnDemandComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: OTableComponent\n  ) {\n    this.appConfig = this.injector.get(AppConfig);\n    this.translateService = this.injector.get<OTranslateService>(OTranslateService);\n    this.snackBarService = this.injector.get<SnackBarService>(SnackBarService);\n    this.reportService = this.injector.get<OReportService>(OReportService);\n    this.dialogService = this.injector.get<DialogService>(DialogService);\n    this.dialog = this.injector.get<MatDialog>(MatDialog);\n  }\n\n  ngOnInit() {\n    this.initialize();\n  }\n\n  protected initialize() {\n    this.table = this.data;\n    this.language = this.translateService.getCurrentLang();\n    this.service = this.table.service;\n    this.columnsArray = this.parseColumnsVisible();\n    this.initialColumnsData = this.parseReportColumn(this.columnsArray);\n    this.initialColumnsToGroupData = this.columnsArray;\n    this.currentConfiguration = { ENTITY: this.table.entity };\n    this.initializeReportPreferences();\n\n    this.getFunctions();\n  }\n\n  public getDefaultServiceConfiguration(serviceName?: string): any {\n    const configuration = this.appConfig.getServiceConfiguration();\n    let servConfig = {};\n    if (serviceName && configuration.hasOwnProperty(serviceName)) {\n      servConfig = configuration[serviceName];\n    }\n    return servConfig;\n  }\n\n  public previewReport(): void {\n    this.openReport();\n  }\n\n  public clearCurrentPreferences() {\n    this.initializeReportPreferences();\n    if (this.columnsList) {\n      this.columnsList.deselectAll();\n    }\n    if (this.functionsList) {\n      this.functionsList.deselectAll();\n    }\n\n    if (this.orderByList) {\n      this.orderByList.deselectAll();\n    }\n  }\n\n  protected initializeReportPreferences() {\n    /* initialize columnsData and functionsData because they are modified by\n    changing settings */\n    this.columnsData = Utils.cloneObject(this.initialColumnsData);\n    this.functionsData = Utils.cloneObject(this.initialFunctionsData);\n    this.columnsToGroupData = Utils.cloneObject(this.initialColumnsToGroupData);\n    this.columnsOrderBy = [];\n    this.pdf = this.blankPdf;\n    this.currentPreference = new DefaultOReportPreferences();\n    this.currentPreference.entity = this.table.entity;\n    this.currentPreference.service = this.table.service;\n  }\n\n  protected parseColumnsVisible() {\n    const columnsArray = Util.parseArray(this.table.columns);\n    return this.table.oTableOptions.columns.filter(oCol => oCol.type !== \"image\" && oCol.visible && columnsArray.findIndex(column => column === oCol.attr) > -1).map(\n      (x: OColumn) => x.attr\n    )\n  }\n\n  protected parseReportColumn(columns: any[]): OReportColumn[] {\n    return columns.map(column => {\n      let reportColumn: OReportColumn = {\n        id: column, name: this.translateService.get(column)\n      };\n      let columnStyle = this.parseColumnStyle(column);\n      if (Util.isObject(columnStyle) && Object.keys(columnStyle).length > 0) {\n        reportColumn.columnStyle = columnStyle;\n      }\n      return reportColumn;\n    });\n  }\n\n  protected parseColumnStyle(column: string): OReportColumnStyle {\n    let columnStyle: OReportColumnStyle = {};\n    const renderer = this.createRenderer(column);\n    if (Util.isDefined(renderer) && Util.isDefined(renderer.type)) {\n      columnStyle.renderer = renderer;\n    }\n    return columnStyle;\n  }\n\n  protected parseColumnsOrderBy(columnsOrderBy: any): OReportOrderBy[] {\n    return columnsOrderBy.map(column => {\n      return { columnId: column.columnId, columnName: column.name, ascendent: column.ascendent }\n    });\n  }\n\n  protected openReport() {\n    const serviceConfiguration = this.getDefaultServiceConfiguration(this.currentPreference.service);\n    let pathService: string;\n    if (Util.isObject(serviceConfiguration) && serviceConfiguration.hasOwnProperty('path')) {\n      pathService = serviceConfiguration.path;\n    }\n    this.reportService.createReport({\n      \"title\": this.currentPreference.title, \"groups\": this.currentPreference.groups, \"entity\": this.currentPreference.entity, \"path\": pathService,\n      \"service\": this.currentPreference.service, \"vertical\": this.currentPreference.vertical, \"functions\": this.currentPreference.functions,\n      \"style\": this.currentPreference.style, \"subtitle\": this.currentPreference.subtitle, \"columns\": this.currentPreference.columns, \"orderBy\": this.currentPreference.orderBy,\n      \"language\": this.language\n\n    }).subscribe(res => {\n      if (res && res.data.length && res.code === 0) {\n        this.pdf = res.data[0].file;\n      }\n    });\n  }\n\n  getFunctions() {\n    this.reportService.getFunctions({\n      \"columns\": this.columnsArray, \"entity\": this.currentPreference.entity,\n      \"service\": this.currentPreference.service, \"language\": this.language\n    }).subscribe(res => {\n      if (res && res.data.length && res.code === 0) {\n        this.functionsData = this.parseDefaultFunctionsData(res.data[0].functions);\n        this.initialFunctionsData = Utils.cloneObject(this.functionsData);\n      }\n    });\n  }\n\n  parseDefaultFunctionsData(listColumns: OReportFunction[]) {\n    return listColumns.filter(column =>\n      this.columnsData.\n        findIndex(columnData =>\n          columnData.columnStyle && columnData.columnStyle.renderer && columnData.columnStyle.renderer.type === 'service' && columnData.id === column.columnName\n        ) === -1\n    );\n  }\n\n  /**\n   * Checks preference data is consistent with the table data\n   */\n  private checkPreferenceData() {\n    this.currentPreference.columns = this.currentPreference.columns.filter(column => this.initialColumnsData.findIndex(columnData => columnData.id === column.id) > -1);\n    this.currentPreference.groups = this.currentPreference.groups.filter(column => this.initialColumnsToGroupData.findIndex(columnData => columnData === column) > -1);\n    this.currentPreference.functions = this.currentPreference.functions.filter(column => this.initialFunctionsData.findIndex(columnData => columnData.columnName === column.columnName) > -1);\n    this.currentPreference.orderBy = this.currentPreference.orderBy.filter(column => this.columnsOrderBy.findIndex(columnData => columnData.columnId === column.columnId) > -1);\n  }\n\n  applyConfiguration(configuration: any) {\n    this.clearCurrentPreferences();\n    this.currentConfiguration = configuration;\n    this.currentPreference = JSON.parse(this.currentConfiguration.PREFERENCES);\n    this.currentPreference.columns.forEach((column: OReportColumn) => this.updateColumnsOrderByData(column.id));\n\n    this.checkPreferenceData();\n    // Set the functionsData with the data that is loaded from the configuration because it changes\n    this.functionsData = this.functionsData.map((functionData: OReportFunction) => {\n      const index = this.currentPreference.functions.findIndex(x => x.columnName === functionData.columnName);\n      if (index > -1) {\n        functionData.type = this.currentPreference.functions[index].type;\n      }\n      return functionData\n    });\n\n    this.columnsData.sort((a: OReportColumn, b: OReportColumn) => {\n      let indexA = this.currentPreference.columns.findIndex(x => x.id === a.id);\n      let indexB = this.currentPreference.columns.findIndex(x => x.id === b.id);\n      return this.getSortIndex(indexA, indexB);\n\n    });\n    this.columnsOrderBy.sort((a: OReportOrderBy, b: OReportOrderBy) => {\n      let indexA = this.currentPreference.orderBy.findIndex(x => x.columnId === a.columnId);\n      let indexB = this.currentPreference.orderBy.findIndex(x => x.columnId === b.columnId);\n      return this.getSortIndex(indexA, indexB);\n\n    });\n    this.columnsToGroupData.sort((a: string, b: string) => {\n      let indexA = this.currentPreference.groups.findIndex(x => x === a);\n      let indexB = this.currentPreference.groups.findIndex(x => x === b);\n      return this.getSortIndex(indexA, indexB);\n    });\n\n  }\n\n  private getSortIndex(indexA: number, indexB: number): number {\n    if (indexA === -1) {\n      return 0;\n    }\n    if (indexB === -1) {\n      return indexB;\n    } else {\n      return indexA - indexB;\n    }\n\n  }\n\n  showColumnStyleDialog(event: Event, id: string): void {\n    event.stopPropagation();\n    const columnData: OReportColumn = Object.assign({}, this.currentPreference.columns.find((x: OReportColumn) => x.id === id));\n    if (Util.isDefined(columnData)) {\n      this.dialog\n        .open(StyleDialogComponent, {\n          data: columnData,\n          panelClass: ['o-dialog-class', 'o-table-dialog']\n        })\n        .afterClosed()\n        .subscribe((data: OReportColumn) => {\n          if (Util.isDefined(data) && data) {\n            const column = Utils.cloneObject(data);\n            this.updateColumnStyleConfigurationData(column);\n          }\n        });\n    }\n  }\n\n  updateColumnStyleConfigurationData(data: OReportColumn) {\n\n\n    let columns = Utils.cloneObject(this.currentPreference.columns);\n    this.currentPreference.columns = [];\n    const indexColumnData = this.columnsData.findIndex(x => x.id === data.id);\n    if (indexColumnData > -1) {\n      this.columnsData[indexColumnData] = data;\n    }\n    const indexColumnStyleData = columns.findIndex(x => x.id === data.id);\n    if (indexColumnStyleData > -1) {\n      columns[indexColumnStyleData] = data;\n    }\n\n    this.currentPreference.columns = columns;\n\n  }\n\n\n  selectFunction(event, reportFunction: OReportFunction): void {\n    event.stopPropagation();\n    if (reportFunction.columnName != 'TOTAL') {\n      this.dialog\n        .open(SelectFunctionDialogComponent, {\n          data: reportFunction,\n          panelClass: ['o-dialog-class', 'o-table-dialog']\n        })\n        .afterClosed()\n        .subscribe((data: any) => {\n          //Updated current functions selected and functionsData\n          if (data) {\n            this.updatedFunctionData(data);\n            this.updatedSelectFunction(data);\n          }\n        });\n    }\n  }\n\n  private updatedFunctionData(data: OReportFunction) {\n    const index = this.functionsData.findIndex(x => x.columnName === data.columnName);\n    if (index === -1) {\n      this.functionsData.push(data);\n    } else {\n      this.functionsData[index] = data;\n    }\n  }\n\n  private updatedSelectFunction(selectedFunction: OReportFunction) {\n    this.currentPreference.functions.forEach((data: any, i: number) => {\n      if (data.columnName === selectedFunction.columnName) {\n        this.currentPreference.functions[i] = data;\n      }\n    })\n  }\n\n  openSaveAsPreferences(): void {\n    this.dialog\n      .open(SavePreferencesDialogComponent, {\n        panelClass: ['o-dialog-class', 'o-table-dialog']\n      })\n      .afterClosed()\n      .subscribe((data: { name: string, description: string }) => {\n        if (Util.isDefined(data) && data) {\n          this.savePreferences(data);\n        }\n      });\n\n  }\n\n  dropColumns(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.columnsData, event.previousIndex, event.currentIndex);\n    this.updateColumnsSort();\n  }\n\n  dropGroups(event: CdkDragDrop<any[]>) {\n    moveItemInArray(this.columnsToGroupData, event.previousIndex, event.currentIndex)\n    this.updateColumnToGroupSort();\n  }\n\n  dropColumnsOrderBy(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.columnsOrderBy, event.previousIndex, event.currentIndex);\n    this.updateColumnGroupBySort();\n  }\n\n  updateColumnsSort() {\n    this.currentPreference.columns.sort((a: OReportColumn, b: OReportColumn) => {\n      let indexA = this.columnsData.findIndex(x => x.id === a.id);\n      let indexB = this.columnsData.findIndex(x => x.id === b.id);\n      return indexA - indexB;\n    });\n  }\n\n  updateColumnGroupBySort() {\n    this.currentPreference.orderBy.sort((a: OReportOrderBy, b: OReportOrderBy) => {\n      let indexA = this.columnsOrderBy.findIndex(x => x.columnId === a.columnId);\n      let indexB = this.columnsOrderBy.findIndex(x => x.columnId === b.columnId);\n      return indexA - indexB;\n    });\n  }\n\n  updateColumnToGroupSort() {\n    this.currentPreference.groups.sort((a: string, b: string) => {\n      let indexA = this.columnsToGroupData.findIndex(x => x === a);\n      let indexB = this.columnsToGroupData.findIndex(x => x === b);\n      return indexA - indexB;\n    });\n  }\n\n  public onApplyConfigurationClicked(): void {\n    this.dialog.open(ApplyConfigurationDialogComponent, {\n      width: 'calc((75em - 100%) * 1000)',\n      maxWidth: '65vw',\n      minWidth: '30vw',\n      disableClose: true,\n      panelClass: ['o-dialog-class', 'o-table-dialog'],\n      data: { entity: this.currentPreference.entity, service: this.currentPreference.service },\n    }).afterClosed()\n      .subscribe((data: OReportConfiguration) => {\n        if (Util.isDefined(data) && data) {\n          this.applyConfiguration(data);\n          this.appliedConfiguration = true;\n        }\n      }, _error => {\n        this.appliedConfiguration = false;\n      });\n  }\n\n  openSavePreferences(): void {\n    if (Util.isDefined(this.currentConfiguration.ID)) {\n      this.savePreferences({ name: this.currentConfiguration.NAME, description: this.currentConfiguration.DESCRIPTION }, true);\n    } else {\n      this.dialog\n        .open(SavePreferencesDialogComponent, {\n          panelClass: ['o-dialog-class', 'o-table-dialog']\n        })\n        .afterClosed()\n        .subscribe((data: { name: string, description: string }) => {\n          if (Util.isDefined(data) && data) {\n            this.savePreferences(data, true);\n          }\n        });\n    }\n\n  }\n\n  savePreferences(data: any, update?: boolean) {\n    let preference = {\n      \"name\": data.name, \"description\": data.description,\n      \"entity\": this.currentPreference.entity, \"service\": this.currentPreference.service, \"type\": \"REPORT\", \"params\": {\n        \"title\": this.currentPreference.title, \"groups\": this.currentPreference.groups,\n        \"vertical\": this.currentPreference.vertical, \"functions\": this.currentPreference.functions, \"style\": this.currentPreference.style,\n        \"subtitle\": this.currentPreference.subtitle, \"columns\": this.currentPreference.columns, \"orderBy\": this.currentPreference.orderBy, \"entity\": this.currentPreference.entity, \"service\": this.currentPreference.service\n      }\n    }\n\n    if (update) {\n      this.reportService.savePreferences(this.currentConfiguration.ID, preference).subscribe(res => {\n        this.showConfirmOperatinInSnackBar(res);\n      });\n    } else {\n      this.reportService.saveAsPreferences(preference).subscribe(res => {\n        if (res && res.code === 0) {\n          this.showConfirmOperatinInSnackBar(res);\n        }\n      });\n    }\n  }\n\n  private showConfirmOperatinInSnackBar(res: any) {\n    if (res && res.code === 0) {\n      this.snackBarService.open('MESSAGES.SAVED', { icon: 'check_circle' });\n    }\n  }\n\n  setFullscreenDialog(): void {\n    Utils.setFullscreenDialog(this.fullscreen, this.dialogRef);\n    this.fullscreen = !this.fullscreen;\n  }\n\n  onSelectionChangeColumns(event: MatSelectionListChange) {\n    const selectedColumn: OReportColumn = event.option.value;\n    const selectColumnId = selectedColumn.id;\n    this.updateColumnsOrderByData(selectColumnId, event);\n\n  }\n\n  onSelectionChangeGroups(event: MatSelectionListChange) {\n    if (!event.option.selected) return;\n    let groupSelected: string = event.option.value;\n    this.updateColumnsOrderByData(groupSelected, event);\n    if (event.option.selected &&\n      this.currentPreference.columns.findIndex(x => x.id === groupSelected) === -1) {\n      const columnStyleSelected: OReportColumn[] = this.columnsData.filter((x: OReportColumn) => x.id === groupSelected)\n      if (columnStyleSelected.length > 0) {\n        this.addColumnData(columnStyleSelected[0]);\n      }\n    }\n  }\n\n\n  updateColumnsOrderByData(columnId: string, event?: MatSelectionListChange) {\n\n    if (!event) {\n      const existColumn = this.columnsArray.findIndex(col => col === columnId);\n      if (existColumn === -1) {\n        console.warn('The loaded configuration has the column ' + columnId + ' configured but this column does not exist as a table column');\n        return;\n      }\n    }\n\n    const columnGroupBySelected: OReportOrderBy = { columnId: columnId, ascendent: true }\n    let index = this.columnsOrderBy.findIndex(x => x.columnId === columnId);\n    if ((!event) || (event && event.option.selected)) {\n      if (index === -1) {\n        this.columnsOrderBy.push(columnGroupBySelected);\n      }\n    }\n    else if (index > -1) {\n      this.columnsOrderBy.splice(index);\n    }\n\n  }\n\n\n  addColumnData(columnSelected) {\n    //Object Deep Cloning\n    let currentPreference = Utils.cloneObject(this.currentPreference);\n    currentPreference.columns.push(columnSelected);\n    this.currentPreference = currentPreference;\n    this.updateColumnsSort();\n  }\n\n  onSelectionChangeFunctions(event: MatSelectionListChange) {\n    if (!event.option.selected || event.option.value.columnName === 'TOTAL') return;\n    const functionSelect = event.option.value;\n    const columnSelectedToGroup = functionSelect.columnName;\n\n    if (event.option.selected &&\n      this.currentPreference.columns.findIndex(x => x.id === columnSelectedToGroup) === -1) {\n      const column = this.columnsData.find(x => x.id === columnSelectedToGroup);\n      this.addColumnData(column);\n    }\n  }\n\n\n  changeOrder(column: OReportOrderBy, event) {\n    const columnSelectedToOrder = this.columnsOrderBy.find(x => x.columnId === column.columnId);\n    if (columnSelectedToOrder) {\n      columnSelectedToOrder.ascendent = !columnSelectedToOrder.ascendent;\n    }\n    event.stopPropagation();\n  }\n\n  isCheckedColumn(column: OReportColumn) {\n    return this.currentPreference.columns.length > 0 ? this.currentPreference.columns.filter(x => x.id === column.id).length > 0 : false;\n  }\n\n  isCheckedFunction(column: OReportFunction) {\n    return this.currentPreference.functions.length > 0 ? this.currentPreference.functions.filter(x => (x.columnName === column.columnName && x.type === column.type) && x.type !== 'TOTAL').length > 0 : false;\n  }\n\n  columnsOrderByCompareFunction(co1: OReportOrderBy, co2: OReportOrderBy) {\n    return co1.columnId === co2.columnId;\n  }\n\n  onCheckboxStyleClick(value) {\n    if (this.currentPreference.style[value]) {\n      this.currentPreference.style[value] = false;\n    } else {\n      this.currentPreference.style[value] = true;\n    }\n  }\n\n  columnsCompareFunction(co1: OReportColumn, co2: OReportColumn) {\n    return co1.id === co2.id;\n  }\n\n  functionsCompareFunction(co1: OReportFunction, co2: OReportFunction) {\n    return co1.columnName === co2.columnName;\n  }\n\n\n\n  protected createRenderer(column: string): any {\n    let oColumn: OColumn = this.table.oTableOptions.columns.find(x => x.attr === column);\n    let newRenderer: any;\n    if (Util.isDefined(oColumn) && Util.isDefined(oColumn.type) && oColumn.type !== 'string') {\n      const type = oColumn.type;\n      newRenderer = {};\n\n      let columnRenderer: any = oColumn.renderer;\n      switch (type) {\n        case 'currency':\n          newRenderer.type = type\n          newRenderer.currencySymbol = columnRenderer.currencySymbol;\n          newRenderer.currencySymbolPosition = columnRenderer.currencySymbolPosition;\n          break;\n        case 'date':\n          newRenderer.type = type\n          newRenderer.format = columnRenderer.format;\n          break;\n        case 'integer':\n          newRenderer.type = type\n          newRenderer.grouping = columnRenderer.grouping;\n          newRenderer.thousandSeparator = columnRenderer.thousandSeparator;\n          break;\n        case 'real':\n          newRenderer.type = type\n          newRenderer.decimalSeparator = columnRenderer.decimalSeparator;\n          newRenderer.grouping = columnRenderer.grouping;\n          newRenderer.thousandSeparator = columnRenderer.thousandSeparator;\n          break;\n        case 'service':\n          newRenderer.type = type\n          newRenderer.entity = columnRenderer.entity;\n          newRenderer.service = columnRenderer.service;\n          newRenderer.keyColumn = oColumn.attr;\n          newRenderer.columns = Util.parseArray(columnRenderer.columns);\n          newRenderer.valueColumn = columnRenderer.valueColumn;\n          newRenderer.parentKeys = Util.parseArray(columnRenderer.parentKeys);\n          const serviceConfiguration = this.getDefaultServiceConfiguration(columnRenderer.service);\n          if (Util.isObject(serviceConfiguration) && Object.hasOwnProperty(serviceConfiguration.path)) {\n            newRenderer.path = serviceConfiguration.path;\n          }\n          break;\n      }\n    }\n    return newRenderer;\n  }\n}\n\n","import { Injectable, Injector } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { DialogService, IReportService, OTableComponent } from 'ontimize-web-ngx';\nimport { ReportOnDemandComponent } from '../components/report-on-demand/report-on-demand/report-on-demand.component';\nimport { Utils } from '../util/utils';\n\n\n@Injectable({ providedIn: 'root' })\nexport class OntimizeReportService implements IReportService {\n  protected dialogService: DialogService;\n  protected dialog: MatDialog;\n\n  constructor(\n    private injector: Injector\n  ) {\n    this.dialogService = this.injector.get<DialogService>(DialogService);\n    this.dialog = this.injector.get<MatDialog>(MatDialog);\n  }\n\n  openReportOnDemand(table: OTableComponent) {\n    Utils.openModalVisor(this.dialog, ReportOnDemandComponent, table);\n  }\n\n}\n","import { Injector } from \"@angular/core\";\nimport { O_REPORT_SERVICE } from \"ontimize-web-ngx\";\nimport { OAlertService } from \"../services/o-alert.service\";\nimport { OReportStoreService } from \"../services/o-report-store.service\";\nimport { OReportService } from \"../services/o-report.service\";\nimport { OntimizeReportService } from \"../services/ontimize-report.service\";\n\nexport function reportServiceFactory(injector: Injector): OReportService {\n  return new OReportService(injector);\n}\n\nexport const OREPORT_PROVIDERS: any = [{ provide: O_REPORT_SERVICE, useClass: OntimizeReportService },\n{\n  provide: 'report',\n  useFactory: reportServiceFactory,\n  deps: [Injector]\n},\n  OAlertService, OReportStoreService\n];","import { Component, ViewChild } from '@angular/core';\nimport { OTableComponent } from 'ontimize-web-ngx';\nimport { OAlertService } from '../../../services/o-alert.service';\n\n@Component({\n  selector: 'o-report-home',\n  templateUrl: './o-report-home.component.html'\n})\nexport class OReportHomeComponent {\n\n  @ViewChild('table', { static: true })\n  table: OTableComponent;\n\n  constructor(private alertService: OAlertService) {\n    alertService.alert$.subscribe(\n      _res => {\n        this.table.refresh();\n      });\n  }\n\n}\n","import { Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { DialogService, OFileInputComponent, OFormComponent, OTextInputComponent } from 'ontimize-web-ngx';\nimport { Subscription } from 'rxjs';\nimport { OAlertService } from '../../../services/o-alert.service';\n\n@Component({\n  selector: 'o-report-new',\n  templateUrl: './o-report-new.component.html',\n  styleUrls: ['./o-report-new.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '[class.app-report-store-new]': 'true'\n  }\n})\nexport class OReportNewComponent {\n\n  @ViewChild('name', { static: true })\n  name: OTextInputComponent;\n  @ViewChild('type', { static: true })\n  type: OTextInputComponent;\n  @ViewChild('description', { static: true })\n  description: OTextInputComponent;\n  @ViewChild('form', { static: true })\n  form: OFormComponent;\n  @ViewChild('file', { static: true })\n  file: OFileInputComponent;\n\n  subscription: Subscription;\n  loading: boolean = false;\n\n  constructor(\n    private alertService: OAlertService,\n    private dialogService: DialogService\n  ) { }\n\n  getFileData() {\n    return {\n      'name': this.name.getValue(),\n      'type': this.type.getValue(),\n      'description': this.description.getValue(),\n    };\n  }\n\n  onUploadFile() {\n    this.loading = false;\n    this.confirm();\n    this.form._clearAndCloseFormAfterInsert();\n  }\n\n  onError() {\n    if (this.dialogService) {\n      this.dialogService.error('ERROR',\n        'SERVER_ERROR_MESSAGE');\n      this.loading = false;\n    }\n  }\n\n  confirm() {\n    this.alertService.announceAlert('alert');\n  }\n\n  onClickSave(e: Event) {\n    Object.keys(this.form.formGroup.controls).forEach((control) => {\n      this.form.formGroup.controls[control].markAsTouched();\n    });\n\n    if (!this.form.formGroup.valid) {\n      this.dialogService.alert('ERROR', 'MESSAGES.FORM_VALIDATION_ERROR');\n      return;\n    }\n    this.loading = true;\n    this.file.onClickUpload(e);\n  }\n\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { DialogService, OFormComponent, OTextInputComponent } from 'ontimize-web-ngx';\nimport { Constants } from '../../../util/constants';\nimport { OReportViewerComponent } from '../o-report-viewer/o-report-viewer.component';\n\n@Component({\n  selector: 'o-report-detail',\n  templateUrl: './o-report-detail.component.html'\n})\nexport class OReportDetailComponent {\n\n  @ViewChild('id', { static: true })\n  id: OTextInputComponent;\n  @ViewChild('paramForm', { static: false })\n  paramForm: OFormComponent;\n\n  private values: string[];\n\n  public parameters: [];\n  private av: string[];\n  public hasParams: boolean = false;\n\n  constructor(\n    protected dialogService: DialogService,\n    protected dialog: MatDialog,\n  ) { }\n\n\n  private getValues() {\n    for (let i = 0; i < this.parameters.length; i++) {\n      let v = this.paramForm.getFieldValue('value' + i);\n      this.values.push(v);\n    }\n  }\n\n  public fillReport() {\n    this.values = [];\n    this.av = [this.id.getValue()]\n    if (this.parameters.length > 0) {\n      this.getValues();\n      let size = this.values.length;\n      for (let i = 0; i < size; i++)\n        this.av.push(this.values.shift());\n    }\n\n\n    this.dialog.open(OReportViewerComponent, {\n      height: Constants.DEFAULT_HEIGHT_DIALOG,\n      width: Constants.DEFAULT_HEIGHT_DIALOG,\n      data: {\n        'params': this.av,\n        'filter': {}\n      }\n\n    });\n  }\n\n  onDataLoaded(e: object) {\n    this.parameters = e['PARAMETERS'];\n    if (this.parameters.length > 0) {\n      this.hasParams = true;\n    }\n  }\n\n}\n","export const MAP = {\n\n  // English\n  en: {\n    'REPORT_ON_DEMAND_TITLE': 'Dynamic Reports',\n\n    'BUTTONS.SAVE_CONFIGURATION': 'Save configuration',\n    'BUTTONS.SAVEAS_CONFIGURATION': 'Save as configuration',\n    'BUTTONS.APPLY_CONFIGURATION': 'Load configuration',\n\n    'TITLE': 'Title',\n    'SUBTITLE': 'Subtitle',\n    'ORIENTATION': 'Orientation',\n    'STYLE': 'Style',\n    'COLUMNS': 'Columns to print',\n    'GROUPS': 'Groups',\n    'FUNCTIONS': 'Functions',\n    'PREVIEW': 'Preview',\n    'COLUMN_CONFIGURATION': 'Column Configuration',\n    'SAVE_COLUMN_CONFIGURATION': 'Enter a name, a with and a alignment for the column',\n    'GRID': 'Draw grid',\n    'ROW_NUMBER': 'Row numbers',\n    'COLUMNS_NAMES': 'Column names',\n    'GROUP_DETAILS': 'Hide group details',\n    'GROUP_PAGE': 'Group in page',\n    'BACKGROUND_ODD_ROWS': 'Background on odd rows',\n    'FIRST_GROUP_PAGE': 'First group in page',\n    'DIALOG.SELECT_FUNCTION.TITLE': 'Select function',\n    'DIALOG.SELECT_FUNCTION.DESCRIPTION': 'Select one of the following functions',\n    'COLUMN_NAME': 'Column name',\n    'COLUMN_WIDTH': 'Column width',\n    'DIALOG.SELECT_FUNCTION.MIN': 'Minumun',\n    'DIALOG.SELECT_FUNCTION.MAX': 'Maximun',\n    'DIALOG.SELECT_FUNCTION.AVG': 'Average',\n    'DIALOG.SELECT_FUNCTION.SUM': 'Sum',\n    'ORDER_BY': 'Order by',\n    'CLEAR': 'Clear',\n    'MIN': 'Minumun',\n    'MAX': 'Maximun',\n    'AVERAGE': 'Average',\n    'SUM': 'Sum',\n    'TOTAL': 'Total'\n  },\n\n  // Spanish\n  es: {\n    'REPORT_ON_DEMAND_TITLE': 'Informes Dinámicos',\n\n    'BUTTONS.SAVE_CONFIGURATION': 'Guardar configuración',\n    'BUTTONS.SAVEAS_CONFIGURATION': 'Guardar configuración como',\n    'BUTTONS.APPLY_CONFIGURATION': 'Aplicar configuración',\n\n    'TITLE': 'Título',\n    'SUBTITLE': 'Subtítulo',\n    'ORIENTATION': 'Orientación',\n    'STYLE': 'Estilo',\n    'COLUMNS': 'Columnas a imprimir',\n    'GROUPS': 'Grupos',\n    'FUNCTIONS': 'Funciones',\n    'PREVIEW': 'Previsualizar',\n    'COLUMN_CONFIGURATION': 'Configuración de columna',\n    'SAVE_COLUMN_CONFIGURATION': 'Introduzca un nombre, un ancho y una alineación para la columna',\n    'GRID': 'Dibujar rejilla',\n    'ROW_NUMBER': 'Números de fila',\n    'COLUMNS_NAMES': 'Nombre de columnas',\n    'GROUP_DETAILS': 'Ocultar detalles grupo',\n    'GROUP_PAGE': 'Grupo en página',\n    'BACKGROUND_ODD_ROWS': 'Fondo sobre filas impares',\n    'FIRST_GROUP_PAGE': 'Primer grupo en página',\n    'DIALOG.SELECT_FUNCTION.TITLE': 'Seleccionar función',\n    'DIALOG.SELECT_FUNCTION.DESCRIPTION': 'Seleccione una de las siguientes funciones',\n    'COLUMN_NAME': 'Nombre de la columna',\n    'COLUMN_WIDTH': 'Ancho de la columna',\n    'DIALOG.SELECT_FUNCTION.MIN': 'Mínimo',\n    'DIALOG.SELECT_FUNCTION.MAX': 'Máximo',\n    'DIALOG.SELECT_FUNCTION.AVG': 'Media',\n    'DIALOG.SELECT_FUNCTION.SUM': 'Suma',\n    'ORDER_BY': 'Ordenar por',\n    'CLEAR': 'Limpiar',\n    'MIN': 'Mínimo',\n    'MAX': 'Máximo',\n    'AVERAGE': 'Media',\n    'SUM': 'Suma',\n    'TOTAL': 'Total'\n  }\n\n};\n","import { Pipe, PipeTransform, Injector } from '@angular/core';\nimport { OTranslateService } from 'ontimize-web-ngx';\nimport * as CORE_TRANSLATIONS from '../i18n/i18n';\n\n@Pipe({\n  name: 'oReportsTranslate',\n  pure: false\n})\nexport class OReportsTranslatePipe implements PipeTransform {\n\n  protected translateService: OTranslateService;\n\n  constructor(protected injector: Injector) {\n    this.translateService = this.injector.get(OTranslateService);\n  }\n\n  transform(text: string): string {\n    let textTranslated = undefined;\n    let bundle = CORE_TRANSLATIONS.MAP[this.translateService.getCurrentLang()];\n    if (bundle && bundle[text]) {\n      textTranslated = bundle[text];\n    } else {\n      textTranslated = this.translateService.get(text);\n    }\n    return textTranslated;\n  }\n\n}\n","import { FlexLayoutModule } from '@angular/flex-layout';\nimport { NgxExtendedPdfViewerModule } from 'ngx-extended-pdf-viewer';\nimport { OntimizeWebModule } from 'ontimize-web-ngx';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { CommonModule } from '@angular/common';\nimport { OReportHomeComponent } from '../components/report/o-report-home/o-report-home.component';\nimport { OReportNewComponent } from '../components/report/o-report-new/o-report-new.component';\nimport { OReportDetailComponent } from '../components/report/o-report-detail/o-report-detail.component';\nimport { OReportViewerComponent } from '../components/report/o-report-viewer/o-report-viewer.component';\nimport { ReportOnDemandComponent } from '../components/report-on-demand/report-on-demand/report-on-demand.component';\nimport { StyleDialogComponent } from '../components/report-on-demand/style-dialog/style-dialog.component';\nimport { SelectFunctionDialogComponent } from '../components/report-on-demand/select-function-dialog/select-function-dialog.component';\nimport { SavePreferencesDialogComponent } from '../components/report-on-demand/save-preferences-dialog/save-preferences-dialog.component';\nimport { ApplyConfigurationDialogComponent } from '../components/report-on-demand/apply-configuration/apply-configuration-dialog.component';\nimport { OReportsTranslatePipe } from '../util/o-reports-translate.pipe';\n\n\nexport const OREPORT_DECLARATION_MODULES: any = [\n  OReportHomeComponent,\n  OReportNewComponent,\n  OReportDetailComponent,\n  OReportViewerComponent,\n  ReportOnDemandComponent,\n  StyleDialogComponent,\n  SelectFunctionDialogComponent,\n  SavePreferencesDialogComponent,\n  ApplyConfigurationDialogComponent,\n  OReportsTranslatePipe\n];\nexport const OREPORT_IMPORTS_MODULES: any = [\n  CommonModule,\n  OntimizeWebModule,\n  NgxExtendedPdfViewerModule,\n  FlexLayoutModule,\n  DragDropModule\n]\nexport const OREPORT_EXPORT_MODULES: any = [];\nexport const OREPORT_ENTRY_COMPONENTS_MODULES: any = [\n  OReportViewerComponent,\n  ReportOnDemandComponent,\n  StyleDialogComponent,\n  SelectFunctionDialogComponent,\n  SavePreferencesDialogComponent,\n  ApplyConfigurationDialogComponent\n]","import { NgModule } from '@angular/core';\nimport { OREPORT_PROVIDERS } from './config/o-providers';\nimport { OREPORT_DECLARATION_MODULES, OREPORT_ENTRY_COMPONENTS_MODULES, OREPORT_IMPORTS_MODULES } from './config/o-components';\n\n@NgModule({\n  declarations: OREPORT_DECLARATION_MODULES,\n  imports: OREPORT_IMPORTS_MODULES,\n  providers: OREPORT_PROVIDERS,\n  entryComponents: OREPORT_ENTRY_COMPONENTS_MODULES\n})\n\nexport class OReportModule { }\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { OReportDetailComponent } from \"./o-report-detail/o-report-detail.component\";\nimport { OReportNewComponent } from \"./o-report-new/o-report-new.component\";\nimport { OReportHomeComponent } from \"./o-report-home/o-report-home.component\";\n\nconst routes: Routes = [{\n  path: '',\n  component: OReportHomeComponent\n},{\n  path: 'new',\n  component: OReportNewComponent\n},{\n  path: ':UUID',\n  component: OReportDetailComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OReportRoutingModule { }\n"]}