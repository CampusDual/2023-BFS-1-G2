/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/ontimize-report.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, Injector } from '@angular/core';
import { MatDialog } from '@angular/material';
import { DialogService } from 'ontimize-web-ngx';
import { ReportOnDemandComponent } from '../components/report-on-demand/report-on-demand/report-on-demand.component';
import { Utils } from '../util/utils';
import * as i0 from "@angular/core";
export class OntimizeReportService {
    /**
     * @param {?} injector
     */
    constructor(injector) {
        this.injector = injector;
        this.dialogService = this.injector.get(DialogService);
        this.dialog = this.injector.get(MatDialog);
    }
    /**
     * @param {?} table
     * @return {?}
     */
    openReportOnDemand(table) {
        Utils.openModalVisor(this.dialog, ReportOnDemandComponent, table);
    }
}
OntimizeReportService.decorators = [
    { type: Injectable, args: [{ providedIn: 'root' },] }
];
/** @nocollapse */
OntimizeReportService.ctorParameters = () => [
    { type: Injector }
];
/** @nocollapse */ OntimizeReportService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function OntimizeReportService_Factory() { return new OntimizeReportService(i0.ɵɵinject(i0.INJECTOR)); }, token: OntimizeReportService, providedIn: "root" });
if (false) {
    /**
     * @type {?}
     * @protected
     */
    OntimizeReportService.prototype.dialogService;
    /**
     * @type {?}
     * @protected
     */
    OntimizeReportService.prototype.dialog;
    /**
     * @type {?}
     * @private
     */
    OntimizeReportService.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib250aW1pemUtcmVwb3J0LnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9vbnRpbWl6ZS13ZWItbmd4LXJlcG9ydC8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlcy9vbnRpbWl6ZS1yZXBvcnQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3JELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUM5QyxPQUFPLEVBQUUsYUFBYSxFQUFtQyxNQUFNLGtCQUFrQixDQUFDO0FBQ2xGLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDRFQUE0RSxDQUFDO0FBQ3JILE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBSXRDLE1BQU0sT0FBTyxxQkFBcUI7Ozs7SUFJaEMsWUFDVSxRQUFrQjtRQUFsQixhQUFRLEdBQVIsUUFBUSxDQUFVO1FBRTFCLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQWdCLGFBQWEsQ0FBQyxDQUFDO1FBQ3JFLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQVksU0FBUyxDQUFDLENBQUM7SUFDeEQsQ0FBQzs7Ozs7SUFFRCxrQkFBa0IsQ0FBQyxLQUFzQjtRQUN2QyxLQUFLLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsdUJBQXVCLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDcEUsQ0FBQzs7O1lBZEYsVUFBVSxTQUFDLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRTs7OztZQVBiLFFBQVE7Ozs7Ozs7O0lBUzNCLDhDQUF1Qzs7Ozs7SUFDdkMsdUNBQTRCOzs7OztJQUcxQix5Q0FBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBJbmplY3RvciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTWF0RGlhbG9nIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwnO1xuaW1wb3J0IHsgRGlhbG9nU2VydmljZSwgSVJlcG9ydFNlcnZpY2UsIE9UYWJsZUNvbXBvbmVudCB9IGZyb20gJ29udGltaXplLXdlYi1uZ3gnO1xuaW1wb3J0IHsgUmVwb3J0T25EZW1hbmRDb21wb25lbnQgfSBmcm9tICcuLi9jb21wb25lbnRzL3JlcG9ydC1vbi1kZW1hbmQvcmVwb3J0LW9uLWRlbWFuZC9yZXBvcnQtb24tZGVtYW5kLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBVdGlscyB9IGZyb20gJy4uL3V0aWwvdXRpbHMnO1xuXG5cbkBJbmplY3RhYmxlKHsgcHJvdmlkZWRJbjogJ3Jvb3QnIH0pXG5leHBvcnQgY2xhc3MgT250aW1pemVSZXBvcnRTZXJ2aWNlIGltcGxlbWVudHMgSVJlcG9ydFNlcnZpY2Uge1xuICBwcm90ZWN0ZWQgZGlhbG9nU2VydmljZTogRGlhbG9nU2VydmljZTtcbiAgcHJvdGVjdGVkIGRpYWxvZzogTWF0RGlhbG9nO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgaW5qZWN0b3I6IEluamVjdG9yXG4gICkge1xuICAgIHRoaXMuZGlhbG9nU2VydmljZSA9IHRoaXMuaW5qZWN0b3IuZ2V0PERpYWxvZ1NlcnZpY2U+KERpYWxvZ1NlcnZpY2UpO1xuICAgIHRoaXMuZGlhbG9nID0gdGhpcy5pbmplY3Rvci5nZXQ8TWF0RGlhbG9nPihNYXREaWFsb2cpO1xuICB9XG5cbiAgb3BlblJlcG9ydE9uRGVtYW5kKHRhYmxlOiBPVGFibGVDb21wb25lbnQpIHtcbiAgICBVdGlscy5vcGVuTW9kYWxWaXNvcih0aGlzLmRpYWxvZywgUmVwb3J0T25EZW1hbmRDb21wb25lbnQsIHRhYmxlKTtcbiAgfVxuXG59XG4iXX0=