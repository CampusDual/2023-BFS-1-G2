/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/report-on-demand/apply-configuration/apply-configuration-dialog.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { SelectionModel } from '@angular/cdk/collections';
import { Component, Inject, Optional, ViewChild } from '@angular/core';
import { MAT_DIALOG_DATA, MatDialogRef, MatSelectionList } from '@angular/material';
import { DialogService, Util } from 'ontimize-web-ngx';
import { OReportService } from '../../../services/o-report.service';
export class ApplyConfigurationDialogComponent {
    /**
     * @param {?} dialogService
     * @param {?} reportsService
     * @param {?} dialogo
     * @param {?} data
     */
    constructor(dialogService, reportsService, dialogo, data) {
        this.dialogService = dialogService;
        this.reportsService = reportsService;
        this.dialogo = dialogo;
        this.data = data;
        this.configurationListData = [];
        this.getConfigurations();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.configurationList.selectedOptions = new SelectionModel(false);
    }
    /**
     * @return {?}
     */
    loadConfiguration() {
        this.dialogo.close(this.selectedConfiguration);
    }
    /**
     * @return {?}
     */
    remove() {
        this.dialogService.confirm('CONFIRM', 'TABLE.DIALOG.CONFIRM_REMOVE_CONFIGURATION').then((/**
         * @param {?} result
         * @return {?}
         */
        result => {
            if (result) {
                this.reportsService.deletePreferences(this.selectedConfiguration.ID).subscribe((/**
                 * @param {?} res
                 * @return {?}
                 */
                res => {
                    if (res && res.code === 0) {
                        this.getConfigurations();
                    }
                }));
            }
        }));
    }
    /**
     * @param {?} option
     * @return {?}
     */
    onClickConfigurationList(option) {
        this.selectedConfiguration = option;
    }
    /**
     * @return {?}
     */
    getConfigurations() {
        this.reportsService.getPreferences(this.data.entity, this.data.service).subscribe((/**
         * @param {?} resp
         * @return {?}
         */
        resp => {
            if (resp.isSuccessful()) {
                this.setDataArray(resp.data);
            }
        }));
    }
    /**
     * @param {?} data
     * @return {?}
     */
    setDataArray(data) {
        if (Util.isArray(data)) {
            this.configurationListData = data;
        }
        else {
            this.configurationListData = [];
        }
    }
}
ApplyConfigurationDialogComponent.decorators = [
    { type: Component, args: [{
                selector: 'apply-configuration-dialog',
                template: "<span mat-dialog-title>{{ 'TABLE.BUTTONS.APPLY_CONFIGURATION' | oTranslate }}</span>\n<mat-dialog-content fxLayout=\"column\">\n  <div mat-subheader>{{ 'TABLE.DIALOG.APPLY_CONFIGURATION' | oTranslate }}</div>\n  <mat-selection-list #configurationList dense class=\"apply-configuration-dialog-list\">\n    <mat-list-option (click)=\"onClickConfigurationList(configuration)\" checkboxPosition=\"before\"\n      *ngFor=\"let configuration of configurationListData\" [value]=\"configuration\">\n      <span matLine>{{ configuration.NAME }}</span>\n      <span matLine>{{ configuration.DESCRIPTION }}</span>\n    </mat-list-option>\n  </mat-selection-list>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n  <button type=\"button\" (click)=\"remove()\" mat-stroked-button [disabled]=\"configurationList.selectedOptions.selected.length!==1\"\n    class=\"o-button-danger\">\n    {{ 'DELETE' | oTranslate }}\n  </button>\n  <span fxFlex></span>\n  <button type=\"button\" mat-stroked-button [mat-dialog-close]=\"false\" class=\"o-button-default\">{{ 'CANCEL' | oTranslate }}</button>\n  <button type=\"button\" (click)=\"loadConfiguration()\" mat-stroked-button [mat-dialog-close]=\"true\"\n    [disabled]=\"configurationList.selectedOptions.selected.length!==1\" class=\"o-button-primary\">{{ 'OK' | oTranslate}}</button>\n</mat-dialog-actions>\n"
            }] }
];
/** @nocollapse */
ApplyConfigurationDialogComponent.ctorParameters = () => [
    { type: DialogService },
    { type: OReportService },
    { type: MatDialogRef },
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DIALOG_DATA,] }] }
];
ApplyConfigurationDialogComponent.propDecorators = {
    configurationList: [{ type: ViewChild, args: [MatSelectionList, { static: true },] }]
};
if (false) {
    /**
     * @type {?}
     * @protected
     */
    ApplyConfigurationDialogComponent.prototype.configurationList;
    /** @type {?} */
    ApplyConfigurationDialogComponent.prototype.configurationListData;
    /** @type {?} */
    ApplyConfigurationDialogComponent.prototype.selectedConfiguration;
    /**
     * @type {?}
     * @private
     */
    ApplyConfigurationDialogComponent.prototype.dialogService;
    /**
     * @type {?}
     * @private
     */
    ApplyConfigurationDialogComponent.prototype.reportsService;
    /** @type {?} */
    ApplyConfigurationDialogComponent.prototype.dialogo;
    /** @type {?} */
    ApplyConfigurationDialogComponent.prototype.data;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwbHktY29uZmlndXJhdGlvbi1kaWFsb2cuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vb250aW1pemUtd2ViLW5neC1yZXBvcnQvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9yZXBvcnQtb24tZGVtYW5kL2FwcGx5LWNvbmZpZ3VyYXRpb24vYXBwbHktY29uZmlndXJhdGlvbi1kaWFsb2cuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzFELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFVLFFBQVEsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDL0UsT0FBTyxFQUFFLGVBQWUsRUFBRSxZQUFZLEVBQUUsZ0JBQWdCLEVBQWlCLE1BQU0sbUJBQW1CLENBQUM7QUFDbkcsT0FBTyxFQUFFLGFBQWEsRUFBRSxJQUFJLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUN2RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFTcEUsTUFBTSxPQUFPLGlDQUFpQzs7Ozs7OztJQU81QyxZQUNVLGFBQTRCLEVBQzVCLGNBQThCLEVBQy9CLE9BQXdELEVBQ25CLElBQVM7UUFIN0Msa0JBQWEsR0FBYixhQUFhLENBQWU7UUFDNUIsbUJBQWMsR0FBZCxjQUFjLENBQWdCO1FBQy9CLFlBQU8sR0FBUCxPQUFPLENBQWlEO1FBQ25CLFNBQUksR0FBSixJQUFJLENBQUs7UUFQaEQsMEJBQXFCLEdBQTJCLEVBQUUsQ0FBQztRQVF4RCxJQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztJQUMzQixDQUFDOzs7O0lBQ0QsUUFBUTtRQUNOLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxlQUFlLEdBQUcsSUFBSSxjQUFjLENBQWdCLEtBQUssQ0FBQyxDQUFDO0lBQ3BGLENBQUM7Ozs7SUFFRCxpQkFBaUI7UUFDZixJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMscUJBQXFCLENBQUMsQ0FBQztJQUNqRCxDQUFDOzs7O0lBRUQsTUFBTTtRQUNKLElBQUksQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSwyQ0FBMkMsQ0FBQyxDQUFDLElBQUk7Ozs7UUFBQyxNQUFNLENBQUMsRUFBRTtZQUMvRixJQUFJLE1BQU0sRUFBRTtnQkFDVixJQUFJLENBQUMsY0FBYyxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxFQUFFLENBQUMsQ0FBQyxTQUFTOzs7O2dCQUFDLEdBQUcsQ0FBQyxFQUFFO29CQUNuRixJQUFJLEdBQUcsSUFBSSxHQUFHLENBQUMsSUFBSSxLQUFLLENBQUMsRUFBRTt3QkFDekIsSUFBSSxDQUFDLGlCQUFpQixFQUFFLENBQUM7cUJBQzFCO2dCQUNILENBQUMsRUFBQyxDQUFDO2FBQ0o7UUFDSCxDQUFDLEVBQUMsQ0FBQztJQUNMLENBQUM7Ozs7O0lBQ0Qsd0JBQXdCLENBQUMsTUFBTTtRQUM3QixJQUFJLENBQUMscUJBQXFCLEdBQUcsTUFBTSxDQUFDO0lBQ3RDLENBQUM7Ozs7SUFFRCxpQkFBaUI7UUFDZixJQUFJLENBQUMsY0FBYyxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLFNBQVM7Ozs7UUFBQyxJQUFJLENBQUMsRUFBRTtZQUN2RixJQUFJLElBQUksQ0FBQyxZQUFZLEVBQUUsRUFBRTtnQkFDdkIsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7YUFDOUI7UUFDSCxDQUFDLEVBQUMsQ0FBQztJQUNMLENBQUM7Ozs7O0lBRUQsWUFBWSxDQUFDLElBQVM7UUFDcEIsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ3RCLElBQUksQ0FBQyxxQkFBcUIsR0FBRyxJQUFJLENBQUM7U0FDbkM7YUFBTTtZQUNMLElBQUksQ0FBQyxxQkFBcUIsR0FBRyxFQUFFLENBQUE7U0FDaEM7SUFDSCxDQUFDOzs7WUF4REYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSw0QkFBNEI7Z0JBQ3RDLHExQ0FBMEQ7YUFDM0Q7Ozs7WUFSUSxhQUFhO1lBQ2IsY0FBYztZQUZHLFlBQVk7NENBc0JqQyxRQUFRLFlBQUksTUFBTSxTQUFDLGVBQWU7OztnQ0FWcEMsU0FBUyxTQUFDLGdCQUFnQixFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTs7Ozs7OztJQUE3Qyw4REFDOEM7O0lBRTlDLGtFQUEwRDs7SUFDMUQsa0VBQW1EOzs7OztJQUdqRCwwREFBb0M7Ozs7O0lBQ3BDLDJEQUFzQzs7SUFDdEMsb0RBQStEOztJQUMvRCxpREFBcUQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTZWxlY3Rpb25Nb2RlbCB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9jb2xsZWN0aW9ucyc7XG5pbXBvcnQgeyBDb21wb25lbnQsIEluamVjdCwgT25Jbml0LCBPcHRpb25hbCwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNQVRfRElBTE9HX0RBVEEsIE1hdERpYWxvZ1JlZiwgTWF0U2VsZWN0aW9uTGlzdCwgTWF0TGlzdE9wdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsJztcbmltcG9ydCB7IERpYWxvZ1NlcnZpY2UsIFV0aWwgfSBmcm9tICdvbnRpbWl6ZS13ZWItbmd4JztcbmltcG9ydCB7IE9SZXBvcnRTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vLi4vc2VydmljZXMvby1yZXBvcnQuc2VydmljZSc7XG5pbXBvcnQgeyBPUmVwb3J0Q29uZmlndXJhdGlvbiB9IGZyb20gJy4uLy4uLy4uL3R5cGVzL3JlcG9ydC1jb25maWd1cmF0aW9uLnR5cGUnO1xuXG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FwcGx5LWNvbmZpZ3VyYXRpb24tZGlhbG9nJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2FwcGx5LWNvbmZpZ3VyYXRpb24tZGlhbG9nLmNvbXBvbmVudC5odG1sJ1xufSlcblxuZXhwb3J0IGNsYXNzIEFwcGx5Q29uZmlndXJhdGlvbkRpYWxvZ0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBWaWV3Q2hpbGQoTWF0U2VsZWN0aW9uTGlzdCwgeyBzdGF0aWM6IHRydWUgfSlcbiAgcHJvdGVjdGVkIGNvbmZpZ3VyYXRpb25MaXN0OiBNYXRTZWxlY3Rpb25MaXN0O1xuXG4gIHB1YmxpYyBjb25maWd1cmF0aW9uTGlzdERhdGE6IE9SZXBvcnRDb25maWd1cmF0aW9uW10gPSBbXTtcbiAgcHVibGljIHNlbGVjdGVkQ29uZmlndXJhdGlvbjogT1JlcG9ydENvbmZpZ3VyYXRpb247XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBkaWFsb2dTZXJ2aWNlOiBEaWFsb2dTZXJ2aWNlLFxuICAgIHByaXZhdGUgcmVwb3J0c1NlcnZpY2U6IE9SZXBvcnRTZXJ2aWNlLFxuICAgIHB1YmxpYyBkaWFsb2dvOiBNYXREaWFsb2dSZWY8QXBwbHlDb25maWd1cmF0aW9uRGlhbG9nQ29tcG9uZW50PixcbiAgICBAT3B0aW9uYWwoKSBASW5qZWN0KE1BVF9ESUFMT0dfREFUQSkgcHVibGljIGRhdGE6IGFueSkge1xuICAgIHRoaXMuZ2V0Q29uZmlndXJhdGlvbnMoKTtcbiAgfVxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLmNvbmZpZ3VyYXRpb25MaXN0LnNlbGVjdGVkT3B0aW9ucyA9IG5ldyBTZWxlY3Rpb25Nb2RlbDxNYXRMaXN0T3B0aW9uPihmYWxzZSk7XG4gIH1cblxuICBsb2FkQ29uZmlndXJhdGlvbigpOiB2b2lkIHtcbiAgICB0aGlzLmRpYWxvZ28uY2xvc2UodGhpcy5zZWxlY3RlZENvbmZpZ3VyYXRpb24pO1xuICB9XG5cbiAgcmVtb3ZlKCk6IHZvaWQge1xuICAgIHRoaXMuZGlhbG9nU2VydmljZS5jb25maXJtKCdDT05GSVJNJywgJ1RBQkxFLkRJQUxPRy5DT05GSVJNX1JFTU9WRV9DT05GSUdVUkFUSU9OJykudGhlbihyZXN1bHQgPT4ge1xuICAgICAgaWYgKHJlc3VsdCkge1xuICAgICAgICB0aGlzLnJlcG9ydHNTZXJ2aWNlLmRlbGV0ZVByZWZlcmVuY2VzKHRoaXMuc2VsZWN0ZWRDb25maWd1cmF0aW9uLklEKS5zdWJzY3JpYmUocmVzID0+IHtcbiAgICAgICAgICBpZiAocmVzICYmIHJlcy5jb2RlID09PSAwKSB7XG4gICAgICAgICAgICB0aGlzLmdldENvbmZpZ3VyYXRpb25zKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICBvbkNsaWNrQ29uZmlndXJhdGlvbkxpc3Qob3B0aW9uKSB7XG4gICAgdGhpcy5zZWxlY3RlZENvbmZpZ3VyYXRpb24gPSBvcHRpb247XG4gIH1cblxuICBnZXRDb25maWd1cmF0aW9ucygpIHtcbiAgICB0aGlzLnJlcG9ydHNTZXJ2aWNlLmdldFByZWZlcmVuY2VzKHRoaXMuZGF0YS5lbnRpdHksIHRoaXMuZGF0YS5zZXJ2aWNlKS5zdWJzY3JpYmUocmVzcCA9PiB7XG4gICAgICBpZiAocmVzcC5pc1N1Y2Nlc3NmdWwoKSkge1xuICAgICAgICB0aGlzLnNldERhdGFBcnJheShyZXNwLmRhdGEpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgc2V0RGF0YUFycmF5KGRhdGE6IGFueSkge1xuICAgIGlmIChVdGlsLmlzQXJyYXkoZGF0YSkpIHtcbiAgICAgIHRoaXMuY29uZmlndXJhdGlvbkxpc3REYXRhID0gZGF0YTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5jb25maWd1cmF0aW9uTGlzdERhdGEgPSBbXVxuICAgIH1cbiAgfVxufSJdfQ==