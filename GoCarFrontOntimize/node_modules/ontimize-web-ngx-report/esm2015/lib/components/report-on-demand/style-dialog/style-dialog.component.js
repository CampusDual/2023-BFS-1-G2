/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/report-on-demand/style-dialog/style-dialog.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Inject, Optional } from '@angular/core';
import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';
import { Util } from 'ontimize-web-ngx';
import { Constants } from '../../../util/constants';
import { Utils } from '../../../util/utils';
export class StyleDialogComponent {
    /**
     * @param {?} dialogo
     * @param {?} data
     */
    constructor(dialogo, data) {
        this.dialogo = dialogo;
        this.data = data;
        this.dataAlignment = [
            { "name": "left", "icon": "format_align_left" },
            { "name": "center", "icon": "format_align_center" },
            { "name": "right", "icon": "format_align_right" }
        ];
        this.reportColumn = Utils.cloneObject(data);
        if (this.reportColumn.columnStyle && !Util.isDefined(this.reportColumn.columnStyle.width)) {
            this.reportColumn.columnStyle.width = Constants.DEFAULT_WIDTH_COLUMN_STYLE;
        }
        if (this.reportColumn.columnStyle && !Util.isDefined(this.reportColumn.columnStyle.alignment)) {
            this.reportColumn.columnStyle.alignment = Constants.DEFAULT_ALIGNMENT_COLUMN_STYLE;
        }
        if (!this.reportColumn.columnStyle) {
            this.reportColumn.columnStyle = { width: Constants.DEFAULT_WIDTH_COLUMN_STYLE, alignment: Constants.DEFAULT_ALIGNMENT_COLUMN_STYLE };
        }
    }
    /**
     * @return {?}
     */
    confirm() {
        this.dialogo.close(this.reportColumn);
    }
}
StyleDialogComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-style-dialog',
                template: "<span mat-dialog-title>{{ 'COLUMN_CONFIGURATION' | oReportsTranslate }}</span>\n<mat-dialog-content>\n  <div mat-subheader>{{ 'SAVE_COLUMN_CONFIGURATION' | oReportsTranslate }}</div>\n  <div fxLayout=\"column\" fxLayoutAlign=\"start start\" fxLayoutGap=\"12px\">\n    <form #form>\n      <mat-form-field fxFill>\n        <mat-label>{{ 'COLUMN_NAME' | oReportsTranslate }}</mat-label>\n        <input id=\"columnNameInput\" name=\"columnNameInput\" matInput placeholder=\"{{ 'COLUMN_NAME' | oReportsTranslate }}\" required\n          [(ngModel)]=\"reportColumn.name\" #columnNameInput=\"ngModel\" [ngModelOptions]=\"{standalone: true}\">\n      </mat-form-field>\n      <mat-form-field fxFill>\n        <input id=\"widthColumnInput\" name=\"widthColumnInput\" matInput type=\"number\" placeholder=\"{{ 'COLUMN_WIDTH' | oReportsTranslate }}\" required\n          [(ngModel)]=\"reportColumn.columnStyle.width\" #widthColumnInput=\"ngModel\" [ngModelOptions]=\"{standalone: true}\">\n        <span matSuffix>px</span>\n        <mat-hint></mat-hint>\n      </mat-form-field>\n      <mat-radio-group [(ngModel)]=\"reportColumn.columnStyle.alignment\" fxFill fxLayout=\"row\" fxLayoutAlign=\"space-between center\"\n        [ngModelOptions]=\"{standalone: true}\">\n        <mat-radio-button *ngFor=\"let aligmentItem of dataAlignment\" [value]=\"aligmentItem.name\" [checked]=\"reportColumn.columnStyle.alignment === aligmentItem\">\n          <mat-icon fxFlex>\n            {{ aligmentItem.icon }}\n          </mat-icon>\n        </mat-radio-button>\n      </mat-radio-group>\n    </form>\n  </div>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button type=\"button\" mat-stroked-button class=\"mat-primary\" [mat-dialog-close]=\"false\" class=\"o-button-default\">\n    {{ 'CANCEL' | oTranslate }}</button>\n  <button type=\"button\" mat-stroked-button class=\"mat-primary\" (click)=\"confirm()\" [mat-dialog-close]=\"true\"\n    [disabled]=\"columnNameInput.invalid || widthColumnInput.invalid\">\n    {{ 'SAVE' | oTranslate }}</button>\n</mat-dialog-actions>\n"
            }] }
];
/** @nocollapse */
StyleDialogComponent.ctorParameters = () => [
    { type: MatDialogRef, decorators: [{ type: Optional }] },
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DIALOG_DATA,] }] }
];
if (false) {
    /** @type {?} */
    StyleDialogComponent.prototype.reportColumn;
    /** @type {?} */
    StyleDialogComponent.prototype.dataAlignment;
    /** @type {?} */
    StyleDialogComponent.prototype.dialogo;
    /** @type {?} */
    StyleDialogComponent.prototype.data;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGUtZGlhbG9nLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL29udGltaXplLXdlYi1uZ3gtcmVwb3J0LyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcmVwb3J0LW9uLWRlbWFuZC9zdHlsZS1kaWFsb2cvc3R5bGUtZGlhbG9nLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM1RCxPQUFPLEVBQUUsWUFBWSxFQUFFLGVBQWUsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ3pFLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUV4QyxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDcEQsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBTTVDLE1BQU0sT0FBTyxvQkFBb0I7Ozs7O0lBVS9CLFlBQ3FCLE9BQTJDLEVBQ2xCLElBQW1CO1FBRDVDLFlBQU8sR0FBUCxPQUFPLENBQW9DO1FBQ2xCLFNBQUksR0FBSixJQUFJLENBQWU7UUFSMUQsa0JBQWEsR0FBRztZQUNyQixFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLG1CQUFtQixFQUFFO1lBQy9DLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUscUJBQXFCLEVBQUU7WUFDbkQsRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxvQkFBb0IsRUFBRTtTQUNsRCxDQUFBO1FBTUMsSUFBSSxDQUFDLFlBQVksR0FBRyxLQUFLLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBRTVDLElBQUksSUFBSSxDQUFDLFlBQVksQ0FBQyxXQUFXLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQ3pGLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxDQUFDLEtBQUssR0FBRyxTQUFTLENBQUMsMEJBQTBCLENBQUM7U0FDNUU7UUFDRCxJQUFJLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsRUFBRTtZQUM3RixJQUFJLENBQUMsWUFBWSxDQUFDLFdBQVcsQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDLDhCQUE4QixDQUFDO1NBQ3BGO1FBQ0QsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxFQUFFO1lBQ2xDLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxHQUFHLEVBQUUsS0FBSyxFQUFFLFNBQVMsQ0FBQywwQkFBMEIsRUFBRSxTQUFTLEVBQUUsU0FBUyxDQUFDLDhCQUE4QixFQUFFLENBQUE7U0FDckk7SUFDSCxDQUFDOzs7O0lBRUQsT0FBTztRQUNMLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUN4QyxDQUFDOzs7WUFqQ0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxrQkFBa0I7Z0JBQzVCLHVpRUFBNEM7YUFDN0M7Ozs7WUFUUSxZQUFZLHVCQXFCaEIsUUFBUTs0Q0FDUixRQUFRLFlBQUksTUFBTSxTQUFDLGVBQWU7Ozs7SUFWckMsNENBQW1DOztJQUVuQyw2Q0FJQzs7SUFHQyx1Q0FBOEQ7O0lBQzlELG9DQUErRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5qZWN0LCBPcHRpb25hbCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTWF0RGlhbG9nUmVmLCBNQVRfRElBTE9HX0RBVEEgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9kaWFsb2cnO1xuaW1wb3J0IHsgVXRpbCB9IGZyb20gJ29udGltaXplLXdlYi1uZ3gnO1xuaW1wb3J0IHsgT1JlcG9ydENvbHVtbiB9IGZyb20gJy4uLy4uLy4uL3R5cGVzL3JlcG9ydC1jb2x1bW4udHlwZSc7XG5pbXBvcnQgeyBDb25zdGFudHMgfSBmcm9tICcuLi8uLi8uLi91dGlsL2NvbnN0YW50cyc7XG5pbXBvcnQgeyBVdGlscyB9IGZyb20gJy4uLy4uLy4uL3V0aWwvdXRpbHMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhcHAtc3R5bGUtZGlhbG9nJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3N0eWxlLWRpYWxvZy5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgU3R5bGVEaWFsb2dDb21wb25lbnQge1xuXG4gIHB1YmxpYyByZXBvcnRDb2x1bW46IE9SZXBvcnRDb2x1bW47XG5cbiAgcHVibGljIGRhdGFBbGlnbm1lbnQgPSBbXG4gICAgeyBcIm5hbWVcIjogXCJsZWZ0XCIsIFwiaWNvblwiOiBcImZvcm1hdF9hbGlnbl9sZWZ0XCIgfSxcbiAgICB7IFwibmFtZVwiOiBcImNlbnRlclwiLCBcImljb25cIjogXCJmb3JtYXRfYWxpZ25fY2VudGVyXCIgfSxcbiAgICB7IFwibmFtZVwiOiBcInJpZ2h0XCIsIFwiaWNvblwiOiBcImZvcm1hdF9hbGlnbl9yaWdodFwiIH1cbiAgXVxuXG4gIGNvbnN0cnVjdG9yKFxuICAgIEBPcHRpb25hbCgpIHB1YmxpYyBkaWFsb2dvOiBNYXREaWFsb2dSZWY8U3R5bGVEaWFsb2dDb21wb25lbnQ+LFxuICAgIEBPcHRpb25hbCgpIEBJbmplY3QoTUFUX0RJQUxPR19EQVRBKSBwdWJsaWMgZGF0YTogT1JlcG9ydENvbHVtbikge1xuXG4gICAgdGhpcy5yZXBvcnRDb2x1bW4gPSBVdGlscy5jbG9uZU9iamVjdChkYXRhKTtcblxuICAgIGlmICh0aGlzLnJlcG9ydENvbHVtbi5jb2x1bW5TdHlsZSAmJiAhVXRpbC5pc0RlZmluZWQodGhpcy5yZXBvcnRDb2x1bW4uY29sdW1uU3R5bGUud2lkdGgpKSB7XG4gICAgICB0aGlzLnJlcG9ydENvbHVtbi5jb2x1bW5TdHlsZS53aWR0aCA9IENvbnN0YW50cy5ERUZBVUxUX1dJRFRIX0NPTFVNTl9TVFlMRTtcbiAgICB9XG4gICAgaWYgKHRoaXMucmVwb3J0Q29sdW1uLmNvbHVtblN0eWxlICYmICFVdGlsLmlzRGVmaW5lZCh0aGlzLnJlcG9ydENvbHVtbi5jb2x1bW5TdHlsZS5hbGlnbm1lbnQpKSB7XG4gICAgICB0aGlzLnJlcG9ydENvbHVtbi5jb2x1bW5TdHlsZS5hbGlnbm1lbnQgPSBDb25zdGFudHMuREVGQVVMVF9BTElHTk1FTlRfQ09MVU1OX1NUWUxFO1xuICAgIH1cbiAgICBpZiAoIXRoaXMucmVwb3J0Q29sdW1uLmNvbHVtblN0eWxlKSB7XG4gICAgICB0aGlzLnJlcG9ydENvbHVtbi5jb2x1bW5TdHlsZSA9IHsgd2lkdGg6IENvbnN0YW50cy5ERUZBVUxUX1dJRFRIX0NPTFVNTl9TVFlMRSwgYWxpZ25tZW50OiBDb25zdGFudHMuREVGQVVMVF9BTElHTk1FTlRfQ09MVU1OX1NUWUxFIH1cbiAgICB9XG4gIH1cblxuICBjb25maXJtKCk6IHZvaWQge1xuICAgIHRoaXMuZGlhbG9nby5jbG9zZSh0aGlzLnJlcG9ydENvbHVtbik7XG4gIH1cblxufVxuIl19