import { AfterViewInit, ElementRef, EventEmitter, Injector, OnDestroy, OnInit } from '@angular/core';
import { MatDialog, MatDialogRef } from '@angular/material';
import { ActivatedRoute, ActivatedRouteSnapshot, Router } from '@angular/router';
import { Observable, Subscription } from 'rxjs';
import { ILayoutManagerComponent } from '../../interfaces/layout-manager-component.interface';
import { ILocalStorageComponent } from '../../interfaces/local-storage-component.interface';
import { OFormLayoutManagerMode } from '../../interfaces/o-form-layout-manager-mode.interface';
import { LocalStorageService } from '../../services/local-storage.service';
import { NavigationService } from '../../services/navigation.service';
import { OFormLayoutManagerService } from '../../services/o-form-layout-manager.service';
import { OFormLayoutManagerComponentStateClass } from '../../services/state/o-form-layout-manager-component-state.class';
import { OFormLayoutManagerComponentStateService } from '../../services/state/o-form-layout-manager-component-state.service';
import { OTranslateService } from '../../services/translate/o-translate.service';
import { FormLayoutCloseDetailOptions, FormLayoutDetailComponentData } from '../../types/form-layout-detail-component-data.type';
import { OFormLayoutDialogComponent } from './dialog/o-form-layout-dialog.component';
export declare const DEFAULT_INPUTS_O_FORM_LAYOUT_MANAGER: string[];
export declare const DEFAULT_OUTPUTS_O_FORM_LAYOUT_MANAGER: string[];
export declare class OFormLayoutManagerComponent implements AfterViewInit, OnInit, OnDestroy, ILocalStorageComponent {
    protected injector: Injector;
    protected router: Router;
    protected actRoute: ActivatedRoute;
    protected dialog: MatDialog;
    protected elRef: ElementRef;
    parentFormLayoutManager: OFormLayoutManagerComponent;
    OFormLayoutManagerComponent: typeof OFormLayoutManagerComponent;
    static DIALOG_MODE: string;
    static TAB_MODE: string;
    static SPLIT_PANE_MODE: string;
    oattr: string;
    _mode: string;
    mode: string;
    protected _separator: string;
    separator: string;
    title: string;
    storeState: boolean;
    titleDataOrigin: string;
    dialogWidth: string;
    dialogMinWidth: string;
    dialogMaxWidth: string;
    dialogHeight: string;
    dialogMinHeight: string;
    dialogMaxHeight: string;
    dialogClass: string;
    oTabGroup: OFormLayoutManagerMode;
    dialogRef: MatDialogRef<OFormLayoutDialogComponent>;
    oSplitPane: OFormLayoutManagerMode;
    onMainTabSelected: EventEmitter<any>;
    onSelectedTabChange: EventEmitter<any>;
    onCloseTab: EventEmitter<any>;
    protected _labelColumns: string;
    labelColumns: string;
    protected _labelColsArray: string[];
    labelColsArray: string[];
    protected translateService: OTranslateService;
    protected oFormLayoutManagerService: OFormLayoutManagerService;
    protected localStorageService: LocalStorageService;
    protected _tabGroupOptions: any;
    readonly tabGroupOptions: any;
    addTabGroupOptions(value: any): void;
    protected _dialogOptions: any;
    readonly dialogOptions: any;
    addDialogOptions(value: any): void;
    protected _splitPaneOptions: any;
    readonly splitPaneOptions: any;
    addSplitPaneOptions(value: any): void;
    protected addingGuard: boolean;
    navigationService: NavigationService;
    _markForUpdate: boolean;
    onTriggerUpdate: EventEmitter<any>;
    protected subscription: Subscription;
    protected componentStateService: OFormLayoutManagerComponentStateService;
    constructor(injector: Injector, router: Router, actRoute: ActivatedRoute, dialog: MatDialog, elRef: ElementRef, parentFormLayoutManager: OFormLayoutManagerComponent);
    readonly state: OFormLayoutManagerComponentStateClass;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    getAttribute(): string;
    getComponentKey(): string;
    getRouteKey(): string;
    getDataToStore(): any;
    beforeunloadHandler(): void;
    getLabelFromUrlParams(urlParams: object): string;
    getFormDataFromLabelColumns(data: any): {};
    addActivateChildGuard(): void;
    destroyActivateChildGuard(): void;
    isDialogMode(): boolean;
    isTabMode(): boolean;
    isSplitPaneMode(): boolean;
    addDetailComponent(childRoute: ActivatedRouteSnapshot, url: string): void;
    closeDetail(options?: FormLayoutCloseDetailOptions): void;
    openFormLayoutDialog(detailComp: FormLayoutDetailComponentData): void;
    getFormCacheData(): FormLayoutDetailComponentData;
    setModifiedState(formAttr: string, modified: boolean, confirmExit: boolean): void;
    getLabelFromData(data: any): string;
    updateNavigation(data: any, keysValues: any, insertionMode: boolean): void;
    updateActiveData(data: any): void;
    getRouteOfActiveItem(): any[];
    isMainComponent(comp: ILayoutManagerComponent): boolean;
    getRouteForComponent(comp: ILayoutManagerComponent): any[];
    setAsActiveFormLayoutManager(): void;
    reloadMainComponents(): void;
    allowToUpdateNavigation(formAttr: string): boolean;
    updateStateStorage(): void;
    private getParentActRouteRoute;
    updateIfNeeded(): void;
    getParams(): any;
    markForUpdate: boolean;
    readonly ignoreCanDeactivate: boolean;
    protected getLayoutModeComponent(): OFormLayoutManagerMode;
    allowNavigation(): boolean;
    canAddDetailComponent(): Observable<boolean>;
    hasToConfirmExit(data: FormLayoutDetailComponentData, options?: FormLayoutCloseDetailOptions): boolean;
}
