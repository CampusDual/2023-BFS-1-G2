import { Util } from '../../../../util';
import { OComboComponent } from '../o-combo.component';
export const DEFAULT_INPUTS_O_COMBO_RENDERER = [];
export class OComboCustomRenderer {
    constructor(injector) {
        this.injector = injector;
        this.comboComponent = this.injector.get(OComboComponent);
    }
    ngOnInit() {
        this.initialize();
    }
    initialize() {
    }
    ngAfterContentInit() {
        this.registerRenderer();
    }
    registerRenderer() {
        this.comboComponent.registerRenderer(this);
    }
    getComboData(record) {
        let descTxt = '';
        if (!Util.isDefined(record)) {
            return descTxt;
        }
        this.comboComponent.descriptionColArray.forEach((col, index) => {
            if (Util.isDefined(record[col])) {
                let value = record[col];
                if (this.componentPipe && this.pipeArguments != null) {
                    value = this.componentPipe.transform(value, this.pipeArguments);
                }
                if (Util.isDefined(value)) {
                    descTxt += value;
                    if (index < this.comboComponent.descriptionColArray.length - 1) {
                        descTxt += this.comboComponent.separator;
                    }
                }
            }
        });
        return descTxt;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiby1jb21iby1yZW5kZXJlci5jbGFzcy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL29udGltaXplLXdlYi1uZ3gvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9pbnB1dC9jb21iby9jb21iby1yZW5kZXJlci9vLWNvbWJvLXJlbmRlcmVyLmNsYXNzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUN4QyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFdkQsTUFBTSxDQUFDLE1BQU0sK0JBQStCLEdBQUcsRUFBRSxDQUFDO0FBQ2xELE1BQU0sT0FBTyxvQkFBb0I7SUFRL0IsWUFBc0IsUUFBa0I7UUFBbEIsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUN0QyxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLGVBQWUsQ0FBQyxDQUFDO0lBQzNELENBQUM7SUFFTSxRQUFRO1FBQ2IsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO0lBQ3BCLENBQUM7SUFFTSxVQUFVO0lBQ2pCLENBQUM7SUFFTSxrQkFBa0I7UUFDdkIsSUFBSSxDQUFDLGdCQUFnQixFQUFFLENBQUM7SUFDMUIsQ0FBQztJQUVNLGdCQUFnQjtRQUNyQixJQUFJLENBQUMsY0FBYyxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzdDLENBQUM7SUFPTSxZQUFZLENBQUMsTUFBVztRQUM3QixJQUFJLE9BQU8sR0FBRyxFQUFFLENBQUM7UUFDakIsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDM0IsT0FBTyxPQUFPLENBQUM7U0FDaEI7UUFDRCxJQUFJLENBQUMsY0FBYyxDQUFDLG1CQUFtQixDQUFDLE9BQU8sQ0FBQyxDQUFDLEdBQUcsRUFBRSxLQUFLLEVBQUUsRUFBRTtZQUM3RCxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUU7Z0JBQy9CLElBQUksS0FBSyxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDeEIsSUFBSSxJQUFJLENBQUMsYUFBYSxJQUFJLElBQUksQ0FBQyxhQUFhLElBQUksSUFBSSxFQUFFO29CQUNwRCxLQUFLLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztpQkFDakU7Z0JBQ0QsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxFQUFFO29CQUN6QixPQUFPLElBQUksS0FBSyxDQUFDO29CQUVqQixJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLG1CQUFtQixDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7d0JBQzlELE9BQU8sSUFBSSxJQUFJLENBQUMsY0FBYyxDQUFDLFNBQVMsQ0FBQztxQkFDMUM7aUJBQ0Y7YUFDRjtRQUNILENBQUMsQ0FBQyxDQUFDO1FBQ0gsT0FBTyxPQUFPLENBQUM7SUFDakIsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0b3IsIE9uSW5pdCwgUGlwZVRyYW5zZm9ybSwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgVXRpbCB9IGZyb20gJy4uLy4uLy4uLy4uL3V0aWwnO1xuaW1wb3J0IHsgT0NvbWJvQ29tcG9uZW50IH0gZnJvbSAnLi4vby1jb21iby5jb21wb25lbnQnO1xuXG5leHBvcnQgY29uc3QgREVGQVVMVF9JTlBVVFNfT19DT01CT19SRU5ERVJFUiA9IFtdO1xuZXhwb3J0IGNsYXNzIE9Db21ib0N1c3RvbVJlbmRlcmVyIGltcGxlbWVudHMgT25Jbml0IHtcblxuICBwdWJsaWMgdGVtcGxhdGVyZWY6IFRlbXBsYXRlUmVmPGFueT47XG4gIHB1YmxpYyBjb21ib0NvbXBvbmVudDogT0NvbWJvQ29tcG9uZW50O1xuXG4gIHByb3RlY3RlZCBwaXBlQXJndW1lbnRzOiBhbnk7XG4gIHByb3RlY3RlZCBjb21wb25lbnRQaXBlOiBQaXBlVHJhbnNmb3JtO1xuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBpbmplY3RvcjogSW5qZWN0b3IpIHtcbiAgICB0aGlzLmNvbWJvQ29tcG9uZW50ID0gdGhpcy5pbmplY3Rvci5nZXQoT0NvbWJvQ29tcG9uZW50KTtcbiAgfVxuXG4gIHB1YmxpYyBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmluaXRpYWxpemUoKTtcbiAgfVxuXG4gIHB1YmxpYyBpbml0aWFsaXplKCk6IHZvaWQge1xuICB9XG5cbiAgcHVibGljIG5nQWZ0ZXJDb250ZW50SW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLnJlZ2lzdGVyUmVuZGVyZXIoKTtcbiAgfVxuXG4gIHB1YmxpYyByZWdpc3RlclJlbmRlcmVyKCk6IHZvaWQge1xuICAgIHRoaXMuY29tYm9Db21wb25lbnQucmVnaXN0ZXJSZW5kZXJlcih0aGlzKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBkaXNwbGF5ZWQgY29tYm8gZGF0YVxuICAgKiBAcGFyYW0gdmFsdWUgSW50ZXJuYWwgY29tYm8gZGF0YVxuICAqL1xuXG4gIHB1YmxpYyBnZXRDb21ib0RhdGEocmVjb3JkOiBhbnkpOiBzdHJpbmcge1xuICAgIGxldCBkZXNjVHh0ID0gJyc7XG4gICAgaWYgKCFVdGlsLmlzRGVmaW5lZChyZWNvcmQpKSB7XG4gICAgICByZXR1cm4gZGVzY1R4dDtcbiAgICB9XG4gICAgdGhpcy5jb21ib0NvbXBvbmVudC5kZXNjcmlwdGlvbkNvbEFycmF5LmZvckVhY2goKGNvbCwgaW5kZXgpID0+IHtcbiAgICAgIGlmIChVdGlsLmlzRGVmaW5lZChyZWNvcmRbY29sXSkpIHtcbiAgICAgICAgbGV0IHZhbHVlID0gcmVjb3JkW2NvbF07XG4gICAgICAgIGlmICh0aGlzLmNvbXBvbmVudFBpcGUgJiYgdGhpcy5waXBlQXJndW1lbnRzICE9IG51bGwpIHtcbiAgICAgICAgICB2YWx1ZSA9IHRoaXMuY29tcG9uZW50UGlwZS50cmFuc2Zvcm0odmFsdWUsIHRoaXMucGlwZUFyZ3VtZW50cyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKFV0aWwuaXNEZWZpbmVkKHZhbHVlKSkge1xuICAgICAgICAgIGRlc2NUeHQgKz0gdmFsdWU7XG5cbiAgICAgICAgICBpZiAoaW5kZXggPCB0aGlzLmNvbWJvQ29tcG9uZW50LmRlc2NyaXB0aW9uQ29sQXJyYXkubGVuZ3RoIC0gMSkge1xuICAgICAgICAgICAgZGVzY1R4dCArPSB0aGlzLmNvbWJvQ29tcG9uZW50LnNlcGFyYXRvcjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gZGVzY1R4dDtcbiAgfVxufSJdfQ==