import * as tslib_1 from "tslib";
import { Component, EventEmitter, Injector, ViewChild, ViewEncapsulation } from '@angular/core';
import { InputConverter } from '../../decorators/input-converter';
import { AuthService } from '../../services';
import { DialogService } from '../../services/dialog.service';
import { OModulesInfoService } from '../../services/o-modules-info.service';
import { Codes } from '../../util';
import { OUserInfoComponent } from '../user-info/o-user-info.component';
export const DEFAULT_INPUTS_O_APP_HEADER = [
    'showUserInfo: show-user-info',
    'showLanguageSelector: show-language-selector',
    'useFlagIcons: use-flag-icons',
    'color',
    'headerHeight:header-height',
    'showTitle: show-title',
    'staticTitle: static-title',
    'showStaticTitle: show-static-title'
];
export const DEFAULT_OUTPUTS_O_APP_HEADER = [
    'onSidenavToggle'
];
export class OAppHeaderComponent {
    constructor(injector) {
        this.injector = injector;
        this.showTitle = false;
        this.showStaticTitle = false;
        this.showUserInfo = true;
        this.showLanguageSelector = true;
        this.useFlagIcons = false;
        this.onSidenavToggle = new EventEmitter();
        this._headerHeight = Codes.DEFAULT_ROW_HEIGHT;
        this.dialogService = this.injector.get(DialogService);
        this.modulesInfoService = this.injector.get(OModulesInfoService);
        this.authService = this.injector.get(AuthService);
    }
    set headerHeight(value) {
        this._headerHeight = value ? value.toLowerCase() : value;
        if (!Codes.isValidRowHeight(this._headerHeight)) {
            this._headerHeight = Codes.DEFAULT_ROW_HEIGHT;
        }
    }
    get headerHeight() {
        return this._headerHeight;
    }
    ngOnInit() {
        if (!this.showStaticTitle) {
            this.headerTitle$ = this.modulesInfoService.getModuleChangeObservable();
        }
    }
    onLogoutClick() {
        this.authService.logoutWithConfirmation();
    }
    set color(newValue) {
        this._color = newValue;
    }
    get color() {
        return this._color;
    }
}
OAppHeaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'o-app-header',
                inputs: DEFAULT_INPUTS_O_APP_HEADER,
                outputs: DEFAULT_OUTPUTS_O_APP_HEADER,
                template: "<nav fxFlex fxLayout=\"row\" fxLayoutAlign=\"space-between stretch\" [ngClass]=\"color ? 'o-app-header-'+color : ''\">\n  <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <ng-content></ng-content>\n    <ng-content select=\"o-app-layout-header-projection-start\"></ng-content>\n    <span *ngIf=\"showTitle && !showStaticTitle\" class=\"o-app-header-title\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      {{ headerTitle$ | async | oTranslate }}\n    </span>\n    <span *ngIf=\"showTitle && showStaticTitle\" class=\"o-app-header-title\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      {{ staticTitle | oTranslate }}\n    </span>\n    <div fxLayout=\"row\" fxLayoutAlign=\"end stretch\" class=\"o-app-header-default-actions\">\n      <div class=\"layout-header-projection-end\">\n        <ng-content select=\"o-app-layout-header-projection-end\"></ng-content>\n      </div>\n      <o-user-info #userInfo *ngIf=\"showUserInfo\"></o-user-info>\n      <o-language-selector *ngIf=\"showLanguageSelector\" [use-flag-icons]=\"useFlagIcons\"></o-language-selector>\n    </div>\n  </div>\n</nav>\n",
                encapsulation: ViewEncapsulation.None,
                host: {
                    '[class.o-app-header]': 'true',
                    '[class.o-app-header-small]': 'headerHeight==="small"',
                    '[class.o-app-header-medium]': 'headerHeight==="medium"',
                    '[class.o-app-header-large]': 'headerHeight==="large"'
                },
                styles: [".o-app-header{z-index:2;box-shadow:0 2px 6px #00000029}.o-app-header.o-app-header-large{height:56px}.o-app-header.o-app-header-large+.header-layout{top:56px}.o-app-header.o-app-header-large .o-user-info{font-size:16px}.o-app-header.o-app-header-large .o-user-info .o-user-info-avatar-wrapper{height:40px;width:40px}.o-app-header.o-app-header-medium{height:48px}.o-app-header.o-app-header-medium+.header-layout{top:48px}.o-app-header.o-app-header-medium .o-user-info{font-size:16px}.o-app-header.o-app-header-medium .o-user-info .o-user-info-avatar-wrapper{height:32px;width:32px}.o-app-header.o-app-header-small{height:40px}.o-app-header.o-app-header-small+.header-layout{top:40px}.o-app-header.o-app-header-small .o-user-info{font-size:14px}.o-app-header.o-app-header-small .o-user-info .o-user-info-avatar-wrapper{height:30px;width:30px}.o-app-header nav{padding-right:16px}.o-app-header nav .sidenav-toggle{text-align:center;padding:16px;cursor:pointer}.o-app-header nav .o-app-header-title{padding:0 16px;cursor:default}.o-app-header nav .o-app-header-default-actions{margin-left:auto}.o-app-header nav .o-app-header-default-actions .layout-header-projection-end{margin-right:16px}"]
            }] }
];
OAppHeaderComponent.ctorParameters = () => [
    { type: Injector }
];
OAppHeaderComponent.propDecorators = {
    userInfo: [{ type: ViewChild, args: ['userInfo', { static: false },] }]
};
tslib_1.__decorate([
    InputConverter(),
    tslib_1.__metadata("design:type", Boolean)
], OAppHeaderComponent.prototype, "showUserInfo", void 0);
tslib_1.__decorate([
    InputConverter(),
    tslib_1.__metadata("design:type", Boolean)
], OAppHeaderComponent.prototype, "showLanguageSelector", void 0);
tslib_1.__decorate([
    InputConverter(),
    tslib_1.__metadata("design:type", Boolean)
], OAppHeaderComponent.prototype, "useFlagIcons", void 0);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiby1hcHAtaGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL29udGltaXplLXdlYi1uZ3gvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9hcHAtaGVhZGVyL28tYXBwLWhlYWRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLFFBQVEsRUFBUSxTQUFTLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFJdEcsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ2xFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDOUQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDNUUsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLFlBQVksQ0FBQztBQUNuQyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUV4RSxNQUFNLENBQUMsTUFBTSwyQkFBMkIsR0FBRztJQUN6Qyw4QkFBOEI7SUFDOUIsOENBQThDO0lBQzlDLDhCQUE4QjtJQUM5QixPQUFPO0lBQ1AsNEJBQTRCO0lBQzVCLHVCQUF1QjtJQUN2QiwyQkFBMkI7SUFDM0Isb0NBQW9DO0NBQ3JDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSw0QkFBNEIsR0FBRztJQUMxQyxpQkFBaUI7Q0FDbEIsQ0FBQztBQWdCRixNQUFNLE9BQU8sbUJBQW1CO0lBb0M5QixZQUNZLFFBQWtCO1FBQWxCLGFBQVEsR0FBUixRQUFRLENBQVU7UUFoQ3ZCLGNBQVMsR0FBRyxLQUFLLENBQUM7UUFDbEIsb0JBQWUsR0FBRyxLQUFLLENBQUM7UUFRL0IsaUJBQVksR0FBWSxJQUFJLENBQUM7UUFFN0IseUJBQW9CLEdBQVksSUFBSSxDQUFDO1FBRXJDLGlCQUFZLEdBQVksS0FBSyxDQUFDO1FBRXZCLG9CQUFlLEdBQUcsSUFBSSxZQUFZLEVBQVEsQ0FBQztRQUN4QyxrQkFBYSxHQUFHLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQztRQWtCakQsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBZ0IsYUFBb0MsQ0FBQyxDQUFDO1FBQzVGLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBc0IsbUJBQWdELENBQUMsQ0FBQztRQUNuSCxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFjLFdBQWdDLENBQUMsQ0FBQztJQUN0RixDQUFDO0lBbkJELElBQUksWUFBWSxDQUFDLEtBQUs7UUFDcEIsSUFBSSxDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO1FBQ3pELElBQUksQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxFQUFFO1lBQy9DLElBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFDLGtCQUFrQixDQUFDO1NBQy9DO0lBQ0gsQ0FBQztJQUVELElBQUksWUFBWTtRQUNkLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQztJQUM1QixDQUFDO0lBV0QsUUFBUTtRQUNOLElBQUksQ0FBQyxJQUFJLENBQUMsZUFBZSxFQUFFO1lBQ3pCLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixDQUFDLHlCQUF5QixFQUFFLENBQUM7U0FDekU7SUFDSCxDQUFDO0lBQ0QsYUFBYTtRQUNYLElBQUksQ0FBQyxXQUFXLENBQUMsc0JBQXNCLEVBQUUsQ0FBQztJQUM1QyxDQUFDO0lBQ0QsSUFBSSxLQUFLLENBQUMsUUFBc0I7UUFDOUIsSUFBSSxDQUFDLE1BQU0sR0FBRyxRQUFRLENBQUM7SUFDekIsQ0FBQztJQUVELElBQUksS0FBSztRQUNQLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUNyQixDQUFDOzs7WUF2RUYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxjQUFjO2dCQUN4QixNQUFNLEVBQUUsMkJBQTJCO2dCQUNuQyxPQUFPLEVBQUUsNEJBQTRCO2dCQUNyQyxzbkNBQTRDO2dCQUU1QyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtnQkFDckMsSUFBSSxFQUFFO29CQUNKLHNCQUFzQixFQUFFLE1BQU07b0JBQzlCLDRCQUE0QixFQUFFLHdCQUF3QjtvQkFDdEQsNkJBQTZCLEVBQUUseUJBQXlCO29CQUN4RCw0QkFBNEIsRUFBRSx3QkFBd0I7aUJBQ3ZEOzthQUNGOzs7WUF2Q2lDLFFBQVE7Ozt1QkFrRHZDLFNBQVMsU0FBQyxVQUFVLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFOztBQUl4QztJQURDLGNBQWMsRUFBRTs7eURBQ1k7QUFFN0I7SUFEQyxjQUFjLEVBQUU7O2lFQUNvQjtBQUVyQztJQURDLGNBQWMsRUFBRTs7eURBQ2EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5qZWN0b3IsIFR5cGUsIFZpZXdDaGlsZCwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFRoZW1lUGFsZXR0ZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcblxuaW1wb3J0IHsgSW5wdXRDb252ZXJ0ZXIgfSBmcm9tICcuLi8uLi9kZWNvcmF0b3JzL2lucHV0LWNvbnZlcnRlcic7XG5pbXBvcnQgeyBBdXRoU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzJztcbmltcG9ydCB7IERpYWxvZ1NlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9kaWFsb2cuc2VydmljZSc7XG5pbXBvcnQgeyBPTW9kdWxlc0luZm9TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvby1tb2R1bGVzLWluZm8uc2VydmljZSc7XG5pbXBvcnQgeyBDb2RlcyB9IGZyb20gJy4uLy4uL3V0aWwnO1xuaW1wb3J0IHsgT1VzZXJJbmZvQ29tcG9uZW50IH0gZnJvbSAnLi4vdXNlci1pbmZvL28tdXNlci1pbmZvLmNvbXBvbmVudCc7XG5cbmV4cG9ydCBjb25zdCBERUZBVUxUX0lOUFVUU19PX0FQUF9IRUFERVIgPSBbXG4gICdzaG93VXNlckluZm86IHNob3ctdXNlci1pbmZvJyxcbiAgJ3Nob3dMYW5ndWFnZVNlbGVjdG9yOiBzaG93LWxhbmd1YWdlLXNlbGVjdG9yJyxcbiAgJ3VzZUZsYWdJY29uczogdXNlLWZsYWctaWNvbnMnLFxuICAnY29sb3InLFxuICAnaGVhZGVySGVpZ2h0OmhlYWRlci1oZWlnaHQnLFxuICAnc2hvd1RpdGxlOiBzaG93LXRpdGxlJyxcbiAgJ3N0YXRpY1RpdGxlOiBzdGF0aWMtdGl0bGUnLFxuICAnc2hvd1N0YXRpY1RpdGxlOiBzaG93LXN0YXRpYy10aXRsZSdcbl07XG5cbmV4cG9ydCBjb25zdCBERUZBVUxUX09VVFBVVFNfT19BUFBfSEVBREVSID0gW1xuICAnb25TaWRlbmF2VG9nZ2xlJ1xuXTtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnby1hcHAtaGVhZGVyJyxcbiAgaW5wdXRzOiBERUZBVUxUX0lOUFVUU19PX0FQUF9IRUFERVIsXG4gIG91dHB1dHM6IERFRkFVTFRfT1VUUFVUU19PX0FQUF9IRUFERVIsXG4gIHRlbXBsYXRlVXJsOiAnLi9vLWFwcC1oZWFkZXIuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9vLWFwcC1oZWFkZXIuY29tcG9uZW50LnNjc3MnXSxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgaG9zdDoge1xuICAgICdbY2xhc3Muby1hcHAtaGVhZGVyXSc6ICd0cnVlJyxcbiAgICAnW2NsYXNzLm8tYXBwLWhlYWRlci1zbWFsbF0nOiAnaGVhZGVySGVpZ2h0PT09XCJzbWFsbFwiJyxcbiAgICAnW2NsYXNzLm8tYXBwLWhlYWRlci1tZWRpdW1dJzogJ2hlYWRlckhlaWdodD09PVwibWVkaXVtXCInLFxuICAgICdbY2xhc3Muby1hcHAtaGVhZGVyLWxhcmdlXSc6ICdoZWFkZXJIZWlnaHQ9PT1cImxhcmdlXCInXG4gIH1cbn0pXG5leHBvcnQgY2xhc3MgT0FwcEhlYWRlckNvbXBvbmVudCB7XG5cbiAgcHJvdGVjdGVkIGRpYWxvZ1NlcnZpY2U6IERpYWxvZ1NlcnZpY2U7XG4gIHByb3RlY3RlZCBtb2R1bGVzSW5mb1NlcnZpY2U6IE9Nb2R1bGVzSW5mb1NlcnZpY2U7XG4gIHByb3RlY3RlZCBhdXRoU2VydmljZTogQXV0aFNlcnZpY2U7XG4gIHB1YmxpYyBzaG93VGl0bGUgPSBmYWxzZTtcbiAgcHVibGljIHNob3dTdGF0aWNUaXRsZSA9IGZhbHNlO1xuICBwdWJsaWMgc3RhdGljVGl0bGU6IHN0cmluZztcbiAgcHVibGljIGhlYWRlclRpdGxlJDogT2JzZXJ2YWJsZTxzdHJpbmc+O1xuXG4gIEBWaWV3Q2hpbGQoJ3VzZXJJbmZvJywgeyBzdGF0aWM6IGZhbHNlIH0pXG4gIHB1YmxpYyB1c2VySW5mbzogT1VzZXJJbmZvQ29tcG9uZW50O1xuXG4gIEBJbnB1dENvbnZlcnRlcigpXG4gIHNob3dVc2VySW5mbzogYm9vbGVhbiA9IHRydWU7XG4gIEBJbnB1dENvbnZlcnRlcigpXG4gIHNob3dMYW5ndWFnZVNlbGVjdG9yOiBib29sZWFuID0gdHJ1ZTtcbiAgQElucHV0Q29udmVydGVyKClcbiAgdXNlRmxhZ0ljb25zOiBib29sZWFuID0gZmFsc2U7XG5cbiAgcHVibGljIG9uU2lkZW5hdlRvZ2dsZSA9IG5ldyBFdmVudEVtaXR0ZXI8dm9pZD4oKTtcbiAgcHJvdGVjdGVkIF9oZWFkZXJIZWlnaHQgPSBDb2Rlcy5ERUZBVUxUX1JPV19IRUlHSFQ7XG5cbiAgc2V0IGhlYWRlckhlaWdodCh2YWx1ZSkge1xuICAgIHRoaXMuX2hlYWRlckhlaWdodCA9IHZhbHVlID8gdmFsdWUudG9Mb3dlckNhc2UoKSA6IHZhbHVlO1xuICAgIGlmICghQ29kZXMuaXNWYWxpZFJvd0hlaWdodCh0aGlzLl9oZWFkZXJIZWlnaHQpKSB7XG4gICAgICB0aGlzLl9oZWFkZXJIZWlnaHQgPSBDb2Rlcy5ERUZBVUxUX1JPV19IRUlHSFQ7XG4gICAgfVxuICB9XG5cbiAgZ2V0IGhlYWRlckhlaWdodCgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLl9oZWFkZXJIZWlnaHQ7XG4gIH1cblxuICBwcml2YXRlIF9jb2xvcjogVGhlbWVQYWxldHRlO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByb3RlY3RlZCBpbmplY3RvcjogSW5qZWN0b3IsXG4gICkge1xuICAgIHRoaXMuZGlhbG9nU2VydmljZSA9IHRoaXMuaW5qZWN0b3IuZ2V0PERpYWxvZ1NlcnZpY2U+KERpYWxvZ1NlcnZpY2UgYXMgVHlwZTxEaWFsb2dTZXJ2aWNlPik7XG4gICAgdGhpcy5tb2R1bGVzSW5mb1NlcnZpY2UgPSB0aGlzLmluamVjdG9yLmdldDxPTW9kdWxlc0luZm9TZXJ2aWNlPihPTW9kdWxlc0luZm9TZXJ2aWNlIGFzIFR5cGU8T01vZHVsZXNJbmZvU2VydmljZT4pO1xuICAgIHRoaXMuYXV0aFNlcnZpY2UgPSB0aGlzLmluamVjdG9yLmdldDxBdXRoU2VydmljZT4oQXV0aFNlcnZpY2UgYXMgVHlwZTxBdXRoU2VydmljZT4pO1xuICB9XG4gIG5nT25Jbml0KCkge1xuICAgIGlmICghdGhpcy5zaG93U3RhdGljVGl0bGUpIHtcbiAgICAgIHRoaXMuaGVhZGVyVGl0bGUkID0gdGhpcy5tb2R1bGVzSW5mb1NlcnZpY2UuZ2V0TW9kdWxlQ2hhbmdlT2JzZXJ2YWJsZSgpO1xuICAgIH1cbiAgfVxuICBvbkxvZ291dENsaWNrKCkge1xuICAgIHRoaXMuYXV0aFNlcnZpY2UubG9nb3V0V2l0aENvbmZpcm1hdGlvbigpO1xuICB9XG4gIHNldCBjb2xvcihuZXdWYWx1ZTogVGhlbWVQYWxldHRlKSB7XG4gICAgdGhpcy5fY29sb3IgPSBuZXdWYWx1ZTtcbiAgfVxuXG4gIGdldCBjb2xvcigpOiBUaGVtZVBhbGV0dGUge1xuICAgIHJldHVybiB0aGlzLl9jb2xvcjtcbiAgfVxuXG59XG4iXX0=