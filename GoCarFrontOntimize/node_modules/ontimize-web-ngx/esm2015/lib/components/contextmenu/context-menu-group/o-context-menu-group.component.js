import { Component, ContentChildren, forwardRef, QueryList } from '@angular/core';
import { Subscription } from 'rxjs';
import { DEFAULT_INPUTS_O_CONTEXT_MENU_ITEMS, OComponentMenuBaseItem } from '../o-content-menu-base-item.class';
export const DEFAULT_CONTEXT_MENU_GROUP_INPUTS = [
    ...DEFAULT_INPUTS_O_CONTEXT_MENU_ITEMS
];
export class OContextMenuGroupComponent extends OComponentMenuBaseItem {
    constructor() {
        super(...arguments);
        this.type = OComponentMenuBaseItem.TYPE_GROUP_MENU;
        this.children = [];
        this.subscription = new Subscription();
    }
    ngOnDestroy() {
        this.subscription.unsubscribe();
    }
    ngAfterContentInit() {
        this.subscription.add(this.oContextMenuItems.changes.subscribe(() => {
            this.updateChildren();
        }));
        this.updateChildren();
    }
    updateChildren() {
        this.children = this.oContextMenuItems.toArray().slice(1, this.oContextMenuItems.toArray().length);
    }
}
OContextMenuGroupComponent.decorators = [
    { type: Component, args: [{
                selector: 'o-context-menu-group',
                template: ' ',
                inputs: DEFAULT_CONTEXT_MENU_GROUP_INPUTS,
                providers: [{ provide: OComponentMenuBaseItem, useExisting: forwardRef(() => OContextMenuGroupComponent) }]
            }] }
];
OContextMenuGroupComponent.propDecorators = {
    oContextMenuItems: [{ type: ContentChildren, args: [OComponentMenuBaseItem,] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiby1jb250ZXh0LW1lbnUtZ3JvdXAuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vb250aW1pemUtd2ViLW5neC8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2NvbnRleHRtZW51L2NvbnRleHQtbWVudS1ncm91cC9vLWNvbnRleHQtbWVudS1ncm91cC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFvQixTQUFTLEVBQUUsZUFBZSxFQUFFLFVBQVUsRUFBYSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDL0csT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUVwQyxPQUFPLEVBQUUsbUNBQW1DLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUVoSCxNQUFNLENBQUMsTUFBTSxpQ0FBaUMsR0FBRztJQUMvQyxHQUFHLG1DQUFtQztDQUN2QyxDQUFDO0FBUUYsTUFBTSxPQUFPLDBCQUEyQixTQUFRLHNCQUFzQjtJQU50RTs7UUFRUyxTQUFJLEdBQUcsc0JBQXNCLENBQUMsZUFBZSxDQUFDO1FBQzlDLGFBQVEsR0FBNkIsRUFBRSxDQUFDO1FBR3JDLGlCQUFZLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQWlCOUMsQ0FBQztJQWZDLFdBQVc7UUFDVCxJQUFJLENBQUMsWUFBWSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ2xDLENBQUM7SUFFRCxrQkFBa0I7UUFDaEIsSUFBSSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsR0FBRyxFQUFFO1lBQ2xFLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN4QixDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ0osSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQ3hCLENBQUM7SUFFUyxjQUFjO1FBQ3RCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDLE9BQU8sRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLGlCQUFpQixDQUFDLE9BQU8sRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3JHLENBQUM7OztZQTNCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHNCQUFzQjtnQkFDaEMsUUFBUSxFQUFFLEdBQUc7Z0JBQ2IsTUFBTSxFQUFFLGlDQUFpQztnQkFDekMsU0FBUyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQywwQkFBMEIsQ0FBQyxFQUFFLENBQUM7YUFDNUc7OztnQ0FLRSxlQUFlLFNBQUMsc0JBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJDb250ZW50SW5pdCwgQ29tcG9uZW50LCBDb250ZW50Q2hpbGRyZW4sIGZvcndhcmRSZWYsIE9uRGVzdHJveSwgUXVlcnlMaXN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcblxuaW1wb3J0IHsgREVGQVVMVF9JTlBVVFNfT19DT05URVhUX01FTlVfSVRFTVMsIE9Db21wb25lbnRNZW51QmFzZUl0ZW0gfSBmcm9tICcuLi9vLWNvbnRlbnQtbWVudS1iYXNlLWl0ZW0uY2xhc3MnO1xuXG5leHBvcnQgY29uc3QgREVGQVVMVF9DT05URVhUX01FTlVfR1JPVVBfSU5QVVRTID0gW1xuICAuLi5ERUZBVUxUX0lOUFVUU19PX0NPTlRFWFRfTUVOVV9JVEVNU1xuXTtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnby1jb250ZXh0LW1lbnUtZ3JvdXAnLFxuICB0ZW1wbGF0ZTogJyAnLFxuICBpbnB1dHM6IERFRkFVTFRfQ09OVEVYVF9NRU5VX0dST1VQX0lOUFVUUyxcbiAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBPQ29tcG9uZW50TWVudUJhc2VJdGVtLCB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBPQ29udGV4dE1lbnVHcm91cENvbXBvbmVudCkgfV1cbn0pXG5leHBvcnQgY2xhc3MgT0NvbnRleHRNZW51R3JvdXBDb21wb25lbnQgZXh0ZW5kcyBPQ29tcG9uZW50TWVudUJhc2VJdGVtIGltcGxlbWVudHMgQWZ0ZXJDb250ZW50SW5pdCwgT25EZXN0cm95IHtcblxuICBwdWJsaWMgdHlwZSA9IE9Db21wb25lbnRNZW51QmFzZUl0ZW0uVFlQRV9HUk9VUF9NRU5VO1xuICBwdWJsaWMgY2hpbGRyZW46IE9Db21wb25lbnRNZW51QmFzZUl0ZW1bXSA9IFtdO1xuICBAQ29udGVudENoaWxkcmVuKE9Db21wb25lbnRNZW51QmFzZUl0ZW0pIHB1YmxpYyBvQ29udGV4dE1lbnVJdGVtczogUXVlcnlMaXN0PE9Db21wb25lbnRNZW51QmFzZUl0ZW0+O1xuXG4gIHByb3RlY3RlZCBzdWJzY3JpcHRpb24gPSBuZXcgU3Vic2NyaXB0aW9uKCk7XG5cbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgdGhpcy5zdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgfVxuXG4gIG5nQWZ0ZXJDb250ZW50SW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLnN1YnNjcmlwdGlvbi5hZGQodGhpcy5vQ29udGV4dE1lbnVJdGVtcy5jaGFuZ2VzLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICB0aGlzLnVwZGF0ZUNoaWxkcmVuKCk7XG4gICAgfSkpO1xuICAgIHRoaXMudXBkYXRlQ2hpbGRyZW4oKTtcbiAgfVxuXG4gIHByb3RlY3RlZCB1cGRhdGVDaGlsZHJlbigpIHtcbiAgICB0aGlzLmNoaWxkcmVuID0gdGhpcy5vQ29udGV4dE1lbnVJdGVtcy50b0FycmF5KCkuc2xpY2UoMSwgdGhpcy5vQ29udGV4dE1lbnVJdGVtcy50b0FycmF5KCkubGVuZ3RoKTtcbiAgfVxuXG59XG4iXX0=