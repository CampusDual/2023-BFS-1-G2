import { Injectable, Injector } from "@angular/core";
export class OntimizeExportDataBaseProviderService {
    constructor(injector) {
        this.injector = injector;
    }
    initializeProvider(table) {
        this.table = table;
        const tableOptions = this.table.oTableOptions;
        this.colsNotIncluded = this.table.getColumnsNotIncluded();
        this.columns = tableOptions.visibleColumns.filter(c => this.colsNotIncluded.indexOf(c) === -1);
        const tableColumnNames = tableOptions.visibleColumns.filter(c => this.colsNotIncluded.indexOf(c) === -1);
        this.columnNames = this.table.getColumnNames(tableColumnNames);
        this.sqlTypes = this.table.getSqlTypes();
        this.entity = this.table.entity;
        this.service = this.table.service;
        this.filter = this.table.getComponentFilter();
    }
}
OntimizeExportDataBaseProviderService.decorators = [
    { type: Injectable }
];
OntimizeExportDataBaseProviderService.ctorParameters = () => [
    { type: Injector }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib250aW1pemUtZXhwb3J0LWRhdGEtYmFzZS1wcm92aWRlci5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vb250aW1pemUtd2ViLW5neC8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlcy9vbnRpbWl6ZS1leHBvcnQtZGF0YS1iYXNlLXByb3ZpZGVyLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFJckQsTUFBTSxPQUFPLHFDQUFxQztJQVdoRCxZQUFzQixRQUFrQjtRQUFsQixhQUFRLEdBQVIsUUFBUSxDQUFVO0lBQUksQ0FBQztJQUc3QyxrQkFBa0IsQ0FBQyxLQUFzQjtRQUN2QyxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUVuQixNQUFNLFlBQVksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQztRQUM5QyxJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMscUJBQXFCLEVBQUUsQ0FBQTtRQUN6RCxJQUFJLENBQUMsT0FBTyxHQUFHLFlBQVksQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUcvRixNQUFNLGdCQUFnQixHQUFHLFlBQVksQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN6RyxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsY0FBYyxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFHL0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBR3pDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUM7UUFHaEMsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQztRQUdsQyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztJQUNoRCxDQUFDOzs7WUFyQ0YsVUFBVTs7O1lBSFUsUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUsIEluamVjdG9yIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IE9UYWJsZUNvbXBvbmVudCB9IGZyb20gXCIuLi9jb21wb25lbnRzL3RhYmxlL28tdGFibGUuY29tcG9uZW50XCI7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBPbnRpbWl6ZUV4cG9ydERhdGFCYXNlUHJvdmlkZXJTZXJ2aWNlIHtcblxuICB0YWJsZTogT1RhYmxlQ29tcG9uZW50O1xuICBjb2x1bW5zOiBhbnk7XG4gIGNvbHNOb3RJbmNsdWRlZDogc3RyaW5nW11cbiAgY29sdW1uTmFtZXM6IGFueTtcbiAgc3FsVHlwZXM6IGFueTtcbiAgZW50aXR5OiBzdHJpbmc7XG4gIHNlcnZpY2U6IHN0cmluZztcbiAgZmlsdGVyOiBhbnk7XG5cbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGluamVjdG9yOiBJbmplY3RvcikgeyB9XG5cblxuICBpbml0aWFsaXplUHJvdmlkZXIodGFibGU6IE9UYWJsZUNvbXBvbmVudCkge1xuICAgIHRoaXMudGFibGUgPSB0YWJsZTtcbiAgICAvLyBUYWJsZSBjb2x1bW5zXG4gICAgY29uc3QgdGFibGVPcHRpb25zID0gdGhpcy50YWJsZS5vVGFibGVPcHRpb25zO1xuICAgIHRoaXMuY29sc05vdEluY2x1ZGVkID0gdGhpcy50YWJsZS5nZXRDb2x1bW5zTm90SW5jbHVkZWQoKVxuICAgIHRoaXMuY29sdW1ucyA9IHRhYmxlT3B0aW9ucy52aXNpYmxlQ29sdW1ucy5maWx0ZXIoYyA9PiB0aGlzLmNvbHNOb3RJbmNsdWRlZC5pbmRleE9mKGMpID09PSAtMSk7XG5cbiAgICAvLyBUYWJsZSBjb2x1bW4gbmFtZXNcbiAgICBjb25zdCB0YWJsZUNvbHVtbk5hbWVzID0gdGFibGVPcHRpb25zLnZpc2libGVDb2x1bW5zLmZpbHRlcihjID0+IHRoaXMuY29sc05vdEluY2x1ZGVkLmluZGV4T2YoYykgPT09IC0xKTtcbiAgICB0aGlzLmNvbHVtbk5hbWVzID0gdGhpcy50YWJsZS5nZXRDb2x1bW5OYW1lcyh0YWJsZUNvbHVtbk5hbWVzKTtcblxuICAgIC8vIFRhYmxlIGNvbHVtbiBzcWxUeXBlc1xuICAgIHRoaXMuc3FsVHlwZXMgPSB0aGlzLnRhYmxlLmdldFNxbFR5cGVzKCk7XG5cbiAgICAvLyBUYWJsZSBlbnRpdHlcbiAgICB0aGlzLmVudGl0eSA9IHRoaXMudGFibGUuZW50aXR5O1xuXG4gICAgLy8gVGFibGUgc2VydmljZVxuICAgIHRoaXMuc2VydmljZSA9IHRoaXMudGFibGUuc2VydmljZTtcblxuICAgIC8vIFRhYmxlIGZpbHRlclxuICAgIHRoaXMuZmlsdGVyID0gdGhpcy50YWJsZS5nZXRDb21wb25lbnRGaWx0ZXIoKTtcbiAgfVxuXG5cbn0iXX0=