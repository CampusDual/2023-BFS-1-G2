import { Injectable, Injector } from '@angular/core';
import { Util } from '../../util';
import { LocalStorageService } from '../local-storage.service';
import { DefaultComponentStateClass, DefaultServiceComponentStateClass } from './o-component-state.class';
export class AbstractComponentStateService {
    constructor(injector) {
        this.injector = injector;
        this.localStorageService = injector.get(LocalStorageService);
    }
    initialize(comp) {
        this.component = comp;
        if (Util.isDefined(this.state)) {
            this.initializeState(this.state);
        }
    }
    initializeState(state) {
        if (Util.isDefined(this.state) &&
            ((Util.isDefined(this.component.storeState) && this.component.storeState
                ||
                    !Util.isDefined(this.component.storeState)))) {
            state.setData(this.localStorageService.getComponentStorage(this.component, this.component.getRouteKey()));
        }
    }
}
AbstractComponentStateService.decorators = [
    { type: Injectable }
];
AbstractComponentStateService.ctorParameters = () => [
    { type: Injector }
];
export class DefaultComponentStateService extends AbstractComponentStateService {
    initialize(comp) {
        this.state = new DefaultComponentStateClass();
        super.initialize(comp);
    }
}
DefaultComponentStateService.decorators = [
    { type: Injectable }
];
export class DefaultServiceComponentStateService extends AbstractComponentStateService {
    initialize(comp) {
        this.state = new DefaultServiceComponentStateClass();
        super.initialize(comp);
    }
}
DefaultServiceComponentStateService.decorators = [
    { type: Injectable }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiby1jb21wb25lbnQtc3RhdGUuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL29udGltaXplLXdlYi1uZ3gvIiwic291cmNlcyI6WyJsaWIvc2VydmljZXMvc3RhdGUvby1jb21wb25lbnQtc3RhdGUuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUdyRCxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ2xDLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQy9ELE9BQU8sRUFBK0IsMEJBQTBCLEVBQUUsaUNBQWlDLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUd2SSxNQUFNLE9BQWdCLDZCQUE2QjtJQU9qRCxZQUFzQixRQUFrQjtRQUFsQixhQUFRLEdBQVIsUUFBUSxDQUFVO1FBQ3RDLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxRQUFRLENBQUMsR0FBRyxDQUFzQixtQkFBbUIsQ0FBQyxDQUFDO0lBQ3BGLENBQUM7SUFFTSxVQUFVLENBQUMsSUFBTztRQUN2QixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztRQUN0QixJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQzlCLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQ2xDO0lBQ0gsQ0FBQztJQUVNLGVBQWUsQ0FBQyxLQUFRO1FBQzdCLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO1lBQzVCLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFVOztvQkFFdEUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxFQUM5QztZQUNBLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDLENBQUM7U0FDM0c7SUFDSCxDQUFDOzs7WUEzQkYsVUFBVTs7O1lBUFUsUUFBUTs7QUFzQzdCLE1BQU0sT0FBTyw0QkFBNkIsU0FBUSw2QkFBaUY7SUFFakksVUFBVSxDQUFDLElBQTRCO1FBQ3JDLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSwwQkFBMEIsRUFBRSxDQUFDO1FBQzlDLEtBQUssQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDekIsQ0FBQzs7O1lBTkYsVUFBVTs7QUFVWCxNQUFNLE9BQU8sbUNBQW9DLFNBQVEsNkJBQXdGO0lBRS9JLFVBQVUsQ0FBQyxJQUE0QjtRQUNyQyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksaUNBQWlDLEVBQUUsQ0FBQztRQUNyRCxLQUFLLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3pCLENBQUM7OztZQU5GLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBJbmplY3RvciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBJTG9jYWxTdG9yYWdlQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlcy9sb2NhbC1zdG9yYWdlLWNvbXBvbmVudC5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgVXRpbCB9IGZyb20gJy4uLy4uL3V0aWwnO1xuaW1wb3J0IHsgTG9jYWxTdG9yYWdlU2VydmljZSB9IGZyb20gJy4uL2xvY2FsLXN0b3JhZ2Uuc2VydmljZSc7XG5pbXBvcnQgeyBBYnN0cmFjdENvbXBvbmVudFN0YXRlQ2xhc3MsIERlZmF1bHRDb21wb25lbnRTdGF0ZUNsYXNzLCBEZWZhdWx0U2VydmljZUNvbXBvbmVudFN0YXRlQ2xhc3MgfSBmcm9tICcuL28tY29tcG9uZW50LXN0YXRlLmNsYXNzJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEFic3RyYWN0Q29tcG9uZW50U3RhdGVTZXJ2aWNlPFMgZXh0ZW5kcyBBYnN0cmFjdENvbXBvbmVudFN0YXRlQ2xhc3MsIEMgZXh0ZW5kcyBJTG9jYWxTdG9yYWdlQ29tcG9uZW50ID0gYW55PntcblxuICBwcm90ZWN0ZWQgbG9jYWxTdG9yYWdlU2VydmljZTogTG9jYWxTdG9yYWdlU2VydmljZTtcblxuICBwcm90ZWN0ZWQgY29tcG9uZW50OiBDO1xuICBwdWJsaWMgc3RhdGU6IFM7XG5cbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGluamVjdG9yOiBJbmplY3Rvcikge1xuICAgIHRoaXMubG9jYWxTdG9yYWdlU2VydmljZSA9IGluamVjdG9yLmdldDxMb2NhbFN0b3JhZ2VTZXJ2aWNlPihMb2NhbFN0b3JhZ2VTZXJ2aWNlKTtcbiAgfVxuXG4gIHB1YmxpYyBpbml0aWFsaXplKGNvbXA6IEMpIHtcbiAgICB0aGlzLmNvbXBvbmVudCA9IGNvbXA7XG4gICAgaWYgKFV0aWwuaXNEZWZpbmVkKHRoaXMuc3RhdGUpKSB7XG4gICAgICB0aGlzLmluaXRpYWxpemVTdGF0ZSh0aGlzLnN0YXRlKTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgaW5pdGlhbGl6ZVN0YXRlKHN0YXRlOiBTKSB7XG4gICAgaWYgKFV0aWwuaXNEZWZpbmVkKHRoaXMuc3RhdGUpICYmXG4gICAgICAoKFV0aWwuaXNEZWZpbmVkKHRoaXMuY29tcG9uZW50LnN0b3JlU3RhdGUpICYmIHRoaXMuY29tcG9uZW50LnN0b3JlU3RhdGVcbiAgICAgICAgfHxcbiAgICAgICAgIVV0aWwuaXNEZWZpbmVkKHRoaXMuY29tcG9uZW50LnN0b3JlU3RhdGUpKSlcbiAgICApIHtcbiAgICAgIHN0YXRlLnNldERhdGEodGhpcy5sb2NhbFN0b3JhZ2VTZXJ2aWNlLmdldENvbXBvbmVudFN0b3JhZ2UodGhpcy5jb21wb25lbnQsIHRoaXMuY29tcG9uZW50LmdldFJvdXRlS2V5KCkpKTtcbiAgICB9XG4gIH1cbn1cblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIERlZmF1bHRDb21wb25lbnRTdGF0ZVNlcnZpY2UgZXh0ZW5kcyBBYnN0cmFjdENvbXBvbmVudFN0YXRlU2VydmljZTxEZWZhdWx0Q29tcG9uZW50U3RhdGVDbGFzcywgSUxvY2FsU3RvcmFnZUNvbXBvbmVudD4ge1xuXG4gIGluaXRpYWxpemUoY29tcDogSUxvY2FsU3RvcmFnZUNvbXBvbmVudCkge1xuICAgIHRoaXMuc3RhdGUgPSBuZXcgRGVmYXVsdENvbXBvbmVudFN0YXRlQ2xhc3MoKTtcbiAgICBzdXBlci5pbml0aWFsaXplKGNvbXApO1xuICB9XG59XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBEZWZhdWx0U2VydmljZUNvbXBvbmVudFN0YXRlU2VydmljZSBleHRlbmRzIEFic3RyYWN0Q29tcG9uZW50U3RhdGVTZXJ2aWNlPERlZmF1bHRTZXJ2aWNlQ29tcG9uZW50U3RhdGVDbGFzcywgSUxvY2FsU3RvcmFnZUNvbXBvbmVudD4ge1xuXG4gIGluaXRpYWxpemUoY29tcDogSUxvY2FsU3RvcmFnZUNvbXBvbmVudCkge1xuICAgIHRoaXMuc3RhdGUgPSBuZXcgRGVmYXVsdFNlcnZpY2VDb21wb25lbnRTdGF0ZUNsYXNzKCk7XG4gICAgc3VwZXIuaW5pdGlhbGl6ZShjb21wKTtcbiAgfVxufVxuIl19