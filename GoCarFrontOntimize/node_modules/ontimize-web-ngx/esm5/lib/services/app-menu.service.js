import { Injectable, Injector } from '@angular/core';
import { NavigationEnd, Router } from '@angular/router';
import { Subject } from 'rxjs';
import { AppConfig } from '../config/app-config';
import { Codes } from '../util/codes';
import { Util } from '../util/util';
import * as i0 from "@angular/core";
var AppMenuService = (function () {
    function AppMenuService(injector) {
        var _this = this;
        this.injector = injector;
        this.onClick = new Subject();
        this._config = this.injector.get(AppConfig);
        this.MENU_ROOTS = this._config.getMenuConfiguration();
        this.router = this.injector.get(Router);
        this.router.events.subscribe(function (event) {
            if (event instanceof NavigationEnd) {
                _this.setActiveItem();
            }
        });
        this.ALL_MENU_ITEMS = [];
        for (var i = 0, len = this.MENU_ROOTS.length; i < len; i++) {
            var item = this.MENU_ROOTS[i];
            this.ALL_MENU_ITEMS = this.ALL_MENU_ITEMS.concat(this.getMenuItems(item));
        }
    }
    AppMenuService.prototype.getMenuRoots = function () {
        return this.MENU_ROOTS;
    };
    AppMenuService.prototype.getMenuRootById = function (id) {
        return this.MENU_ROOTS.find(function (c) { return c.id === id; });
    };
    AppMenuService.prototype.getAllMenuItems = function () {
        return this.ALL_MENU_ITEMS;
    };
    AppMenuService.prototype.getMenuItemById = function (id) {
        return this.ALL_MENU_ITEMS.find(function (i) { return i.id === id; });
    };
    AppMenuService.prototype.getMenuItemType = function (item) {
        var type;
        switch (true) {
            case (item.route === Codes.LOGIN_ROUTE):
                type = 'logout';
                break;
            case (item.action !== undefined):
                type = 'action';
                break;
            case (item.locale !== undefined):
                type = 'locale';
                break;
            case (item.user !== undefined):
                type = 'user-info';
                break;
            case (item.items !== undefined):
                type = 'group';
                break;
            default:
                type = 'default';
                break;
        }
        return type;
    };
    AppMenuService.prototype.isMenuGroup = function (item) {
        return this.getMenuItemType(item) === 'group';
    };
    AppMenuService.prototype.isMenuGroupRoute = function (item) {
        return this.getMenuItemType(item) === 'group' && item.hasOwnProperty('route');
    };
    AppMenuService.prototype.isItemActive = function (item) {
        return this.activeItem && this.activeItem.route === item.route;
    };
    AppMenuService.prototype.isRouteItem = function (item) {
        return Util.isDefined(item.route);
    };
    AppMenuService.prototype.getMenuItems = function (item) {
        var menuGroup = item;
        var items = menuGroup.items;
        if (items !== undefined) {
            if (this.isMenuGroupRoute(menuGroup)) {
                return [item].concat(items);
            }
            return items;
        }
        return [item];
    };
    AppMenuService.prototype.setActiveItem = function () {
        var _this = this;
        var activeItem;
        var routeItems = this.ALL_MENU_ITEMS.filter(function (item) { return _this.isRouteItem(item); });
        var pathMatchFullItems = routeItems.filter(function (item) { return item.pathMatch === 'full'; });
        if (pathMatchFullItems.length > 0) {
            activeItem = pathMatchFullItems.find(function (item) { return item.route === _this.router.url; });
        }
        if (!activeItem) {
            activeItem = routeItems.find(function (item) { return _this.router.url.startsWith(item.route); });
        }
        this.activeItem = activeItem;
    };
    AppMenuService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    AppMenuService.ctorParameters = function () { return [
        { type: Injector }
    ]; };
    AppMenuService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function AppMenuService_Factory() { return new AppMenuService(i0.ɵɵinject(i0.INJECTOR)); }, token: AppMenuService, providedIn: "root" });
    return AppMenuService;
}());
export { AppMenuService };
//# sourceMappingURL=data:application/json;base64,