import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, Component, Inject, Injector } from '@angular/core';
import { FormControl, FormGroup, Validators } from '@angular/forms';
import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';
import { OTableBaseDialogClass } from '../../../../components/table/extensions/dialog/o-table-base-dialog.class';
var OStoreFilterDialogComponent = (function (_super) {
    tslib_1.__extends(OStoreFilterDialogComponent, _super);
    function OStoreFilterDialogComponent(dialogRef, injector, data) {
        var _this = _super.call(this, injector) || this;
        _this.dialogRef = dialogRef;
        _this.injector = injector;
        _this.filterNames = [];
        _this.formGroup = new FormGroup({
            name: new FormControl('', [
                Validators.required,
                _this.filterNameValidator.bind(_this)
            ]),
            description: new FormControl('')
        });
        _this.setFormControl(_this.formGroup.get('name'));
        _this.loadFilterNames(data);
        return _this;
    }
    OStoreFilterDialogComponent.prototype.loadFilterNames = function (filterNames) {
        this.filterNames = filterNames;
    };
    OStoreFilterDialogComponent.prototype.getFilterAttributes = function () {
        return this.formGroup.value;
    };
    OStoreFilterDialogComponent.prototype.filterNameValidator = function (control) {
        var ctrlValue = control.value;
        if (this.filterNames.indexOf(ctrlValue) !== -1) {
            return { filterNameAlreadyExists: true };
        }
        return {};
    };
    OStoreFilterDialogComponent.decorators = [
        { type: Component, args: [{
                    selector: 'o-store-filter-dialog',
                    template: "<span mat-dialog-title>{{ 'TABLE.BUTTONS.SAVE_FILTER' | oTranslate }}</span>\n\n<mat-dialog-content>\n  <div mat-subheader>{{ 'TABLE.DIALOG.SAVE_FILTER' | oTranslate }}</div>\n  <form #form [formGroup]=\"formGroup\" fxLayout=\"column\">\n    <mat-form-field>\n      <input matInput [matTooltip]=\"tooltipText\" [matTooltipClass]=\"tooltipClass\" placeholder=\"{{ 'TABLE.DIALOG.FILTER_NAME' | oTranslate }}\"\n        formControlName=\"name\" required>\n      <mat-error *oMatError=\"hasError(formGroup.controls['name'], 'filterNameAlreadyExists')\">\n        {{ 'TABLE.DIALOG.FILTER_NAME_ALREADY_EXISTS' | oTranslate }}\n      </mat-error>\n      <mat-error *oMatError=\"hasError(formGroup.controls['name'], 'required')\">\n        {{ 'FORM_VALIDATION.REQUIRED' | oTranslate }}\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field class=\"example-full-width\">\n      <textarea matInput placeholder=\"{{ 'TABLE.DIALOG.FILTER_DESCRIPTION' | oTranslate }}\" formControlName=\"description\" rows=\"4\"\n        cols=\"50\"></textarea>\n    </mat-form-field>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n  <button type=\"button\" mat-stroked-button [mat-dialog-close]=\"false\" class=\"o-button-default cancel\">{{ 'CANCEL' | oTranslate }}</button>\n  <button type=\"button\" mat-stroked-button [mat-dialog-close]=\"true\" [disabled]=\"!formGroup.valid\" class=\"o-button-primary\">\n    {{'SAVE' | oTranslate }}\n  </button>\n</mat-dialog-actions>\n",
                    changeDetection: ChangeDetectionStrategy.OnPush
                }] }
    ];
    OStoreFilterDialogComponent.ctorParameters = function () { return [
        { type: MatDialogRef },
        { type: Injector },
        { type: Array, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }
    ]; };
    return OStoreFilterDialogComponent;
}(OTableBaseDialogClass));
export { OStoreFilterDialogComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiby1zdG9yZS1maWx0ZXItZGlhbG9nLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL29udGltaXplLXdlYi1uZ3gvIiwic291cmNlcyI6WyJsaWIvc2hhcmVkL2NvbXBvbmVudHMvZmlsdGVyL3N0b3JlLWZpbHRlci9vLXN0b3JlLWZpbHRlci1kaWFsb2cuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDckYsT0FBTyxFQUFFLFdBQVcsRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDcEUsT0FBTyxFQUFFLGVBQWUsRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUVsRSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwwRUFBMEUsQ0FBQztBQUdqSDtJQUtpRCx1REFBcUI7SUFXcEUscUNBQ1MsU0FBb0QsRUFDakQsUUFBa0IsRUFDSCxJQUFtQjtRQUg5QyxZQUtFLGtCQUFNLFFBQVEsQ0FBQyxTQUdoQjtRQVBRLGVBQVMsR0FBVCxTQUFTLENBQTJDO1FBQ2pELGNBQVEsR0FBUixRQUFRLENBQVU7UUFYOUIsaUJBQVcsR0FBa0IsRUFBRSxDQUFDO1FBQ2hDLGVBQVMsR0FBYyxJQUFJLFNBQVMsQ0FBQztZQUNuQyxJQUFJLEVBQUUsSUFBSSxXQUFXLENBQUMsRUFBRSxFQUFFO2dCQUN4QixVQUFVLENBQUMsUUFBUTtnQkFDbkIsS0FBSSxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxLQUFJLENBQUM7YUFDcEMsQ0FBQztZQUNGLFdBQVcsRUFBRSxJQUFJLFdBQVcsQ0FBQyxFQUFFLENBQUM7U0FDakMsQ0FBQyxDQUFDO1FBUUQsS0FBSSxDQUFDLGNBQWMsQ0FBQyxLQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBQ2hELEtBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUM7O0lBQzdCLENBQUM7SUFFRCxxREFBZSxHQUFmLFVBQWdCLFdBQVc7UUFDekIsSUFBSSxDQUFDLFdBQVcsR0FBRyxXQUFXLENBQUM7SUFDakMsQ0FBQztJQUVELHlEQUFtQixHQUFuQjtRQUNFLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUM7SUFDOUIsQ0FBQztJQUVTLHlEQUFtQixHQUE3QixVQUE4QixPQUFvQjtRQUNoRCxJQUFNLFNBQVMsR0FBVyxPQUFPLENBQUMsS0FBSyxDQUFDO1FBQ3hDLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUU7WUFDOUMsT0FBTyxFQUFFLHVCQUF1QixFQUFFLElBQUksRUFBRSxDQUFDO1NBQzFDO1FBQ0QsT0FBTyxFQUFFLENBQUM7SUFDWixDQUFDOztnQkF4Q0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSx1QkFBdUI7b0JBQ2pDLHk5Q0FBcUQ7b0JBQ3JELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNoRDs7O2dCQVR5QixZQUFZO2dCQUZlLFFBQVE7Z0JBMEIxQixLQUFLLHVCQUFuQyxNQUFNLFNBQUMsZUFBZTs7SUF1QjNCLGtDQUFDO0NBQUEsQUExQ0QsQ0FLaUQscUJBQXFCLEdBcUNyRTtTQXJDWSwyQkFBMkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBJbmplY3QsIEluamVjdG9yIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtQ29udHJvbCwgRm9ybUdyb3VwLCBWYWxpZGF0b3JzIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgTUFUX0RJQUxPR19EQVRBLCBNYXREaWFsb2dSZWYgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbCc7XG5cbmltcG9ydCB7IE9UYWJsZUJhc2VEaWFsb2dDbGFzcyB9IGZyb20gJy4uLy4uLy4uLy4uL2NvbXBvbmVudHMvdGFibGUvZXh0ZW5zaW9ucy9kaWFsb2cvby10YWJsZS1iYXNlLWRpYWxvZy5jbGFzcyc7XG5pbXBvcnQgeyBPRmlsdGVyRGVmaW5pdGlvbiB9IGZyb20gJy4uLy4uLy4uLy4uL3R5cGVzL28tZmlsdGVyLWRlZmluaXRpb24udHlwZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ28tc3RvcmUtZmlsdGVyLWRpYWxvZycsXG4gIHRlbXBsYXRlVXJsOiAnLi9vLXN0b3JlLWZpbHRlci1kaWFsb2cuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBPU3RvcmVGaWx0ZXJEaWFsb2dDb21wb25lbnQgZXh0ZW5kcyBPVGFibGVCYXNlRGlhbG9nQ2xhc3Mge1xuXG4gIGZpbHRlck5hbWVzOiBBcnJheTxzdHJpbmc+ID0gW107XG4gIGZvcm1Hcm91cDogRm9ybUdyb3VwID0gbmV3IEZvcm1Hcm91cCh7XG4gICAgbmFtZTogbmV3IEZvcm1Db250cm9sKCcnLCBbXG4gICAgICBWYWxpZGF0b3JzLnJlcXVpcmVkLFxuICAgICAgdGhpcy5maWx0ZXJOYW1lVmFsaWRhdG9yLmJpbmQodGhpcylcbiAgICBdKSxcbiAgICBkZXNjcmlwdGlvbjogbmV3IEZvcm1Db250cm9sKCcnKVxuICB9KTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgZGlhbG9nUmVmOiBNYXREaWFsb2dSZWY8T1N0b3JlRmlsdGVyRGlhbG9nQ29tcG9uZW50PixcbiAgICBwcm90ZWN0ZWQgaW5qZWN0b3I6IEluamVjdG9yLFxuICAgIEBJbmplY3QoTUFUX0RJQUxPR19EQVRBKSBkYXRhOiBBcnJheTxzdHJpbmc+XG4gICkge1xuICAgIHN1cGVyKGluamVjdG9yKTtcbiAgICB0aGlzLnNldEZvcm1Db250cm9sKHRoaXMuZm9ybUdyb3VwLmdldCgnbmFtZScpKTtcbiAgICB0aGlzLmxvYWRGaWx0ZXJOYW1lcyhkYXRhKTtcbiAgfVxuXG4gIGxvYWRGaWx0ZXJOYW1lcyhmaWx0ZXJOYW1lcyk6IHZvaWQge1xuICAgIHRoaXMuZmlsdGVyTmFtZXMgPSBmaWx0ZXJOYW1lcztcbiAgfVxuXG4gIGdldEZpbHRlckF0dHJpYnV0ZXMoKTogT0ZpbHRlckRlZmluaXRpb24ge1xuICAgIHJldHVybiB0aGlzLmZvcm1Hcm91cC52YWx1ZTtcbiAgfVxuXG4gIHByb3RlY3RlZCBmaWx0ZXJOYW1lVmFsaWRhdG9yKGNvbnRyb2w6IEZvcm1Db250cm9sKSB7XG4gICAgY29uc3QgY3RybFZhbHVlOiBzdHJpbmcgPSBjb250cm9sLnZhbHVlO1xuICAgIGlmICh0aGlzLmZpbHRlck5hbWVzLmluZGV4T2YoY3RybFZhbHVlKSAhPT0gLTEpIHtcbiAgICAgIHJldHVybiB7IGZpbHRlck5hbWVBbHJlYWR5RXhpc3RzOiB0cnVlIH07XG4gICAgfVxuICAgIHJldHVybiB7fTtcbiAgfVxuXG59XG4iXX0=