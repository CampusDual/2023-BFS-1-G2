import { Directive, Input } from '@angular/core';
import { BooleanConverter } from '../../../../decorators/input-converter';
import { OFormLayoutManagerComponent } from '../../o-form-layout-manager.component';
var OFormLayoutDialogOptionsDirective = (function () {
    function OFormLayoutDialogOptionsDirective(formLayoutManager) {
        this.formLayoutManager = formLayoutManager;
        this.width = '';
        this.height = '';
        this.class = '';
        this._closeOnNavigation = true;
        this._disableClose = true;
    }
    OFormLayoutDialogOptionsDirective.prototype.ngOnChanges = function () {
        if (this.formLayoutManager) {
            this.formLayoutManager.addDialogOptions(this.getOptions());
        }
    };
    Object.defineProperty(OFormLayoutDialogOptionsDirective.prototype, "closeOnNavigation", {
        set: function (value) {
            this._closeOnNavigation = BooleanConverter(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OFormLayoutDialogOptionsDirective.prototype, "disableClose", {
        set: function (value) {
            this._disableClose = BooleanConverter(value);
        },
        enumerable: true,
        configurable: true
    });
    OFormLayoutDialogOptionsDirective.prototype.getOptions = function () {
        var result = {
            width: this.width,
            minWidth: this.minWidth,
            maxWidth: this.maxWidth,
            height: this.height,
            minHeight: this.minHeight,
            maxHeight: this.maxHeight,
            class: this.class,
            position: this.position,
            backdropClass: this.backdropClass,
            disableClose: this._disableClose,
            closeOnNavigation: this._closeOnNavigation,
            title: this.title,
            labelColumns: this.labelColumns,
            separator: this.separator
        };
        Object.keys(result).forEach(function (key) { return result[key] == null ? delete result[key] : {}; });
        return result;
    };
    OFormLayoutDialogOptionsDirective.decorators = [
        { type: Directive, args: [{
                    selector: 'o-form-layout-dialog-options, o-form-layout-manager[mode="dialog"]'
                },] }
    ];
    OFormLayoutDialogOptionsDirective.ctorParameters = function () { return [
        { type: OFormLayoutManagerComponent }
    ]; };
    OFormLayoutDialogOptionsDirective.propDecorators = {
        width: [{ type: Input }],
        minWidth: [{ type: Input, args: ['min-width',] }],
        maxWidth: [{ type: Input, args: ['max-width',] }],
        height: [{ type: Input }],
        minHeight: [{ type: Input, args: ['min-height',] }],
        maxHeight: [{ type: Input, args: ['max-height',] }],
        class: [{ type: Input }],
        position: [{ type: Input }],
        backdropClass: [{ type: Input, args: ['backdrop-class',] }],
        closeOnNavigation: [{ type: Input, args: ['close-on-navigation',] }],
        disableClose: [{ type: Input, args: ['disable-close',] }],
        title: [{ type: Input }],
        labelColumns: [{ type: Input, args: ['label-columns',] }],
        separator: [{ type: Input }]
    };
    return OFormLayoutDialogOptionsDirective;
}());
export { OFormLayoutDialogOptionsDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiby1mb3JtLWxheW91dC1kaWFsb2ctb3B0aW9ucy5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9vbnRpbWl6ZS13ZWItbmd4LyIsInNvdXJjZXMiOlsibGliL2xheW91dHMvZm9ybS1sYXlvdXQvZGlhbG9nL29wdGlvbnMvby1mb3JtLWxheW91dC1kaWFsb2ctb3B0aW9ucy5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHakQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDMUUsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFFcEY7SUFLRSwyQ0FBc0IsaUJBQThDO1FBQTlDLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBNkI7UUFTN0QsVUFBSyxHQUFXLEVBQUUsQ0FBQztRQVNuQixXQUFNLEdBQVcsRUFBRSxDQUFDO1FBU3BCLFVBQUssR0FBc0IsRUFBRSxDQUFDO1FBUTNCLHVCQUFrQixHQUFZLElBQUksQ0FBQztRQU1uQyxrQkFBYSxHQUFZLElBQUksQ0FBQztJQXpDZ0MsQ0FBQztJQUV6RSx1REFBVyxHQUFYO1FBQ0UsSUFBSSxJQUFJLENBQUMsaUJBQWlCLEVBQUU7WUFDMUIsSUFBSSxDQUFDLGlCQUFpQixDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQyxDQUFDO1NBQzVEO0lBQ0gsQ0FBQztJQThCRCxzQkFDSSxnRUFBaUI7YUFEckIsVUFDc0IsS0FBYztZQUNsQyxJQUFJLENBQUMsa0JBQWtCLEdBQUcsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDcEQsQ0FBQzs7O09BQUE7SUFHRCxzQkFDSSwyREFBWTthQURoQixVQUNpQixLQUFjO1lBQzdCLElBQUksQ0FBQyxhQUFhLEdBQUcsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDL0MsQ0FBQzs7O09BQUE7SUFXRCxzREFBVSxHQUFWO1FBQ0UsSUFBTSxNQUFNLEdBQUc7WUFDYixLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUs7WUFDakIsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRO1lBQ3ZCLFFBQVEsRUFBRSxJQUFJLENBQUMsUUFBUTtZQUN2QixNQUFNLEVBQUUsSUFBSSxDQUFDLE1BQU07WUFDbkIsU0FBUyxFQUFFLElBQUksQ0FBQyxTQUFTO1lBQ3pCLFNBQVMsRUFBRSxJQUFJLENBQUMsU0FBUztZQUN6QixLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUs7WUFDakIsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRO1lBQ3ZCLGFBQWEsRUFBRSxJQUFJLENBQUMsYUFBYTtZQUNqQyxZQUFZLEVBQUUsSUFBSSxDQUFDLGFBQWE7WUFDaEMsaUJBQWlCLEVBQUUsSUFBSSxDQUFDLGtCQUFrQjtZQUMxQyxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUs7WUFDakIsWUFBWSxFQUFFLElBQUksQ0FBQyxZQUFZO1lBQy9CLFNBQVMsRUFBRSxJQUFJLENBQUMsU0FBUztTQUMxQixDQUFBO1FBRUQsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBQSxHQUFHLElBQUksT0FBQSxNQUFNLENBQUMsR0FBRyxDQUFDLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUE3QyxDQUE2QyxDQUFDLENBQUM7UUFDbEYsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQzs7Z0JBakZGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsb0VBQW9FO2lCQUMvRTs7O2dCQUpRLDJCQUEyQjs7O3dCQWVqQyxLQUFLOzJCQUdMLEtBQUssU0FBQyxXQUFXOzJCQUdqQixLQUFLLFNBQUMsV0FBVzt5QkFHakIsS0FBSzs0QkFHTCxLQUFLLFNBQUMsWUFBWTs0QkFHbEIsS0FBSyxTQUFDLFlBQVk7d0JBR2xCLEtBQUs7MkJBR0wsS0FBSztnQ0FHTCxLQUFLLFNBQUMsZ0JBQWdCO29DQUl0QixLQUFLLFNBQUMscUJBQXFCOytCQU0zQixLQUFLLFNBQUMsZUFBZTt3QkFLckIsS0FBSzsrQkFHTCxLQUFLLFNBQUMsZUFBZTs0QkFHckIsS0FBSzs7SUF5QlIsd0NBQUM7Q0FBQSxBQW5GRCxJQW1GQztTQWhGWSxpQ0FBaUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEaWFsb2dQb3NpdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsJztcblxuaW1wb3J0IHsgQm9vbGVhbkNvbnZlcnRlciB9IGZyb20gJy4uLy4uLy4uLy4uL2RlY29yYXRvcnMvaW5wdXQtY29udmVydGVyJztcbmltcG9ydCB7IE9Gb3JtTGF5b3V0TWFuYWdlckNvbXBvbmVudCB9IGZyb20gJy4uLy4uL28tZm9ybS1sYXlvdXQtbWFuYWdlci5jb21wb25lbnQnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdvLWZvcm0tbGF5b3V0LWRpYWxvZy1vcHRpb25zLCBvLWZvcm0tbGF5b3V0LW1hbmFnZXJbbW9kZT1cImRpYWxvZ1wiXSdcbn0pXG5leHBvcnQgY2xhc3MgT0Zvcm1MYXlvdXREaWFsb2dPcHRpb25zRGlyZWN0aXZlIHtcblxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgZm9ybUxheW91dE1hbmFnZXI6IE9Gb3JtTGF5b3V0TWFuYWdlckNvbXBvbmVudCkgeyB9XG5cbiAgbmdPbkNoYW5nZXMoKSB7XG4gICAgaWYgKHRoaXMuZm9ybUxheW91dE1hbmFnZXIpIHtcbiAgICAgIHRoaXMuZm9ybUxheW91dE1hbmFnZXIuYWRkRGlhbG9nT3B0aW9ucyh0aGlzLmdldE9wdGlvbnMoKSk7XG4gICAgfVxuICB9XG5cbiAgQElucHV0KClcbiAgcHVibGljIHdpZHRoOiBzdHJpbmcgPSAnJztcblxuICBASW5wdXQoJ21pbi13aWR0aCcpXG4gIHB1YmxpYyBtaW5XaWR0aDogbnVtYmVyIHwgc3RyaW5nO1xuXG4gIEBJbnB1dCgnbWF4LXdpZHRoJylcbiAgcHVibGljIG1heFdpZHRoOiBudW1iZXIgfCBzdHJpbmc7XG5cbiAgQElucHV0KClcbiAgcHVibGljIGhlaWdodDogc3RyaW5nID0gJyc7XG5cbiAgQElucHV0KCdtaW4taGVpZ2h0JylcbiAgcHVibGljIG1pbkhlaWdodDogbnVtYmVyIHwgc3RyaW5nO1xuXG4gIEBJbnB1dCgnbWF4LWhlaWdodCcpXG4gIHB1YmxpYyBtYXhIZWlnaHQ6IG51bWJlciB8IHN0cmluZztcblxuICBASW5wdXQoKVxuICBwdWJsaWMgY2xhc3M6IHN0cmluZyB8IHN0cmluZ1tdID0gJyc7XG5cbiAgQElucHV0KClcbiAgcHVibGljIHBvc2l0aW9uOiBEaWFsb2dQb3NpdGlvbjtcblxuICBASW5wdXQoJ2JhY2tkcm9wLWNsYXNzJylcbiAgcHVibGljIGJhY2tkcm9wQ2xhc3M6IHN0cmluZztcblxuICBwcm90ZWN0ZWQgX2Nsb3NlT25OYXZpZ2F0aW9uOiBib29sZWFuID0gdHJ1ZTtcbiAgQElucHV0KCdjbG9zZS1vbi1uYXZpZ2F0aW9uJylcbiAgc2V0IGNsb3NlT25OYXZpZ2F0aW9uKHZhbHVlOiBib29sZWFuKSB7XG4gICAgdGhpcy5fY2xvc2VPbk5hdmlnYXRpb24gPSBCb29sZWFuQ29udmVydGVyKHZhbHVlKTtcbiAgfVxuXG4gIHByb3RlY3RlZCBfZGlzYWJsZUNsb3NlOiBib29sZWFuID0gdHJ1ZTtcbiAgQElucHV0KCdkaXNhYmxlLWNsb3NlJylcbiAgc2V0IGRpc2FibGVDbG9zZSh2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX2Rpc2FibGVDbG9zZSA9IEJvb2xlYW5Db252ZXJ0ZXIodmFsdWUpO1xuICB9XG5cbiAgQElucHV0KClcbiAgcHVibGljIHRpdGxlOiBzdHJpbmc7XG5cbiAgQElucHV0KCdsYWJlbC1jb2x1bW5zJylcbiAgcHVibGljIGxhYmVsQ29sdW1uczogc3RyaW5nO1xuXG4gIEBJbnB1dCgpXG4gIHB1YmxpYyBzZXBhcmF0b3I6IHN0cmluZztcblxuICBnZXRPcHRpb25zKCkge1xuICAgIGNvbnN0IHJlc3VsdCA9IHtcbiAgICAgIHdpZHRoOiB0aGlzLndpZHRoLFxuICAgICAgbWluV2lkdGg6IHRoaXMubWluV2lkdGgsXG4gICAgICBtYXhXaWR0aDogdGhpcy5tYXhXaWR0aCxcbiAgICAgIGhlaWdodDogdGhpcy5oZWlnaHQsXG4gICAgICBtaW5IZWlnaHQ6IHRoaXMubWluSGVpZ2h0LFxuICAgICAgbWF4SGVpZ2h0OiB0aGlzLm1heEhlaWdodCxcbiAgICAgIGNsYXNzOiB0aGlzLmNsYXNzLFxuICAgICAgcG9zaXRpb246IHRoaXMucG9zaXRpb24sXG4gICAgICBiYWNrZHJvcENsYXNzOiB0aGlzLmJhY2tkcm9wQ2xhc3MsXG4gICAgICBkaXNhYmxlQ2xvc2U6IHRoaXMuX2Rpc2FibGVDbG9zZSxcbiAgICAgIGNsb3NlT25OYXZpZ2F0aW9uOiB0aGlzLl9jbG9zZU9uTmF2aWdhdGlvbixcbiAgICAgIHRpdGxlOiB0aGlzLnRpdGxlLFxuICAgICAgbGFiZWxDb2x1bW5zOiB0aGlzLmxhYmVsQ29sdW1ucyxcbiAgICAgIHNlcGFyYXRvcjogdGhpcy5zZXBhcmF0b3JcbiAgICB9XG4gICAgLy8gRGVsZXRpbmcgdW5kZWZpbmVkIHByb3BlcnRpZXNcbiAgICBPYmplY3Qua2V5cyhyZXN1bHQpLmZvckVhY2goa2V5ID0+IHJlc3VsdFtrZXldID09IG51bGwgPyBkZWxldGUgcmVzdWx0W2tleV0gOiB7fSk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG59XG4iXX0=