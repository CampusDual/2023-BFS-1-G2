import * as tslib_1 from "tslib";
import { ContentChildren, Directive } from "@angular/core";
import { InputConverter } from "../../../decorators";
import { OUserInfoConfigurationItemDirective } from "../user-info-configuration-item/o-user-info-configuration-item.directive";
export var DEFAULT_INPUTS_O_USER_INFO_MENU = [
    'showProfile: show-profile',
    'showSettings: show-settings',
    'showLogout: show-logout',
];
export var DEFAULT_OUTPUTS_O_USER_INFO_MENU = [];
var OUserInfoConfigurationDirective = (function () {
    function OUserInfoConfigurationDirective() {
        this.showProfile = false;
        this.showSettings = true;
        this.showLogout = true;
    }
    OUserInfoConfigurationDirective.decorators = [
        { type: Directive, args: [{
                    selector: 'o-user-info-configuration',
                    inputs: DEFAULT_INPUTS_O_USER_INFO_MENU,
                    outputs: DEFAULT_OUTPUTS_O_USER_INFO_MENU
                },] }
    ];
    OUserInfoConfigurationDirective.ctorParameters = function () { return []; };
    OUserInfoConfigurationDirective.propDecorators = {
        userInfoConfigurationItems: [{ type: ContentChildren, args: [OUserInfoConfigurationItemDirective,] }]
    };
    tslib_1.__decorate([
        InputConverter(),
        tslib_1.__metadata("design:type", Boolean)
    ], OUserInfoConfigurationDirective.prototype, "showProfile", void 0);
    tslib_1.__decorate([
        InputConverter(),
        tslib_1.__metadata("design:type", Boolean)
    ], OUserInfoConfigurationDirective.prototype, "showSettings", void 0);
    tslib_1.__decorate([
        InputConverter(),
        tslib_1.__metadata("design:type", Boolean)
    ], OUserInfoConfigurationDirective.prototype, "showLogout", void 0);
    return OUserInfoConfigurationDirective;
}());
export { OUserInfoConfigurationDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiby11c2VyLWluZm8tY29uZmlndXJhdGlvbi5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9vbnRpbWl6ZS13ZWItbmd4LyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdXNlci1pbmZvL3VzZXItaW5mby1jb25maWd1cmF0aW9uL28tdXNlci1pbmZvLWNvbmZpZ3VyYXRpb24uZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsZUFBZSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDckQsT0FBTyxFQUFFLG1DQUFtQyxFQUFFLE1BQU0sMEVBQTBFLENBQUM7QUFFL0gsTUFBTSxDQUFDLElBQU0sK0JBQStCLEdBQUc7SUFDN0MsMkJBQTJCO0lBQzNCLDZCQUE2QjtJQUM3Qix5QkFBeUI7Q0FDMUIsQ0FBQztBQUVGLE1BQU0sQ0FBQyxJQUFNLGdDQUFnQyxHQUFHLEVBQy9DLENBQUM7QUFFRjtJQW1CRTtRQVJBLGdCQUFXLEdBQVksS0FBSyxDQUFDO1FBRzdCLGlCQUFZLEdBQVksSUFBSSxDQUFDO1FBRzdCLGVBQVUsR0FBWSxJQUFJLENBQUM7SUFFWCxDQUFDOztnQkFuQmxCLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsMkJBQTJCO29CQUNyQyxNQUFNLEVBQUUsK0JBQStCO29CQUN2QyxPQUFPLEVBQUUsZ0NBQWdDO2lCQUMxQzs7Ozs2Q0FJRSxlQUFlLFNBQUMsbUNBQW1DOztJQUdwRDtRQURDLGNBQWMsRUFBRTs7d0VBQ1k7SUFHN0I7UUFEQyxjQUFjLEVBQUU7O3lFQUNZO0lBRzdCO1FBREMsY0FBYyxFQUFFOzt1RUFDVTtJQUk3QixzQ0FBQztDQUFBLEFBckJELElBcUJDO1NBaEJZLCtCQUErQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbnRlbnRDaGlsZHJlbiwgRGlyZWN0aXZlIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IElucHV0Q29udmVydGVyIH0gZnJvbSBcIi4uLy4uLy4uL2RlY29yYXRvcnNcIjtcbmltcG9ydCB7IE9Vc2VySW5mb0NvbmZpZ3VyYXRpb25JdGVtRGlyZWN0aXZlIH0gZnJvbSBcIi4uL3VzZXItaW5mby1jb25maWd1cmF0aW9uLWl0ZW0vby11c2VyLWluZm8tY29uZmlndXJhdGlvbi1pdGVtLmRpcmVjdGl2ZVwiO1xuXG5leHBvcnQgY29uc3QgREVGQVVMVF9JTlBVVFNfT19VU0VSX0lORk9fTUVOVSA9IFtcbiAgJ3Nob3dQcm9maWxlOiBzaG93LXByb2ZpbGUnLFxuICAnc2hvd1NldHRpbmdzOiBzaG93LXNldHRpbmdzJyxcbiAgJ3Nob3dMb2dvdXQ6IHNob3ctbG9nb3V0Jyxcbl07XG5cbmV4cG9ydCBjb25zdCBERUZBVUxUX09VVFBVVFNfT19VU0VSX0lORk9fTUVOVSA9IFtcbl07XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ28tdXNlci1pbmZvLWNvbmZpZ3VyYXRpb24nLFxuICBpbnB1dHM6IERFRkFVTFRfSU5QVVRTX09fVVNFUl9JTkZPX01FTlUsXG4gIG91dHB1dHM6IERFRkFVTFRfT1VUUFVUU19PX1VTRVJfSU5GT19NRU5VXG59KVxuZXhwb3J0IGNsYXNzIE9Vc2VySW5mb0NvbmZpZ3VyYXRpb25EaXJlY3RpdmUge1xuXG5cbiAgQENvbnRlbnRDaGlsZHJlbihPVXNlckluZm9Db25maWd1cmF0aW9uSXRlbURpcmVjdGl2ZSkgdXNlckluZm9Db25maWd1cmF0aW9uSXRlbXM6IEFycmF5PE9Vc2VySW5mb0NvbmZpZ3VyYXRpb25JdGVtRGlyZWN0aXZlPjtcblxuICBASW5wdXRDb252ZXJ0ZXIoKVxuICBzaG93UHJvZmlsZTogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIEBJbnB1dENvbnZlcnRlcigpXG4gIHNob3dTZXR0aW5nczogYm9vbGVhbiA9IHRydWU7XG5cbiAgQElucHV0Q29udmVydGVyKClcbiAgc2hvd0xvZ291dDogYm9vbGVhbiA9IHRydWU7XG5cbiAgY29uc3RydWN0b3IoKSB7IH1cblxufVxuIl19