import { Injectable } from '@angular/core';
var OFormMessageService = (function () {
    function OFormMessageService() {
    }
    OFormMessageService.prototype.getQueryErrorMessage = function () {
        return 'MESSAGES.ERROR_QUERY';
    };
    OFormMessageService.prototype.getUpdateSuccessMessage = function () {
        return 'MESSAGES.SAVED';
    };
    OFormMessageService.prototype.getUpdateErrorMessage = function () {
        return 'MESSAGES.ERROR_UPDATE';
    };
    OFormMessageService.prototype.getDeleteSuccessMessage = function () {
        return 'MESSAGES.DELETED';
    };
    OFormMessageService.prototype.getDeleteErrorMessage = function () {
        return 'MESSAGES.ERROR_DELETE';
    };
    OFormMessageService.prototype.getDeleteConfirmationMessage = function () {
        return 'MESSAGES.CONFIRM_DELETE';
    };
    OFormMessageService.prototype.getDeleteConfirmationDialogTitle = function () {
        return 'CONFIRM';
    };
    OFormMessageService.prototype.getInsertSuccessMessage = function () {
        return 'MESSAGES.INSERTED';
    };
    OFormMessageService.prototype.getInsertErrorMessage = function () {
        return 'MESSAGES.ERROR_INSERT';
    };
    OFormMessageService.prototype.getValidationError = function () {
        return 'MESSAGES.FORM_VALIDATION_ERROR';
    };
    OFormMessageService.prototype.getValidationErrorDialogTitle = function () {
        return 'ERROR';
    };
    OFormMessageService.prototype.getNothingToUpdateMessage = function () {
        return 'MESSAGES.FORM_NOTHING_TO_UPDATE_INFO';
    };
    OFormMessageService.prototype.getActionPermissionNotEnabledMessage = function () {
        return 'MESSAGES.OPERATION_NOT_ALLOWED_PERMISSION';
    };
    OFormMessageService.prototype.getDiscardChangesConfirmationMessage = function () {
        return 'MESSAGES.FORM_CHANGES_WILL_BE_LOST';
    };
    OFormMessageService.prototype.getDiscardChangesConfirmationDialogTitle = function () {
        return 'CONFIRM';
    };
    OFormMessageService.decorators = [
        { type: Injectable }
    ];
    return OFormMessageService;
}());
export { OFormMessageService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiby1mb3JtLW1lc3NhZ2Uuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL29udGltaXplLXdlYi1uZ3gvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9mb3JtL3NlcnZpY2VzL28tZm9ybS1tZXNzYWdlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzQztJQUFBO0lBK0RBLENBQUM7SUE1REMsa0RBQW9CLEdBQXBCO1FBQ0UsT0FBTyxzQkFBc0IsQ0FBQztJQUNoQyxDQUFDO0lBRUQscURBQXVCLEdBQXZCO1FBQ0UsT0FBTyxnQkFBZ0IsQ0FBQztJQUMxQixDQUFDO0lBRUQsbURBQXFCLEdBQXJCO1FBQ0UsT0FBTyx1QkFBdUIsQ0FBQztJQUNqQyxDQUFDO0lBRUQscURBQXVCLEdBQXZCO1FBQ0UsT0FBTyxrQkFBa0IsQ0FBQztJQUM1QixDQUFDO0lBRUQsbURBQXFCLEdBQXJCO1FBQ0UsT0FBTyx1QkFBdUIsQ0FBQztJQUNqQyxDQUFDO0lBRUQsMERBQTRCLEdBQTVCO1FBQ0UsT0FBTyx5QkFBeUIsQ0FBQztJQUNuQyxDQUFDO0lBRUQsOERBQWdDLEdBQWhDO1FBQ0UsT0FBTyxTQUFTLENBQUM7SUFDbkIsQ0FBQztJQUVELHFEQUF1QixHQUF2QjtRQUNFLE9BQU8sbUJBQW1CLENBQUM7SUFDN0IsQ0FBQztJQUVELG1EQUFxQixHQUFyQjtRQUNFLE9BQU8sdUJBQXVCLENBQUM7SUFDakMsQ0FBQztJQUVELGdEQUFrQixHQUFsQjtRQUNFLE9BQU8sZ0NBQWdDLENBQUM7SUFDMUMsQ0FBQztJQUVELDJEQUE2QixHQUE3QjtRQUNFLE9BQU8sT0FBTyxDQUFDO0lBQ2pCLENBQUM7SUFFRCx1REFBeUIsR0FBekI7UUFDRSxPQUFPLHNDQUFzQyxDQUFDO0lBQ2hELENBQUM7SUFFRCxrRUFBb0MsR0FBcEM7UUFDRSxPQUFPLDJDQUEyQyxDQUFDO0lBQ3JELENBQUM7SUFFRCxrRUFBb0MsR0FBcEM7UUFDRSxPQUFPLG9DQUFvQyxDQUFDO0lBQzlDLENBQUM7SUFFRCxzRUFBd0MsR0FBeEM7UUFDRSxPQUFPLFNBQVMsQ0FBQztJQUNuQixDQUFDOztnQkE3REYsVUFBVTs7SUErRFgsMEJBQUM7Q0FBQSxBQS9ERCxJQStEQztTQTlEWSxtQkFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBPRm9ybU1lc3NhZ2VTZXJ2aWNlIHtcblxuICBnZXRRdWVyeUVycm9yTWVzc2FnZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiAnTUVTU0FHRVMuRVJST1JfUVVFUlknO1xuICB9XG5cbiAgZ2V0VXBkYXRlU3VjY2Vzc01lc3NhZ2UoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gJ01FU1NBR0VTLlNBVkVEJztcbiAgfVxuXG4gIGdldFVwZGF0ZUVycm9yTWVzc2FnZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiAnTUVTU0FHRVMuRVJST1JfVVBEQVRFJztcbiAgfVxuXG4gIGdldERlbGV0ZVN1Y2Nlc3NNZXNzYWdlKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuICdNRVNTQUdFUy5ERUxFVEVEJztcbiAgfVxuXG4gIGdldERlbGV0ZUVycm9yTWVzc2FnZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiAnTUVTU0FHRVMuRVJST1JfREVMRVRFJztcbiAgfVxuXG4gIGdldERlbGV0ZUNvbmZpcm1hdGlvbk1lc3NhZ2UoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gJ01FU1NBR0VTLkNPTkZJUk1fREVMRVRFJztcbiAgfVxuXG4gIGdldERlbGV0ZUNvbmZpcm1hdGlvbkRpYWxvZ1RpdGxlKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuICdDT05GSVJNJztcbiAgfVxuICBcbiAgZ2V0SW5zZXJ0U3VjY2Vzc01lc3NhZ2UoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gJ01FU1NBR0VTLklOU0VSVEVEJztcbiAgfVxuXG4gIGdldEluc2VydEVycm9yTWVzc2FnZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiAnTUVTU0FHRVMuRVJST1JfSU5TRVJUJztcbiAgfVxuXG4gIGdldFZhbGlkYXRpb25FcnJvcigpOiBzdHJpbmcge1xuICAgIHJldHVybiAnTUVTU0FHRVMuRk9STV9WQUxJREFUSU9OX0VSUk9SJztcbiAgfVxuXG4gIGdldFZhbGlkYXRpb25FcnJvckRpYWxvZ1RpdGxlKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuICdFUlJPUic7XG4gIH1cblxuICBnZXROb3RoaW5nVG9VcGRhdGVNZXNzYWdlKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuICdNRVNTQUdFUy5GT1JNX05PVEhJTkdfVE9fVVBEQVRFX0lORk8nO1xuICB9XG5cbiAgZ2V0QWN0aW9uUGVybWlzc2lvbk5vdEVuYWJsZWRNZXNzYWdlKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuICdNRVNTQUdFUy5PUEVSQVRJT05fTk9UX0FMTE9XRURfUEVSTUlTU0lPTic7XG4gIH1cblxuICBnZXREaXNjYXJkQ2hhbmdlc0NvbmZpcm1hdGlvbk1lc3NhZ2UoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gJ01FU1NBR0VTLkZPUk1fQ0hBTkdFU19XSUxMX0JFX0xPU1QnO1xuICB9XG5cbiAgZ2V0RGlzY2FyZENoYW5nZXNDb25maXJtYXRpb25EaWFsb2dUaXRsZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiAnQ09ORklSTSc7XG4gIH1cblxufVxuIl19