import * as tslib_1 from "tslib";
import { Component, ElementRef, forwardRef, Inject, Injector, Optional, ViewEncapsulation } from '@angular/core';
import { OFormComponent } from '../../form/o-form.component';
import { DEFAULT_INPUTS_O_FORM_DATA_COMPONENT, DEFAULT_OUTPUTS_O_FORM_DATA_COMPONENT } from '../../o-form-data-component.class';
import { DEFAULT_INPUTS_O_BOOLEAN_FORM_DATA, OBooleanFormDataComponent } from '../o-boolean-form-data-component.class';
export var DEFAULT_INPUTS_O_CHECKBOX = tslib_1.__spread([
    'color',
    'labelPosition: label-position'
], DEFAULT_INPUTS_O_BOOLEAN_FORM_DATA, DEFAULT_INPUTS_O_FORM_DATA_COMPONENT);
export var DEFAULT_OUTPUTS_O_CHECKBOX = tslib_1.__spread(DEFAULT_OUTPUTS_O_FORM_DATA_COMPONENT);
var OCheckboxComponent = (function (_super) {
    tslib_1.__extends(OCheckboxComponent, _super);
    function OCheckboxComponent(form, elRef, injector) {
        var _this = _super.call(this, form, elRef, injector) || this;
        _this.labelPosition = 'after';
        return _this;
    }
    OCheckboxComponent.prototype.initialize = function () {
        _super.prototype.initialize.call(this);
        var checkboxCtx = this;
        this.getFormControl().getValue = function () {
            return this.value ? checkboxCtx.trueValue : checkboxCtx.falseValue;
        };
    };
    OCheckboxComponent.decorators = [
        { type: Component, args: [{
                    selector: 'o-checkbox',
                    inputs: DEFAULT_INPUTS_O_CHECKBOX,
                    outputs: DEFAULT_OUTPUTS_O_CHECKBOX,
                    template: "<div [class.custom-width]=\"hasCustomWidth\" [formGroup]=\"getFormGroup()\" class=\"relative\" [matTooltip]=\"tooltip\"\n  [matTooltipClass]=\"tooltipClass\" [matTooltipPosition]=\"tooltipPosition\" [matTooltipShowDelay]=\"tooltipShowDelay\"\n  [matTooltipHideDelay]=\"tooltipHideDelay\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFill>\n  <mat-checkbox [id]=\"getAttribute()\" [formControlName]=\"getAttribute()\" (change)=\"onChangeEvent($event)\"\n    [labelPosition]=\"labelPosition\" [color]=\"color\">\n    {{ olabel | oTranslate }}\n    <mat-error *oMatError=\"hasError('required')\">\n      {{ 'FORM_VALIDATION.REQUIRED' | oTranslate }}\n    </mat-error>\n    <mat-error *ngFor=\"let oError of getActiveOErrors()\">\n      {{ oError.text | oTranslate }}\n    </mat-error>\n  </mat-checkbox>\n  <div *ngIf=\"isReadOnly\" (click)=\"onClickBlocker($event)\" class=\"read-only-blocker\" fxFill></div>\n</div>",
                    encapsulation: ViewEncapsulation.None,
                    host: {
                        '[class.o-checkbox]': 'true'
                    },
                    styles: [".o-checkbox mat-checkbox{z-index:1}.o-checkbox .mat-checkbox-disabled .mat-checkbox-layout .mat-checkbox-label{color:rgba(0,0,0,.36)}.o-checkbox .custom-width{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.o-checkbox .read-only-blocker{z-index:2;position:absolute;top:0;left:0;right:0}"]
                }] }
    ];
    OCheckboxComponent.ctorParameters = function () { return [
        { type: OFormComponent, decorators: [{ type: Optional }, { type: Inject, args: [forwardRef(function () { return OFormComponent; }),] }] },
        { type: ElementRef },
        { type: Injector }
    ]; };
    return OCheckboxComponent;
}(OBooleanFormDataComponent));
export { OCheckboxComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiby1jaGVja2JveC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9vbnRpbWl6ZS13ZWItbmd4LyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvaW5wdXQvY2hlY2tib3gvby1jaGVja2JveC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUdqSCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDN0QsT0FBTyxFQUNMLG9DQUFvQyxFQUNwQyxxQ0FBcUMsRUFDdEMsTUFBTSxtQ0FBbUMsQ0FBQztBQUMzQyxPQUFPLEVBQUUsa0NBQWtDLEVBQUUseUJBQXlCLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUd2SCxNQUFNLENBQUMsSUFBTSx5QkFBeUI7SUFFcEMsT0FBTztJQUVQLCtCQUErQjtHQUM1QixrQ0FBa0MsRUFDbEMsb0NBQW9DLENBQ3hDLENBQUM7QUFFRixNQUFNLENBQUMsSUFBTSwwQkFBMEIsb0JBQ2xDLHFDQUFxQyxDQUN6QyxDQUFDO0FBRUY7SUFXd0MsOENBQXlCO0lBSy9ELDRCQUN3RCxJQUFvQixFQUMxRSxLQUFpQixFQUNqQixRQUFrQjtRQUhwQixZQUtFLGtCQUFNLElBQUksRUFBRSxLQUFLLEVBQUUsUUFBUSxDQUFDLFNBQzdCO1FBUk0sbUJBQWEsR0FBdUIsT0FBTyxDQUFDOztJQVFuRCxDQUFDO0lBRUQsdUNBQVUsR0FBVjtRQUNFLGlCQUFNLFVBQVUsV0FBRSxDQUFDO1FBR25CLElBQU0sV0FBVyxHQUFHLElBQUksQ0FBQztRQUN4QixJQUFJLENBQUMsY0FBYyxFQUFtQixDQUFDLFFBQVEsR0FBRztZQUNqRCxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxVQUFVLENBQUM7UUFDckUsQ0FBQyxDQUFDO0lBQ0osQ0FBQzs7Z0JBaENGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsWUFBWTtvQkFDdEIsTUFBTSxFQUFFLHlCQUF5QjtvQkFDakMsT0FBTyxFQUFFLDBCQUEwQjtvQkFDbkMsbTZCQUEwQztvQkFFMUMsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7b0JBQ3JDLElBQUksRUFBRTt3QkFDSixvQkFBb0IsRUFBRSxNQUFNO3FCQUM3Qjs7aUJBQ0Y7OztnQkEvQlEsY0FBYyx1QkFzQ2xCLFFBQVEsWUFBSSxNQUFNLFNBQUMsVUFBVSxDQUFDLGNBQU0sT0FBQSxjQUFjLEVBQWQsQ0FBYyxDQUFDO2dCQXpDcEMsVUFBVTtnQkFBc0IsUUFBUTs7SUEwRDVELHlCQUFDO0NBQUEsQUFsQ0QsQ0FXd0MseUJBQXlCLEdBdUJoRTtTQXZCWSxrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIGZvcndhcmRSZWYsIEluamVjdCwgSW5qZWN0b3IsIE9wdGlvbmFsLCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVGhlbWVQYWxldHRlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwnO1xuXG5pbXBvcnQgeyBPRm9ybUNvbXBvbmVudCB9IGZyb20gJy4uLy4uL2Zvcm0vby1mb3JtLmNvbXBvbmVudCc7XG5pbXBvcnQge1xuICBERUZBVUxUX0lOUFVUU19PX0ZPUk1fREFUQV9DT01QT05FTlQsXG4gIERFRkFVTFRfT1VUUFVUU19PX0ZPUk1fREFUQV9DT01QT05FTlRcbn0gZnJvbSAnLi4vLi4vby1mb3JtLWRhdGEtY29tcG9uZW50LmNsYXNzJztcbmltcG9ydCB7IERFRkFVTFRfSU5QVVRTX09fQk9PTEVBTl9GT1JNX0RBVEEsIE9Cb29sZWFuRm9ybURhdGFDb21wb25lbnQgfSBmcm9tICcuLi9vLWJvb2xlYW4tZm9ybS1kYXRhLWNvbXBvbmVudC5jbGFzcyc7XG5pbXBvcnQgeyBPRm9ybUNvbnRyb2wgfSBmcm9tICcuLi9vLWZvcm0tY29udHJvbC5jbGFzcyc7XG5cbmV4cG9ydCBjb25zdCBERUZBVUxUX0lOUFVUU19PX0NIRUNLQk9YID0gW1xuICAvLyBjb2xvcjogVGhlbWUgY29sb3IgcGFsZXR0ZSBmb3IgdGhlIGNvbXBvbmVudC5cbiAgJ2NvbG9yJyxcbiAgLy8gbGFiZWwtcG9zaXRpb246IFdoZXRoZXIgdGhlIGxhYmVsIHNob3VsZCBhcHBlYXIgYWZ0ZXIgb3IgYmVmb3JlIHRoZSBzbGlkZS10b2dnbGUuIERlZmF1bHRzIHRvICdhZnRlcidcbiAgJ2xhYmVsUG9zaXRpb246IGxhYmVsLXBvc2l0aW9uJyxcbiAgLi4uREVGQVVMVF9JTlBVVFNfT19CT09MRUFOX0ZPUk1fREFUQSxcbiAgLi4uREVGQVVMVF9JTlBVVFNfT19GT1JNX0RBVEFfQ09NUE9ORU5UXG5dO1xuXG5leHBvcnQgY29uc3QgREVGQVVMVF9PVVRQVVRTX09fQ0hFQ0tCT1ggPSBbXG4gIC4uLkRFRkFVTFRfT1VUUFVUU19PX0ZPUk1fREFUQV9DT01QT05FTlRcbl07XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ28tY2hlY2tib3gnLFxuICBpbnB1dHM6IERFRkFVTFRfSU5QVVRTX09fQ0hFQ0tCT1gsXG4gIG91dHB1dHM6IERFRkFVTFRfT1VUUFVUU19PX0NIRUNLQk9YLFxuICB0ZW1wbGF0ZVVybDogJy4vby1jaGVja2JveC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL28tY2hlY2tib3guY29tcG9uZW50LnNjc3MnXSxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgaG9zdDoge1xuICAgICdbY2xhc3Muby1jaGVja2JveF0nOiAndHJ1ZSdcbiAgfVxufSlcbmV4cG9ydCBjbGFzcyBPQ2hlY2tib3hDb21wb25lbnQgZXh0ZW5kcyBPQm9vbGVhbkZvcm1EYXRhQ29tcG9uZW50IHtcblxuICBwdWJsaWMgY29sb3I6IFRoZW1lUGFsZXR0ZTtcbiAgcHVibGljIGxhYmVsUG9zaXRpb246ICdiZWZvcmUnIHwgJ2FmdGVyJyA9ICdhZnRlcic7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgQE9wdGlvbmFsKCkgQEluamVjdChmb3J3YXJkUmVmKCgpID0+IE9Gb3JtQ29tcG9uZW50KSkgZm9ybTogT0Zvcm1Db21wb25lbnQsXG4gICAgZWxSZWY6IEVsZW1lbnRSZWYsXG4gICAgaW5qZWN0b3I6IEluamVjdG9yXG4gICkge1xuICAgIHN1cGVyKGZvcm0sIGVsUmVmLCBpbmplY3Rvcik7XG4gIH1cblxuICBpbml0aWFsaXplKCkge1xuICAgIHN1cGVyLmluaXRpYWxpemUoKTtcblxuICAgIC8vIE92ZXJyaWRlIEZvcm1Db250cm9sIGdldFZhbHVlIGluIG9yZGVyIHRvIHJldHVybiB0aGUgYXBwcm9wcmlhdGUgdmFsdWUgaW5zdGVhZCBvZiB0aGUgY2hlY2tib3ggaW50ZXJuYWwgYm9vbGVhbiB2YWx1ZVxuICAgIGNvbnN0IGNoZWNrYm94Q3R4ID0gdGhpcztcbiAgICAodGhpcy5nZXRGb3JtQ29udHJvbCgpIGFzIE9Gb3JtQ29udHJvbCkuZ2V0VmFsdWUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy52YWx1ZSA/IGNoZWNrYm94Q3R4LnRydWVWYWx1ZSA6IGNoZWNrYm94Q3R4LmZhbHNlVmFsdWU7XG4gICAgfTtcbiAgfVxuXG59XG4iXX0=