import * as tslib_1 from "tslib";
import { DEFAULT_INPUTS_O_COMBO_RENDERER_BOOLEAN, OComboRendererBooleanComponent } from './boolean/o-combo-renderer-boolean.component';
import { DEFAULT_INPUTS_O_COMBO_RENDERER_CURRENCY, OComboRendererCurrencyComponent } from './currency/o-combo-renderer-currency.component';
import { DEFAULT_INPUTS_O_COMBO_RENDERER_DATE, OComboRendererDateComponent } from './date/o-combo-renderer-date.component';
import { OComboRendererIconComponent } from './icon/o-combo-renderer-icon.component';
import { OComboRendererIntegerComponent } from './integer/o-combo-renderer-integer.component';
import { DEFAULT_INPUTS_O_COMBO_RENDERER_PERCENTAGE, OComboRendererPercentageComponent } from './percentage/o-combo-renderer-percentage.component';
import { OComboRendererRealComponent } from './real/o-combo-renderer-real.component';
export var O_COMBO_RENDERERS = [
    OComboRendererBooleanComponent,
    OComboRendererIntegerComponent,
    OComboRendererRealComponent,
    OComboRendererCurrencyComponent,
    OComboRendererDateComponent,
    OComboRendererPercentageComponent,
    OComboRendererIconComponent
];
export var O_COMBO_RENDERERS_INPUTS = tslib_1.__spread(DEFAULT_INPUTS_O_COMBO_RENDERER_CURRENCY, DEFAULT_INPUTS_O_COMBO_RENDERER_BOOLEAN, DEFAULT_INPUTS_O_COMBO_RENDERER_DATE, DEFAULT_INPUTS_O_COMBO_RENDERER_PERCENTAGE);
export var O_COMBO_RENDERERS_OUTPUTS = [];
export var renderersMapping = {
    integer: OComboRendererIntegerComponent,
    real: OComboRendererRealComponent,
    currency: OComboRendererCurrencyComponent,
    boolean: OComboRendererBooleanComponent,
    date: OComboRendererDateComponent,
    percentage: OComboRendererPercentageComponent,
    icon: OComboRendererIconComponent
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYm8tcmVuZGVyZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9vbnRpbWl6ZS13ZWItbmd4LyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvaW5wdXQvY29tYm8vY29tYm8tcmVuZGVyZXIvY29tYm8tcmVuZGVyZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLE9BQU8sRUFDTCx1Q0FBdUMsRUFDdkMsOEJBQThCLEVBQy9CLE1BQU0sOENBQThDLENBQUM7QUFDdEQsT0FBTyxFQUNMLHdDQUF3QyxFQUN4QywrQkFBK0IsRUFDaEMsTUFBTSxnREFBZ0QsQ0FBQztBQUN4RCxPQUFPLEVBQUUsb0NBQW9DLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUMzSCxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUNyRixPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSw4Q0FBOEMsQ0FBQztBQUM5RixPQUFPLEVBQ0wsMENBQTBDLEVBQzFDLGlDQUFpQyxFQUNsQyxNQUFNLG9EQUFvRCxDQUFDO0FBQzVELE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBRXJGLE1BQU0sQ0FBQyxJQUFNLGlCQUFpQixHQUFHO0lBQy9CLDhCQUE4QjtJQUM5Qiw4QkFBOEI7SUFDOUIsMkJBQTJCO0lBQzNCLCtCQUErQjtJQUMvQiwyQkFBMkI7SUFDM0IsaUNBQWlDO0lBQ2pDLDJCQUEyQjtDQUM1QixDQUFDO0FBRUYsTUFBTSxDQUFDLElBQU0sd0JBQXdCLG9CQUNoQyx3Q0FBd0MsRUFDeEMsdUNBQXVDLEVBQ3ZDLG9DQUFvQyxFQUNwQywwQ0FBMEMsQ0FDOUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxJQUFNLHlCQUF5QixHQUFHLEVBQ3hDLENBQUM7QUFFRixNQUFNLENBQUMsSUFBTSxnQkFBZ0IsR0FBRztJQUM5QixPQUFPLEVBQUUsOEJBQThCO0lBQ3ZDLElBQUksRUFBRSwyQkFBMkI7SUFDakMsUUFBUSxFQUFFLCtCQUErQjtJQUN6QyxPQUFPLEVBQUUsOEJBQThCO0lBQ3ZDLElBQUksRUFBRSwyQkFBMkI7SUFDakMsVUFBVSxFQUFFLGlDQUFpQztJQUM3QyxJQUFJLEVBQUUsMkJBQTJCO0NBQ2xDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgeyBERUZBVUxUX09VVFBVVFNfT19UQUJMRV9DRUxMX1JFTkRFUkVSX0FDVElPTiB9IGZyb20gJy4vYWN0aW9uL28tdGFibGUtY2VsbC1yZW5kZXJlci1hY3Rpb24uY29tcG9uZW50JztcbmltcG9ydCB7XG4gIERFRkFVTFRfSU5QVVRTX09fQ09NQk9fUkVOREVSRVJfQk9PTEVBTixcbiAgT0NvbWJvUmVuZGVyZXJCb29sZWFuQ29tcG9uZW50XG59IGZyb20gJy4vYm9vbGVhbi9vLWNvbWJvLXJlbmRlcmVyLWJvb2xlYW4uY29tcG9uZW50JztcbmltcG9ydCB7XG4gIERFRkFVTFRfSU5QVVRTX09fQ09NQk9fUkVOREVSRVJfQ1VSUkVOQ1ksXG4gIE9Db21ib1JlbmRlcmVyQ3VycmVuY3lDb21wb25lbnRcbn0gZnJvbSAnLi9jdXJyZW5jeS9vLWNvbWJvLXJlbmRlcmVyLWN1cnJlbmN5LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBERUZBVUxUX0lOUFVUU19PX0NPTUJPX1JFTkRFUkVSX0RBVEUsIE9Db21ib1JlbmRlcmVyRGF0ZUNvbXBvbmVudCB9IGZyb20gJy4vZGF0ZS9vLWNvbWJvLXJlbmRlcmVyLWRhdGUuY29tcG9uZW50JztcbmltcG9ydCB7IE9Db21ib1JlbmRlcmVySWNvbkNvbXBvbmVudCB9IGZyb20gJy4vaWNvbi9vLWNvbWJvLXJlbmRlcmVyLWljb24uY29tcG9uZW50JztcbmltcG9ydCB7IE9Db21ib1JlbmRlcmVySW50ZWdlckNvbXBvbmVudCB9IGZyb20gJy4vaW50ZWdlci9vLWNvbWJvLXJlbmRlcmVyLWludGVnZXIuY29tcG9uZW50JztcbmltcG9ydCB7XG4gIERFRkFVTFRfSU5QVVRTX09fQ09NQk9fUkVOREVSRVJfUEVSQ0VOVEFHRSxcbiAgT0NvbWJvUmVuZGVyZXJQZXJjZW50YWdlQ29tcG9uZW50XG59IGZyb20gJy4vcGVyY2VudGFnZS9vLWNvbWJvLXJlbmRlcmVyLXBlcmNlbnRhZ2UuY29tcG9uZW50JztcbmltcG9ydCB7IE9Db21ib1JlbmRlcmVyUmVhbENvbXBvbmVudCB9IGZyb20gJy4vcmVhbC9vLWNvbWJvLXJlbmRlcmVyLXJlYWwuY29tcG9uZW50JztcblxuZXhwb3J0IGNvbnN0IE9fQ09NQk9fUkVOREVSRVJTID0gW1xuICBPQ29tYm9SZW5kZXJlckJvb2xlYW5Db21wb25lbnQsXG4gIE9Db21ib1JlbmRlcmVySW50ZWdlckNvbXBvbmVudCxcbiAgT0NvbWJvUmVuZGVyZXJSZWFsQ29tcG9uZW50LFxuICBPQ29tYm9SZW5kZXJlckN1cnJlbmN5Q29tcG9uZW50LFxuICBPQ29tYm9SZW5kZXJlckRhdGVDb21wb25lbnQsXG4gIE9Db21ib1JlbmRlcmVyUGVyY2VudGFnZUNvbXBvbmVudCxcbiAgT0NvbWJvUmVuZGVyZXJJY29uQ29tcG9uZW50XG5dO1xuXG5leHBvcnQgY29uc3QgT19DT01CT19SRU5ERVJFUlNfSU5QVVRTID0gW1xuICAuLi5ERUZBVUxUX0lOUFVUU19PX0NPTUJPX1JFTkRFUkVSX0NVUlJFTkNZLCAvLyBpbmNsdWRlcyBJbnRlZ2VyIGFuZCBSZWFsXG4gIC4uLkRFRkFVTFRfSU5QVVRTX09fQ09NQk9fUkVOREVSRVJfQk9PTEVBTixcbiAgLi4uREVGQVVMVF9JTlBVVFNfT19DT01CT19SRU5ERVJFUl9EQVRFLFxuICAuLi5ERUZBVUxUX0lOUFVUU19PX0NPTUJPX1JFTkRFUkVSX1BFUkNFTlRBR0Vcbl07XG5cbmV4cG9ydCBjb25zdCBPX0NPTUJPX1JFTkRFUkVSU19PVVRQVVRTID0gW1xuXTtcblxuZXhwb3J0IGNvbnN0IHJlbmRlcmVyc01hcHBpbmcgPSB7XG4gIGludGVnZXI6IE9Db21ib1JlbmRlcmVySW50ZWdlckNvbXBvbmVudCxcbiAgcmVhbDogT0NvbWJvUmVuZGVyZXJSZWFsQ29tcG9uZW50LFxuICBjdXJyZW5jeTogT0NvbWJvUmVuZGVyZXJDdXJyZW5jeUNvbXBvbmVudCxcbiAgYm9vbGVhbjogT0NvbWJvUmVuZGVyZXJCb29sZWFuQ29tcG9uZW50LFxuICBkYXRlOiBPQ29tYm9SZW5kZXJlckRhdGVDb21wb25lbnQsXG4gIHBlcmNlbnRhZ2U6IE9Db21ib1JlbmRlcmVyUGVyY2VudGFnZUNvbXBvbmVudCxcbiAgaWNvbjogT0NvbWJvUmVuZGVyZXJJY29uQ29tcG9uZW50XG59O1xuIl19