import { Directive, HostListener, Injector } from '@angular/core';
import { Util } from '../../util/util';
export var DEFAULT_CONTEXT_MENU_DIRECTIVE_INPUTS = [
    'oContextMenu',
    'oContextMenuData'
];
var OContextMenuDirective = (function () {
    function OContextMenuDirective(injector) {
        this.injector = injector;
    }
    OContextMenuDirective.prototype.onRightClick = function (event) {
        event.preventDefault();
        event.stopPropagation();
        if (Util.isDefined(this.oContextMenu)) {
            this.oContextMenu.oContextMenuService.showContextMenu.next({
                contextMenu: this.oContextMenu,
                event: event,
                data: this.oContextMenuData
            });
        }
    };
    OContextMenuDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[oContextMenu]',
                    inputs: DEFAULT_CONTEXT_MENU_DIRECTIVE_INPUTS
                },] }
    ];
    OContextMenuDirective.ctorParameters = function () { return [
        { type: Injector }
    ]; };
    OContextMenuDirective.propDecorators = {
        onRightClick: [{ type: HostListener, args: ['contextmenu', ['$event'],] }]
    };
    return OContextMenuDirective;
}());
export { OContextMenuDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiby1jb250ZXh0LW1lbnUuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vb250aW1pemUtd2ViLW5neC8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2NvbnRleHRtZW51L28tY29udGV4dC1tZW51LmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFbEUsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBR3ZDLE1BQU0sQ0FBQyxJQUFNLHFDQUFxQyxHQUFHO0lBQ25ELGNBQWM7SUFDZCxrQkFBa0I7Q0FDbkIsQ0FBQztBQUVGO0lBU0UsK0JBQXNCLFFBQWtCO1FBQWxCLGFBQVEsR0FBUixRQUFRLENBQVU7SUFDeEMsQ0FBQztJQUdNLDRDQUFZLEdBRG5CLFVBQ29CLEtBQWlCO1FBQ25DLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN2QixLQUFLLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDeEIsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsRUFBRTtZQUNyQyxJQUFJLENBQUMsWUFBWSxDQUFDLG1CQUFtQixDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUM7Z0JBQ3pELFdBQVcsRUFBRSxJQUFJLENBQUMsWUFBWTtnQkFDOUIsS0FBSyxFQUFFLEtBQUs7Z0JBQ1osSUFBSSxFQUFFLElBQUksQ0FBQyxnQkFBZ0I7YUFDNUIsQ0FBQyxDQUFDO1NBQ0o7SUFDSCxDQUFDOztnQkF2QkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxnQkFBZ0I7b0JBQzFCLE1BQU0sRUFBRSxxQ0FBcUM7aUJBQzlDOzs7Z0JBYmlDLFFBQVE7OzsrQkFzQnZDLFlBQVksU0FBQyxhQUFhLEVBQUUsQ0FBQyxRQUFRLENBQUM7O0lBYXpDLDRCQUFDO0NBQUEsQUF6QkQsSUF5QkM7U0FyQlkscUJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBIb3N0TGlzdGVuZXIsIEluamVjdG9yIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFV0aWwgfSBmcm9tICcuLi8uLi91dGlsL3V0aWwnO1xuaW1wb3J0IHsgT0NvbnRleHRNZW51Q29tcG9uZW50IH0gZnJvbSAnLi9vLWNvbnRleHQtbWVudS5jb21wb25lbnQnO1xuXG5leHBvcnQgY29uc3QgREVGQVVMVF9DT05URVhUX01FTlVfRElSRUNUSVZFX0lOUFVUUyA9IFtcbiAgJ29Db250ZXh0TWVudScsXG4gICdvQ29udGV4dE1lbnVEYXRhJ1xuXTtcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW29Db250ZXh0TWVudV0nLFxuICBpbnB1dHM6IERFRkFVTFRfQ09OVEVYVF9NRU5VX0RJUkVDVElWRV9JTlBVVFNcbn0pXG5leHBvcnQgY2xhc3MgT0NvbnRleHRNZW51RGlyZWN0aXZlIHtcblxuICBwdWJsaWMgb0NvbnRleHRNZW51OiBPQ29udGV4dE1lbnVDb21wb25lbnQ7XG4gIHB1YmxpYyBvQ29udGV4dE1lbnVEYXRhOiBhbnk7XG5cbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGluamVjdG9yOiBJbmplY3Rvcikge1xuICB9XG5cbiAgQEhvc3RMaXN0ZW5lcignY29udGV4dG1lbnUnLCBbJyRldmVudCddKVxuICBwdWJsaWMgb25SaWdodENsaWNrKGV2ZW50OiBNb3VzZUV2ZW50KTogdm9pZCB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICBpZiAoVXRpbC5pc0RlZmluZWQodGhpcy5vQ29udGV4dE1lbnUpKSB7XG4gICAgICB0aGlzLm9Db250ZXh0TWVudS5vQ29udGV4dE1lbnVTZXJ2aWNlLnNob3dDb250ZXh0TWVudS5uZXh0KHtcbiAgICAgICAgY29udGV4dE1lbnU6IHRoaXMub0NvbnRleHRNZW51LFxuICAgICAgICBldmVudDogZXZlbnQsXG4gICAgICAgIGRhdGE6IHRoaXMub0NvbnRleHRNZW51RGF0YVxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbn1cbiJdfQ==