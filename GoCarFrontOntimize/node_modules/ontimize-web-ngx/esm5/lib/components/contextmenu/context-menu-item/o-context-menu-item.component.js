import * as tslib_1 from "tslib";
import { Component, EventEmitter, forwardRef } from '@angular/core';
import { DEFAULT_INPUTS_O_CONTEXT_MENU_ITEMS, OComponentMenuBaseItem } from '../o-content-menu-base-item.class';
export var DEFAULT_CONTEXT_MENU_ITEM_OUTPUTS = [
    'execute'
];
export var DEFAULT_INPUTS_O_CONTEXT_MENU_ITEM = tslib_1.__spread(DEFAULT_INPUTS_O_CONTEXT_MENU_ITEMS);
var OContextMenuItemComponent = (function (_super) {
    tslib_1.__extends(OContextMenuItemComponent, _super);
    function OContextMenuItemComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.execute = new EventEmitter();
        _this.type = OComponentMenuBaseItem.TYPE_ITEM_MENU;
        return _this;
    }
    OContextMenuItemComponent.prototype.onClick = function (event) {
        event.preventDefault();
        event.stopPropagation();
        this.triggerExecute(this.data, event);
    };
    OContextMenuItemComponent.prototype.triggerExecute = function (data, $event) {
        if (!this.enabled) {
            return;
        }
        this.execute.emit({ event: $event, data: data });
    };
    OContextMenuItemComponent.decorators = [
        { type: Component, args: [{
                    selector: 'o-context-menu-item',
                    template: ' ',
                    inputs: DEFAULT_INPUTS_O_CONTEXT_MENU_ITEM,
                    outputs: DEFAULT_CONTEXT_MENU_ITEM_OUTPUTS,
                    providers: [{ provide: OComponentMenuBaseItem, useExisting: forwardRef(function () { return OContextMenuItemComponent; }) }]
                }] }
    ];
    return OContextMenuItemComponent;
}(OComponentMenuBaseItem));
export { OContextMenuItemComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiby1jb250ZXh0LW1lbnUtaXRlbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9vbnRpbWl6ZS13ZWItbmd4LyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvY29udGV4dG1lbnUvY29udGV4dC1tZW51LWl0ZW0vby1jb250ZXh0LW1lbnUtaXRlbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUdwRSxPQUFPLEVBQUUsbUNBQW1DLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUVoSCxNQUFNLENBQUMsSUFBTSxpQ0FBaUMsR0FBRztJQUMvQyxTQUFTO0NBQ1YsQ0FBQztBQUVGLE1BQU0sQ0FBQyxJQUFNLGtDQUFrQyxvQkFDMUMsbUNBQW1DLENBQ3ZDLENBQUM7QUFFRjtJQU8rQyxxREFBc0I7SUFQckU7UUFBQSxxRUF3QkM7UUFmUSxhQUFPLEdBQTZDLElBQUksWUFBWSxFQUFFLENBQUM7UUFDdkUsVUFBSSxHQUFHLHNCQUFzQixDQUFDLGNBQWMsQ0FBQzs7SUFjdEQsQ0FBQztJQVpRLDJDQUFPLEdBQWQsVUFBZSxLQUFpQjtRQUM5QixLQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDdkIsS0FBSyxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQ3hCLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztJQUN4QyxDQUFDO0lBRU0sa0RBQWMsR0FBckIsVUFBc0IsSUFBUyxFQUFFLE1BQWM7UUFDN0MsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDakIsT0FBTztTQUNSO1FBQ0QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ25ELENBQUM7O2dCQXZCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtvQkFDL0IsUUFBUSxFQUFFLEdBQUc7b0JBQ2IsTUFBTSxFQUFFLGtDQUFrQztvQkFDMUMsT0FBTyxFQUFFLGlDQUFpQztvQkFDMUMsU0FBUyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsV0FBVyxFQUFFLFVBQVUsQ0FBQyxjQUFNLE9BQUEseUJBQXlCLEVBQXpCLENBQXlCLENBQUMsRUFBRSxDQUFDO2lCQUMzRzs7SUFrQkQsZ0NBQUM7Q0FBQSxBQXhCRCxDQU8rQyxzQkFBc0IsR0FpQnBFO1NBakJZLHlCQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBmb3J3YXJkUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IE9uRXhlY3V0ZVRhYmxlQ29udGV4dEV2ZW50IH0gZnJvbSAnLi4vLi4vLi4vaW50ZXJmYWNlcy9vLXRhYmxlLWNvbnRleHQtb25leGVjdXRlLmludGVyZmFjZSc7XG5pbXBvcnQgeyBERUZBVUxUX0lOUFVUU19PX0NPTlRFWFRfTUVOVV9JVEVNUywgT0NvbXBvbmVudE1lbnVCYXNlSXRlbSB9IGZyb20gJy4uL28tY29udGVudC1tZW51LWJhc2UtaXRlbS5jbGFzcyc7XG5cbmV4cG9ydCBjb25zdCBERUZBVUxUX0NPTlRFWFRfTUVOVV9JVEVNX09VVFBVVFMgPSBbXG4gICdleGVjdXRlJ1xuXTtcblxuZXhwb3J0IGNvbnN0IERFRkFVTFRfSU5QVVRTX09fQ09OVEVYVF9NRU5VX0lURU0gPSBbXG4gIC4uLkRFRkFVTFRfSU5QVVRTX09fQ09OVEVYVF9NRU5VX0lURU1TXG5dO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdvLWNvbnRleHQtbWVudS1pdGVtJyxcbiAgdGVtcGxhdGU6ICcgJyxcbiAgaW5wdXRzOiBERUZBVUxUX0lOUFVUU19PX0NPTlRFWFRfTUVOVV9JVEVNLFxuICBvdXRwdXRzOiBERUZBVUxUX0NPTlRFWFRfTUVOVV9JVEVNX09VVFBVVFMsXG4gIHByb3ZpZGVyczogW3sgcHJvdmlkZTogT0NvbXBvbmVudE1lbnVCYXNlSXRlbSwgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gT0NvbnRleHRNZW51SXRlbUNvbXBvbmVudCkgfV1cbn0pXG5leHBvcnQgY2xhc3MgT0NvbnRleHRNZW51SXRlbUNvbXBvbmVudCBleHRlbmRzIE9Db21wb25lbnRNZW51QmFzZUl0ZW0ge1xuXG4gIHB1YmxpYyBleGVjdXRlOiBFdmVudEVtaXR0ZXI8T25FeGVjdXRlVGFibGVDb250ZXh0RXZlbnQ+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBwdWJsaWMgdHlwZSA9IE9Db21wb25lbnRNZW51QmFzZUl0ZW0uVFlQRV9JVEVNX01FTlU7XG5cbiAgcHVibGljIG9uQ2xpY2soZXZlbnQ6IE1vdXNlRXZlbnQpOiB2b2lkIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIHRoaXMudHJpZ2dlckV4ZWN1dGUodGhpcy5kYXRhLCBldmVudCk7XG4gIH1cblxuICBwdWJsaWMgdHJpZ2dlckV4ZWN1dGUoZGF0YTogYW55LCAkZXZlbnQ/OiBFdmVudCk6IHZvaWQge1xuICAgIGlmICghdGhpcy5lbmFibGVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuZXhlY3V0ZS5lbWl0KHsgZXZlbnQ6ICRldmVudCwgZGF0YTogZGF0YSB9KTtcbiAgfVxufVxuIl19