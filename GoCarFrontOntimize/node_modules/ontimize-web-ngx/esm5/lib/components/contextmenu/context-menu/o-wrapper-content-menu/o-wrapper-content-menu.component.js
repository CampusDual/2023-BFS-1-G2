import { Component, Injector, Input, ViewChild } from '@angular/core';
import { MatMenu } from '@angular/material/menu';
import { OContextMenuGroupComponent } from '../../context-menu-group/o-context-menu-group.component';
import { OContextMenuItemComponent } from '../../context-menu-item/o-context-menu-item.component';
import { OContextMenuSeparatorComponent } from '../../context-menu-separator/o-context-menu-separator.component';
export var DEFAULT_CONTEXT_MENU_CONTENT_ITEM_INPUTS = [
    'items',
    'class'
];
var OWrapperContentMenuComponent = (function () {
    function OWrapperContentMenuComponent(injector) {
        this.injector = injector;
    }
    OWrapperContentMenuComponent.prototype.onClick = function (item, event) {
        if (item instanceof OContextMenuItemComponent) {
            item.triggerExecute(item.data, event);
        }
    };
    OWrapperContentMenuComponent.prototype.isGroup = function (item) {
        return item instanceof OContextMenuGroupComponent;
    };
    OWrapperContentMenuComponent.prototype.isSeparator = function (item) {
        return item instanceof OContextMenuSeparatorComponent;
    };
    OWrapperContentMenuComponent.prototype.isItem = function (item) {
        return item instanceof OContextMenuItemComponent;
    };
    OWrapperContentMenuComponent.prototype.getChildren = function (item) {
        return item instanceof OContextMenuGroupComponent ? item.children : [];
    };
    OWrapperContentMenuComponent.decorators = [
        { type: Component, args: [{
                    selector: 'o-wrapper-content-menu',
                    template: "<mat-menu #childMenu=\"matMenu\" [class]=\"class\" [overlapTrigger]=\"false\" [hasBackdrop]=\"false\">\n  <ng-container *ngFor=\"let child of items\">\n    <!-- Handle branch node menu items -->\n    <span *ngIf=\"isGroup(child) && child.isVisible\">\n      <button mat-menu-item color=\"primary\" [matMenuTriggerFor]=\"menu.childMenu\" [disabled]=\"child.disabled\">\n        <mat-icon *ngIf=\"child.svgIcon != null\" [svgIcon]=\"child.svgIcon\"></mat-icon>\n        <mat-icon *ngIf=\"child.svgIcon == null && child.icon != null\">{{ child.icon }}</mat-icon>\n        <span>{{ child.label | oTranslate}}</span>\n      </button>\n      <o-wrapper-content-menu #menu [items]=\"getChildren(child)\" [class]=\"class\"></o-wrapper-content-menu>\n    </span>\n    <!-- Handle leaf node menu items -->\n    <button mat-menu-item (click)=\"onClick(child, $event)\" [disabled]=\"child.disabled\" *ngIf=\"isItem(child) && child.isVisible\">\n      <mat-icon *ngIf=\"child.svgIcon != null\" [svgIcon]=\"child.svgIcon\"></mat-icon>\n      <mat-icon *ngIf=\"child.svgIcon == null && child.icon != null\">{{ child.icon }}</mat-icon>\n      <span>{{ child.label | oTranslate}} </span>\n    </button>\n    <!-- separator leaf node menu items -->\n    <mat-divider *ngIf=\"isSeparator(child) && child.isVisible\"></mat-divider>\n  </ng-container>\n</mat-menu>\n",
                    inputs: DEFAULT_CONTEXT_MENU_CONTENT_ITEM_INPUTS,
                    styles: ["mat-divider.mat-divider:first-child,mat-divider.mat-divider:last-child{display:none}.mat-icon{display:inline-flex}"]
                }] }
    ];
    OWrapperContentMenuComponent.ctorParameters = function () { return [
        { type: Injector }
    ]; };
    OWrapperContentMenuComponent.propDecorators = {
        items: [{ type: Input }],
        childMenu: [{ type: ViewChild, args: ['childMenu', { static: true },] }],
        menu: [{ type: ViewChild, args: [OWrapperContentMenuComponent, { static: true },] }]
    };
    return OWrapperContentMenuComponent;
}());
export { OWrapperContentMenuComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiby13cmFwcGVyLWNvbnRlbnQtbWVudS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9vbnRpbWl6ZS13ZWItbmd4LyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvY29udGV4dG1lbnUvY29udGV4dC1tZW51L28td3JhcHBlci1jb250ZW50LW1lbnUvby13cmFwcGVyLWNvbnRlbnQtbWVudS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN0RSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFFakQsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0seURBQXlELENBQUM7QUFDckcsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sdURBQXVELENBQUM7QUFDbEcsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0saUVBQWlFLENBQUM7QUFHakgsTUFBTSxDQUFDLElBQU0sd0NBQXdDLEdBQUc7SUFDdEQsT0FBTztJQUNQLE9BQU87Q0FDUixDQUFDO0FBRUY7SUFtQkUsc0NBQ1ksUUFBa0I7UUFBbEIsYUFBUSxHQUFSLFFBQVEsQ0FBVTtJQUMxQixDQUFDO0lBRUUsOENBQU8sR0FBZCxVQUFlLElBQTRCLEVBQUUsS0FBTTtRQUNqRCxJQUFJLElBQUksWUFBWSx5QkFBeUIsRUFBRTtZQUM3QyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7U0FDdkM7SUFDSCxDQUFDO0lBRU0sOENBQU8sR0FBZCxVQUFlLElBQTRCO1FBQ3pDLE9BQU8sSUFBSSxZQUFZLDBCQUEwQixDQUFDO0lBQ3BELENBQUM7SUFFTSxrREFBVyxHQUFsQixVQUFtQixJQUE0QjtRQUM3QyxPQUFPLElBQUksWUFBWSw4QkFBOEIsQ0FBQztJQUN4RCxDQUFDO0lBRU0sNkNBQU0sR0FBYixVQUFjLElBQTRCO1FBQ3hDLE9BQU8sSUFBSSxZQUFZLHlCQUF5QixDQUFDO0lBQ25ELENBQUM7SUFFTSxrREFBVyxHQUFsQixVQUFtQixJQUE0QjtRQUM3QyxPQUFPLElBQUksWUFBWSwwQkFBMEIsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0lBQ3pFLENBQUM7O2dCQTNDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHdCQUF3QjtvQkFDbEMsNjBDQUFvRDtvQkFFcEQsTUFBTSxFQUFFLHdDQUF3Qzs7aUJBQ2pEOzs7Z0JBbEJtQixRQUFROzs7d0JBdUJ6QixLQUFLOzRCQUdMLFNBQVMsU0FBQyxXQUFXLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFO3VCQUd2QyxTQUFTLFNBQUMsNEJBQTRCLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFOztJQTZCM0QsbUNBQUM7Q0FBQSxBQTdDRCxJQTZDQztTQXZDWSw0QkFBNEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEluamVjdG9yLCBJbnB1dCwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNYXRNZW51IH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvbWVudSc7XG5cbmltcG9ydCB7IE9Db250ZXh0TWVudUdyb3VwQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vY29udGV4dC1tZW51LWdyb3VwL28tY29udGV4dC1tZW51LWdyb3VwLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBPQ29udGV4dE1lbnVJdGVtQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vY29udGV4dC1tZW51LWl0ZW0vby1jb250ZXh0LW1lbnUtaXRlbS5jb21wb25lbnQnO1xuaW1wb3J0IHsgT0NvbnRleHRNZW51U2VwYXJhdG9yQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vY29udGV4dC1tZW51LXNlcGFyYXRvci9vLWNvbnRleHQtbWVudS1zZXBhcmF0b3IuY29tcG9uZW50JztcbmltcG9ydCB7IE9Db21wb25lbnRNZW51QmFzZUl0ZW0gfSBmcm9tICcuLi8uLi9vLWNvbnRlbnQtbWVudS1iYXNlLWl0ZW0uY2xhc3MnO1xuXG5leHBvcnQgY29uc3QgREVGQVVMVF9DT05URVhUX01FTlVfQ09OVEVOVF9JVEVNX0lOUFVUUyA9IFtcbiAgJ2l0ZW1zJyxcbiAgJ2NsYXNzJ1xuXTtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnby13cmFwcGVyLWNvbnRlbnQtbWVudScsXG4gIHRlbXBsYXRlVXJsOiAnby13cmFwcGVyLWNvbnRlbnQtbWVudS5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL28td3JhcHBlci1jb250ZW50LW1lbnUuY29tcG9uZW50LnNjc3MnXSxcbiAgaW5wdXRzOiBERUZBVUxUX0NPTlRFWFRfTUVOVV9DT05URU5UX0lURU1fSU5QVVRTXG59KVxuZXhwb3J0IGNsYXNzIE9XcmFwcGVyQ29udGVudE1lbnVDb21wb25lbnQge1xuXG4gIHB1YmxpYyBjbGFzczogc3RyaW5nO1xuXG4gIEBJbnB1dCgpXG4gIHB1YmxpYyBpdGVtczogT0NvbXBvbmVudE1lbnVCYXNlSXRlbVtdO1xuXG4gIEBWaWV3Q2hpbGQoJ2NoaWxkTWVudScsIHsgc3RhdGljOiB0cnVlIH0pXG4gIHB1YmxpYyBjaGlsZE1lbnU6IE1hdE1lbnU7XG5cbiAgQFZpZXdDaGlsZChPV3JhcHBlckNvbnRlbnRNZW51Q29tcG9uZW50LCB7IHN0YXRpYzogdHJ1ZSB9KVxuICBwdWJsaWMgbWVudTogT1dyYXBwZXJDb250ZW50TWVudUNvbXBvbmVudDtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcm90ZWN0ZWQgaW5qZWN0b3I6IEluamVjdG9yXG4gICkgeyB9XG5cbiAgcHVibGljIG9uQ2xpY2soaXRlbTogT0NvbXBvbmVudE1lbnVCYXNlSXRlbSwgZXZlbnQ/KTogdm9pZCB7XG4gICAgaWYgKGl0ZW0gaW5zdGFuY2VvZiBPQ29udGV4dE1lbnVJdGVtQ29tcG9uZW50KSB7XG4gICAgICBpdGVtLnRyaWdnZXJFeGVjdXRlKGl0ZW0uZGF0YSwgZXZlbnQpO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBpc0dyb3VwKGl0ZW06IE9Db21wb25lbnRNZW51QmFzZUl0ZW0pOiBib29sZWFuIHtcbiAgICByZXR1cm4gaXRlbSBpbnN0YW5jZW9mIE9Db250ZXh0TWVudUdyb3VwQ29tcG9uZW50O1xuICB9XG5cbiAgcHVibGljIGlzU2VwYXJhdG9yKGl0ZW06IE9Db21wb25lbnRNZW51QmFzZUl0ZW0pOiBib29sZWFuIHtcbiAgICByZXR1cm4gaXRlbSBpbnN0YW5jZW9mIE9Db250ZXh0TWVudVNlcGFyYXRvckNvbXBvbmVudDtcbiAgfVxuXG4gIHB1YmxpYyBpc0l0ZW0oaXRlbTogT0NvbXBvbmVudE1lbnVCYXNlSXRlbSk6IGJvb2xlYW4ge1xuICAgIHJldHVybiBpdGVtIGluc3RhbmNlb2YgT0NvbnRleHRNZW51SXRlbUNvbXBvbmVudDtcbiAgfVxuXG4gIHB1YmxpYyBnZXRDaGlsZHJlbihpdGVtOiBPQ29tcG9uZW50TWVudUJhc2VJdGVtKSB7XG4gICAgcmV0dXJuIGl0ZW0gaW5zdGFuY2VvZiBPQ29udGV4dE1lbnVHcm91cENvbXBvbmVudCA/IGl0ZW0uY2hpbGRyZW4gOiBbXTtcbiAgfVxuXG59XG4iXX0=