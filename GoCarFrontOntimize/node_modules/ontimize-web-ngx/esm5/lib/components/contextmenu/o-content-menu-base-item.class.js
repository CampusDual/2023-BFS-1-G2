import { Util } from '../../util/util';
export var DEFAULT_INPUTS_O_CONTEXT_MENU_ITEMS = [
    'attr',
    'ovisible: visible',
    'icon',
    'data',
    'label',
    'oenabled: enabled',
    'svgIcon: svg-icon'
];
var OComponentMenuBaseItem = (function () {
    function OComponentMenuBaseItem() {
        this.ovisible = true;
        this.type = OComponentMenuBaseItem.TYPE_GROUP_MENU;
        this.enabled = true;
    }
    Object.defineProperty(OComponentMenuBaseItem.prototype, "disabled", {
        get: function () {
            if (this.enabled instanceof Function) {
                return !this.enabled(this.data);
            }
            return !this.enabled;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OComponentMenuBaseItem.prototype, "isVisible", {
        get: function () {
            if (this.ovisible instanceof Function) {
                return this.ovisible(this.data);
            }
            return this.ovisible;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OComponentMenuBaseItem.prototype, "oenabled", {
        set: function (value) {
            if (value instanceof Function) {
                this.enabled = value;
            }
            else {
                this.enabled = this.parseInput(value, true);
            }
        },
        enumerable: true,
        configurable: true
    });
    OComponentMenuBaseItem.prototype.parseInput = function (value, defaultValue) {
        if (value instanceof Function || typeof value === 'boolean') {
            return value;
        }
        return Util.parseBoolean(value, defaultValue);
    };
    OComponentMenuBaseItem.TYPE_ITEM_MENU = 'item_menu';
    OComponentMenuBaseItem.TYPE_GROUP_MENU = 'item_group';
    OComponentMenuBaseItem.TYPE_SEPARATOR_MENU = 'item_separator';
    return OComponentMenuBaseItem;
}());
export { OComponentMenuBaseItem };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiby1jb250ZW50LW1lbnUtYmFzZS1pdGVtLmNsYXNzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vb250aW1pemUtd2ViLW5neC8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2NvbnRleHRtZW51L28tY29udGVudC1tZW51LWJhc2UtaXRlbS5jbGFzcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFdkMsTUFBTSxDQUFDLElBQU0sbUNBQW1DLEdBQUc7SUFDakQsTUFBTTtJQUNOLG1CQUFtQjtJQUNuQixNQUFNO0lBQ04sTUFBTTtJQUNOLE9BQU87SUFDUCxtQkFBbUI7SUFDbkIsbUJBQW1CO0NBQ3BCLENBQUM7QUFFRjtJQUFBO1FBS1MsYUFBUSxHQUF1QyxJQUFJLENBQUM7UUFFcEQsU0FBSSxHQUFHLHNCQUFzQixDQUFDLGVBQWUsQ0FBQztRQUk5QyxZQUFPLEdBQXVDLElBQUksQ0FBQztJQWdDNUQsQ0FBQztJQTdCQyxzQkFBSSw0Q0FBUTthQUFaO1lBQ0UsSUFBSSxJQUFJLENBQUMsT0FBTyxZQUFZLFFBQVEsRUFBRTtnQkFDcEMsT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQ2pDO1lBQ0QsT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUM7UUFDdkIsQ0FBQzs7O09BQUE7SUFFRCxzQkFBSSw2Q0FBUzthQUFiO1lBQ0UsSUFBSSxJQUFJLENBQUMsUUFBUSxZQUFZLFFBQVEsRUFBRTtnQkFDckMsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUNqQztZQUNELE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUN2QixDQUFDOzs7T0FBQTtJQUVELHNCQUFJLDRDQUFRO2FBQVosVUFBYSxLQUEyQztZQUN0RCxJQUFJLEtBQUssWUFBWSxRQUFRLEVBQUU7Z0JBQzdCLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO2FBQ3RCO2lCQUFNO2dCQUNMLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7YUFDN0M7UUFDSCxDQUFDOzs7T0FBQTtJQUVTLDJDQUFVLEdBQXBCLFVBQXFCLEtBQVUsRUFBRSxZQUFzQjtRQUNyRCxJQUFJLEtBQUssWUFBWSxRQUFRLElBQUksT0FBTyxLQUFLLEtBQUssU0FBUyxFQUFFO1lBQzNELE9BQU8sS0FBSyxDQUFDO1NBQ2Q7UUFDRCxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsS0FBSyxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQ2hELENBQUM7SUF2Q2EscUNBQWMsR0FBRyxXQUFXLENBQUM7SUFDN0Isc0NBQWUsR0FBRyxZQUFZLENBQUM7SUFDL0IsMENBQW1CLEdBQUcsZ0JBQWdCLENBQUM7SUF1Q3ZELDZCQUFDO0NBQUEsQUEzQ0QsSUEyQ0M7U0EzQ1ksc0JBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVXRpbCB9IGZyb20gJy4uLy4uL3V0aWwvdXRpbCc7XG5cbmV4cG9ydCBjb25zdCBERUZBVUxUX0lOUFVUU19PX0NPTlRFWFRfTUVOVV9JVEVNUyA9IFtcbiAgJ2F0dHInLFxuICAnb3Zpc2libGU6IHZpc2libGUnLFxuICAnaWNvbicsXG4gICdkYXRhJyxcbiAgJ2xhYmVsJyxcbiAgJ29lbmFibGVkOiBlbmFibGVkJyxcbiAgJ3N2Z0ljb246IHN2Zy1pY29uJ1xuXTtcblxuZXhwb3J0IGNsYXNzIE9Db21wb25lbnRNZW51QmFzZUl0ZW0ge1xuXG4gIHB1YmxpYyBzdGF0aWMgVFlQRV9JVEVNX01FTlUgPSAnaXRlbV9tZW51JztcbiAgcHVibGljIHN0YXRpYyBUWVBFX0dST1VQX01FTlUgPSAnaXRlbV9ncm91cCc7XG4gIHB1YmxpYyBzdGF0aWMgVFlQRV9TRVBBUkFUT1JfTUVOVSA9ICdpdGVtX3NlcGFyYXRvcic7XG4gIHB1YmxpYyBvdmlzaWJsZTogYm9vbGVhbiB8ICgoaXRlbTogYW55KSA9PiBib29sZWFuKSA9IHRydWU7XG4gIHB1YmxpYyBhdHRyO1xuICBwdWJsaWMgdHlwZSA9IE9Db21wb25lbnRNZW51QmFzZUl0ZW0uVFlQRV9HUk9VUF9NRU5VO1xuICBwdWJsaWMgaWNvbjogc3RyaW5nO1xuICBwdWJsaWMgZGF0YTogYW55O1xuICBwdWJsaWMgbGFiZWw6IHN0cmluZztcbiAgcHVibGljIGVuYWJsZWQ6IGJvb2xlYW4gfCAoKGl0ZW06IGFueSkgPT4gYm9vbGVhbikgPSB0cnVlO1xuICBwdWJsaWMgc3ZnSWNvbjogc3RyaW5nO1xuXG4gIGdldCBkaXNhYmxlZCgpOiBib29sZWFuIHtcbiAgICBpZiAodGhpcy5lbmFibGVkIGluc3RhbmNlb2YgRnVuY3Rpb24pIHtcbiAgICAgIHJldHVybiAhdGhpcy5lbmFibGVkKHRoaXMuZGF0YSk7XG4gICAgfVxuICAgIHJldHVybiAhdGhpcy5lbmFibGVkO1xuICB9XG5cbiAgZ2V0IGlzVmlzaWJsZSgpOiBib29sZWFuIHtcbiAgICBpZiAodGhpcy5vdmlzaWJsZSBpbnN0YW5jZW9mIEZ1bmN0aW9uKSB7XG4gICAgICByZXR1cm4gdGhpcy5vdmlzaWJsZSh0aGlzLmRhdGEpO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5vdmlzaWJsZTtcbiAgfVxuXG4gIHNldCBvZW5hYmxlZCh2YWx1ZTogKGJvb2xlYW4gfCAoKGl0ZW06IGFueSkgPT4gYm9vbGVhbikpKSB7XG4gICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgRnVuY3Rpb24pIHtcbiAgICAgIHRoaXMuZW5hYmxlZCA9IHZhbHVlO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmVuYWJsZWQgPSB0aGlzLnBhcnNlSW5wdXQodmFsdWUsIHRydWUpO1xuICAgIH1cbiAgfVxuXG4gIHByb3RlY3RlZCBwYXJzZUlucHV0KHZhbHVlOiBhbnksIGRlZmF1bHRWYWx1ZT86IGJvb2xlYW4pOiBib29sZWFuIHtcbiAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBGdW5jdGlvbiB8fCB0eXBlb2YgdmFsdWUgPT09ICdib29sZWFuJykge1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICByZXR1cm4gVXRpbC5wYXJzZUJvb2xlYW4odmFsdWUsIGRlZmF1bHRWYWx1ZSk7XG4gIH1cblxufVxuIl19