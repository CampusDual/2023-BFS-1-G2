import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Injector, ViewEncapsulation } from '@angular/core';
import { merge, Subscription } from 'rxjs';
import { OAppSidenavComponent } from '../o-app-sidenav.component';
export var DEFAULT_INPUTS_O_APP_SIDENAV_IMAGE = [
    'openedSrc: opened-src',
    'closedSrc: closed-src'
];
export var DEFAULT_OUTPUTS_O_APP_SIDENAV_IMAGE = [];
var OAppSidenavImageComponent = (function () {
    function OAppSidenavImageComponent(injector, cd) {
        this.injector = injector;
        this.cd = cd;
        this.subscription = new Subscription();
        this.sidenav = this.injector.get(OAppSidenavComponent);
    }
    OAppSidenavImageComponent.prototype.ngOnInit = function () {
        var _this = this;
        if (this.sidenav) {
            this.subscription.add(merge(this.sidenav.onSidenavClosedStart, this.sidenav.onSidenavOpenedStart).subscribe(function () { return _this.updateImage(); }));
        }
        this.updateImage();
    };
    OAppSidenavImageComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    OAppSidenavImageComponent.prototype.ngOnChanges = function (changes) {
        if (changes.openedSrc || changes.closedSrc) {
            this.updateImage();
        }
    };
    OAppSidenavImageComponent.prototype.updateImage = function () {
        if (this.sidenav && this.sidenav.sidenav && this.sidenav.sidenav.opened) {
            this.setOpenedImg();
        }
        else {
            this.setClosedImg();
        }
        this.cd.detectChanges();
    };
    Object.defineProperty(OAppSidenavImageComponent.prototype, "src", {
        get: function () {
            return this._src;
        },
        set: function (val) {
            this._src = val;
        },
        enumerable: true,
        configurable: true
    });
    OAppSidenavImageComponent.prototype.setOpenedImg = function () {
        this.src = this.openedSrc;
    };
    OAppSidenavImageComponent.prototype.setClosedImg = function () {
        this.src = this.closedSrc;
    };
    Object.defineProperty(OAppSidenavImageComponent.prototype, "showImage", {
        get: function () {
            return (this._src !== undefined && this._src.length > 0);
        },
        enumerable: true,
        configurable: true
    });
    OAppSidenavImageComponent.decorators = [
        { type: Component, args: [{
                    selector: 'o-app-sidenav-image',
                    inputs: DEFAULT_INPUTS_O_APP_SIDENAV_IMAGE,
                    outputs: DEFAULT_OUTPUTS_O_APP_SIDENAV_IMAGE,
                    template: "<div class=\"o-app-sidenav-image-container\" *ngIf=\"showImage\">\n  <img class=\"o-app-sidenav-image\" [src]=\"src\" alt=\"application sidenav image\" />\n</div>\n",
                    encapsulation: ViewEncapsulation.None,
                    host: {
                        '[class.o-app-sidenav-image]': 'true'
                    },
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    styles: [".sidenav-toggle-container+.o-app-sidenav-image .o-app-sidenav-image-container{padding-top:0;text-align:center}.mat-drawer-opened .o-app-sidenav-image .o-app-sidenav-image-container{text-align:center}.o-app-sidenav-image .o-app-sidenav-image-container{max-height:75px;margin:24px 0}.o-app-sidenav-image .o-app-sidenav-image-container .o-app-sidenav-image{max-width:100%;max-height:100%}"]
                }] }
    ];
    OAppSidenavImageComponent.ctorParameters = function () { return [
        { type: Injector },
        { type: ChangeDetectorRef }
    ]; };
    return OAppSidenavImageComponent;
}());
export { OAppSidenavImageComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiby1hcHAtc2lkZW5hdi1pbWFnZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9vbnRpbWl6ZS13ZWItbmd4LyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvYXBwLXNpZGVuYXYvaW1hZ2Uvby1hcHAtc2lkZW5hdi1pbWFnZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLGlCQUFpQixFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQStDLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2hLLE9BQU8sRUFBRSxLQUFLLEVBQUUsWUFBWSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBRTNDLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRWxFLE1BQU0sQ0FBQyxJQUFNLGtDQUFrQyxHQUFHO0lBQ2hELHVCQUF1QjtJQUN2Qix1QkFBdUI7Q0FDeEIsQ0FBQztBQUVGLE1BQU0sQ0FBQyxJQUFNLG1DQUFtQyxHQUFHLEVBQUUsQ0FBQztBQUV0RDtJQXFCRSxtQ0FDWSxRQUFrQixFQUNsQixFQUFxQjtRQURyQixhQUFRLEdBQVIsUUFBUSxDQUFVO1FBQ2xCLE9BQUUsR0FBRixFQUFFLENBQW1CO1FBSnZCLGlCQUFZLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQU0xQyxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLG9CQUFvQixDQUFDLENBQUM7SUFDekQsQ0FBQztJQUVELDRDQUFRLEdBQVI7UUFBQSxpQkFLQztRQUpDLElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNoQixJQUFJLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxvQkFBb0IsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLG9CQUFvQixDQUFDLENBQUMsU0FBUyxDQUFDLGNBQU0sT0FBQSxLQUFJLENBQUMsV0FBVyxFQUFFLEVBQWxCLENBQWtCLENBQUMsQ0FBQyxDQUFDO1NBQ3hJO1FBQ0QsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3JCLENBQUM7SUFFRCwrQ0FBVyxHQUFYO1FBQ0UsSUFBSSxDQUFDLFlBQVksQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNsQyxDQUFDO0lBRUQsK0NBQVcsR0FBWCxVQUFZLE9BQXNCO1FBQ2hDLElBQUksT0FBTyxDQUFDLFNBQVMsSUFBSSxPQUFPLENBQUMsU0FBUyxFQUFFO1lBQzFDLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztTQUNwQjtJQUNILENBQUM7SUFFRCwrQ0FBVyxHQUFYO1FBQ0UsSUFBSSxJQUFJLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRTtZQUN2RSxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7U0FDckI7YUFBTTtZQUNMLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztTQUNyQjtRQUNELElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDMUIsQ0FBQztJQUVELHNCQUFJLDBDQUFHO2FBSVA7WUFDRSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDbkIsQ0FBQzthQU5ELFVBQVEsR0FBVztZQUNqQixJQUFJLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQztRQUNsQixDQUFDOzs7T0FBQTtJQU1ELGdEQUFZLEdBQVo7UUFDRSxJQUFJLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDNUIsQ0FBQztJQUVELGdEQUFZLEdBQVo7UUFDRSxJQUFJLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDNUIsQ0FBQztJQUVELHNCQUFJLGdEQUFTO2FBQWI7WUFDRSxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksS0FBSyxTQUFTLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDM0QsQ0FBQzs7O09BQUE7O2dCQXhFRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtvQkFDL0IsTUFBTSxFQUFFLGtDQUFrQztvQkFDMUMsT0FBTyxFQUFFLG1DQUFtQztvQkFDNUMsZ0xBQW1EO29CQUVuRCxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtvQkFDckMsSUFBSSxFQUFFO3dCQUNKLDZCQUE2QixFQUFFLE1BQU07cUJBQ3RDO29CQUNELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNOztpQkFDaEQ7OztnQkF2QitELFFBQVE7Z0JBQXRDLGlCQUFpQjs7SUFzRm5ELGdDQUFDO0NBQUEsQUExRUQsSUEwRUM7U0E5RFkseUJBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQsIEluamVjdG9yLCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgT25Jbml0LCBTaW1wbGVDaGFuZ2VzLCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgbWVyZ2UsIFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQgeyBPQXBwU2lkZW5hdkNvbXBvbmVudCB9IGZyb20gJy4uL28tYXBwLXNpZGVuYXYuY29tcG9uZW50JztcblxuZXhwb3J0IGNvbnN0IERFRkFVTFRfSU5QVVRTX09fQVBQX1NJREVOQVZfSU1BR0UgPSBbXG4gICdvcGVuZWRTcmM6IG9wZW5lZC1zcmMnLFxuICAnY2xvc2VkU3JjOiBjbG9zZWQtc3JjJ1xuXTtcblxuZXhwb3J0IGNvbnN0IERFRkFVTFRfT1VUUFVUU19PX0FQUF9TSURFTkFWX0lNQUdFID0gW107XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ28tYXBwLXNpZGVuYXYtaW1hZ2UnLFxuICBpbnB1dHM6IERFRkFVTFRfSU5QVVRTX09fQVBQX1NJREVOQVZfSU1BR0UsXG4gIG91dHB1dHM6IERFRkFVTFRfT1VUUFVUU19PX0FQUF9TSURFTkFWX0lNQUdFLFxuICB0ZW1wbGF0ZVVybDogJy4vby1hcHAtc2lkZW5hdi1pbWFnZS5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL28tYXBwLXNpZGVuYXYtaW1hZ2UuY29tcG9uZW50LnNjc3MnXSxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgaG9zdDoge1xuICAgICdbY2xhc3Muby1hcHAtc2lkZW5hdi1pbWFnZV0nOiAndHJ1ZSdcbiAgfSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgT0FwcFNpZGVuYXZJbWFnZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95LCBPbkNoYW5nZXMge1xuXG4gIHByb3RlY3RlZCBzaWRlbmF2OiBPQXBwU2lkZW5hdkNvbXBvbmVudDtcbiAgcHJvdGVjdGVkIG9wZW5lZFNyYzogc3RyaW5nO1xuICBwcm90ZWN0ZWQgY2xvc2VkU3JjOiBzdHJpbmc7XG4gIHByaXZhdGUgX3NyYzogc3RyaW5nO1xuXG4gIHByb3RlY3RlZCBzdWJzY3JpcHRpb24gPSBuZXcgU3Vic2NyaXB0aW9uKCk7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJvdGVjdGVkIGluamVjdG9yOiBJbmplY3RvcixcbiAgICBwcm90ZWN0ZWQgY2Q6IENoYW5nZURldGVjdG9yUmVmXG4gICkge1xuICAgIHRoaXMuc2lkZW5hdiA9IHRoaXMuaW5qZWN0b3IuZ2V0KE9BcHBTaWRlbmF2Q29tcG9uZW50KTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIGlmICh0aGlzLnNpZGVuYXYpIHtcbiAgICAgIHRoaXMuc3Vic2NyaXB0aW9uLmFkZChtZXJnZSh0aGlzLnNpZGVuYXYub25TaWRlbmF2Q2xvc2VkU3RhcnQsIHRoaXMuc2lkZW5hdi5vblNpZGVuYXZPcGVuZWRTdGFydCkuc3Vic2NyaWJlKCgpID0+IHRoaXMudXBkYXRlSW1hZ2UoKSkpO1xuICAgIH1cbiAgICB0aGlzLnVwZGF0ZUltYWdlKCk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLnN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICB9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xuICAgIGlmIChjaGFuZ2VzLm9wZW5lZFNyYyB8fCBjaGFuZ2VzLmNsb3NlZFNyYykge1xuICAgICAgdGhpcy51cGRhdGVJbWFnZSgpO1xuICAgIH1cbiAgfVxuXG4gIHVwZGF0ZUltYWdlKCkge1xuICAgIGlmICh0aGlzLnNpZGVuYXYgJiYgdGhpcy5zaWRlbmF2LnNpZGVuYXYgJiYgdGhpcy5zaWRlbmF2LnNpZGVuYXYub3BlbmVkKSB7XG4gICAgICB0aGlzLnNldE9wZW5lZEltZygpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnNldENsb3NlZEltZygpO1xuICAgIH1cbiAgICB0aGlzLmNkLmRldGVjdENoYW5nZXMoKTtcbiAgfVxuXG4gIHNldCBzcmModmFsOiBzdHJpbmcpIHtcbiAgICB0aGlzLl9zcmMgPSB2YWw7XG4gIH1cblxuICBnZXQgc3JjKCkge1xuICAgIHJldHVybiB0aGlzLl9zcmM7XG4gIH1cblxuICBzZXRPcGVuZWRJbWcoKSB7XG4gICAgdGhpcy5zcmMgPSB0aGlzLm9wZW5lZFNyYztcbiAgfVxuXG4gIHNldENsb3NlZEltZygpIHtcbiAgICB0aGlzLnNyYyA9IHRoaXMuY2xvc2VkU3JjO1xuICB9XG5cbiAgZ2V0IHNob3dJbWFnZSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gKHRoaXMuX3NyYyAhPT0gdW5kZWZpbmVkICYmIHRoaXMuX3NyYy5sZW5ndGggPiAwKTtcbiAgfVxuXG59XG4iXX0=